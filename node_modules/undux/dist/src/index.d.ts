import * as RxJS from 'rxjs';
export declare type Undux<Actions extends object> = {
    [K in keyof Actions]: {
        key: K;
        previousValue: Actions[K];
        value: Actions[K];
    };
};
export interface Store<Actions extends object> {
    get<K extends keyof Actions>(key: K): Actions[K];
    set<K extends keyof Actions>(key: K): (value: Actions[K]) => void;
    on<K extends keyof Actions>(key: K): RxJS.Observable<Actions[K]>;
    onAll<K extends keyof Actions>(): RxJS.Observable<Undux<Actions>[keyof Actions]>;
    before<K extends keyof Actions>(key: K): RxJS.Observable<Undux<Actions>[K]>;
    beforeAll<K extends keyof Actions>(): RxJS.Observable<Undux<Actions>[keyof Actions]>;
}
export declare class StoreSnapshot<Actions extends object> implements Store<Actions> {
    private state;
    private store;
    constructor(state: Actions, store: StoreDefinition<Actions>);
    get<K extends keyof Actions>(key: K): Actions[K];
    set<K extends keyof Actions>(key: K): (value: Actions[K]) => void;
    on<K extends keyof Actions>(key: K): RxJS.Observable<Actions[K]>;
    onAll<K extends keyof Actions>(): RxJS.Observable<Undux<Actions>[keyof Actions]>;
    before<K extends keyof Actions>(key: K): RxJS.Observable<Undux<Actions>[K]>;
    beforeAll<K extends keyof Actions>(): RxJS.Observable<Undux<Actions>[keyof Actions]>;
    private assign<Actions, K>(key, value);
}
export declare class StoreDefinition<Actions extends object> implements Store<Actions> {
    private store;
    private alls;
    private befores;
    private emitter;
    constructor(state: Actions);
    before<K extends keyof Actions>(key: K): RxJS.Observable<Undux<Actions>[K]>;
    beforeAll<K extends keyof Actions>(): RxJS.Observable<Undux<Actions>[keyof Actions]>;
    on<K extends keyof Actions>(key: K): RxJS.Observable<Actions[K]>;
    onAll<K extends keyof Actions>(): RxJS.Observable<Undux<Actions>[keyof Actions]>;
    get<K extends keyof Actions>(key: K): Actions[K];
    set<K extends keyof Actions>(key: K): (value: Actions[K]) => void;
}
export declare function createStore<Actions extends object>(initialState: Actions): StoreDefinition<Actions>;
export declare type Plugin<Actions extends object> = (store: StoreDefinition<Actions>) => StoreDefinition<Actions>;
export * from './plugins/logger';
export * from './react';
