"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var typed_rx_emitter_1 = require("typed-rx-emitter");
var StoreSnapshot = /** @class */ (function () {
    function StoreSnapshot(state, store) {
        this.state = state;
        this.store = store;
    }
    StoreSnapshot.prototype.get = function (key) {
        return this.state[key];
    };
    StoreSnapshot.prototype.set = function (key) {
        return this.store.set(key);
    };
    StoreSnapshot.prototype.on = function (key) {
        return this.store.on(key);
    };
    StoreSnapshot.prototype.onAll = function () {
        return this.store.onAll();
    };
    StoreSnapshot.prototype.before = function (key) {
        return this.store.before(key);
    };
    StoreSnapshot.prototype.beforeAll = function () {
        return this.store.beforeAll();
    };
    StoreSnapshot.prototype.assign = function (key, value) {
        return new StoreSnapshot(Object.assign({}, this.state, (_a = {}, _a[key] = value, _a)), this.store);
        var _a;
    };
    return StoreSnapshot;
}());
exports.StoreSnapshot = StoreSnapshot;
var StoreDefinition = /** @class */ (function () {
    function StoreDefinition(state) {
        this.alls = new typed_rx_emitter_1.Emitter;
        this.befores = new typed_rx_emitter_1.Emitter;
        this.emitter = new typed_rx_emitter_1.Emitter;
        this.store = new StoreSnapshot(state, this);
    }
    StoreDefinition.prototype.before = function (key) {
        return this.befores.on(key);
    };
    StoreDefinition.prototype.beforeAll = function () {
        return this.alls.all();
    };
    StoreDefinition.prototype.on = function (key) {
        return this.emitter.on(key);
    };
    StoreDefinition.prototype.onAll = function () {
        return this.alls.all();
    };
    StoreDefinition.prototype.get = function (key) {
        return this.store.get(key);
    };
    StoreDefinition.prototype.set = function (key) {
        var _this = this;
        return function (value) {
            var previousValue = _this.store.get(key);
            _this.befores.emit(key, { key: key, previousValue: previousValue, value: value });
            _this.store = _this.store['assign'](key, value);
            _this.emitter.emit(key, value);
            _this.alls.emit(key, { key: key, previousValue: previousValue, value: value });
        };
    };
    return StoreDefinition;
}());
exports.StoreDefinition = StoreDefinition;
function createStore(initialState) {
    return new StoreDefinition(initialState);
}
exports.createStore = createStore;
__export(require("./plugins/logger"));
__export(require("./react"));
//# sourceMappingURL=index.js.map