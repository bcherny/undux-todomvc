import { Observable } from 'rxjs';
export declare class Emitter<Messages> {
    private emitterState;
    /**
     * Emit an event (silently fails if no listeners are hooked up yet)
     */
    emit<T extends keyof Messages>(type: T, data: Messages[T]): this;
    /**
     * Subscribe to an event
     */
    on<T extends keyof Messages>(type: T): Observable<Messages[T]>;
    /**
     * Subscribe to all events
     */
    all(): Observable<Messages[keyof Messages]>;
    private createChannel<T>(type);
    private deleteChannel<T>(type, observable);
    private hasChannel<T>(type);
}
