{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_getNative.js","webpack:///./src/store.ts","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///../undux/src/utils.ts","webpack:///./node_modules/lodash/_nativeCreate.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_ListCache.js","webpack:///./node_modules/lodash/_assocIndexOf.js","webpack:///./node_modules/lodash/_getMapData.js","webpack:///./node_modules/lodash/identity.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/lodash/_MapCache.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_Map.js","webpack:///./node_modules/lodash/isLength.js","webpack:///../undux/src/index.ts","webpack:///./src/utils.ts","webpack:///./node_modules/lodash/keys.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_SetCache.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_toSource.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_baseUnary.js","webpack:///./node_modules/lodash/_cacheHas.js","webpack:///./node_modules/lodash/_defineProperty.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/isBuffer.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/lodash/_isIndex.js","webpack:///./node_modules/lodash/isTypedArray.js","webpack:///./node_modules/lodash/_Stack.js","webpack:///./node_modules/lodash/_baseIsEqual.js","webpack:///./node_modules/lodash/_equalArrays.js","webpack:///./node_modules/lodash/_isStrictComparable.js","webpack:///./node_modules/lodash/_matchesStrictComparable.js","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./src/constants/KEYCODES.ts","webpack:///./src/components/Input.tsx","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/App.tsx","webpack:///./node_modules/lodash/without.js","webpack:///./node_modules/lodash/_baseDifference.js","webpack:///./node_modules/lodash/_mapCacheClear.js","webpack:///./node_modules/lodash/_Hash.js","webpack:///./node_modules/lodash/_hashClear.js","webpack:///./node_modules/lodash/_baseIsNative.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_isMasked.js","webpack:///./node_modules/lodash/_coreJsData.js","webpack:///./node_modules/lodash/_getValue.js","webpack:///./node_modules/lodash/_hashDelete.js","webpack:///./node_modules/lodash/_hashGet.js","webpack:///./node_modules/lodash/_hashHas.js","webpack:///./node_modules/lodash/_hashSet.js","webpack:///./node_modules/lodash/_listCacheClear.js","webpack:///./node_modules/lodash/_listCacheDelete.js","webpack:///./node_modules/lodash/_listCacheGet.js","webpack:///./node_modules/lodash/_listCacheHas.js","webpack:///./node_modules/lodash/_listCacheSet.js","webpack:///./node_modules/lodash/_mapCacheDelete.js","webpack:///./node_modules/lodash/_isKeyable.js","webpack:///./node_modules/lodash/_mapCacheGet.js","webpack:///./node_modules/lodash/_mapCacheHas.js","webpack:///./node_modules/lodash/_mapCacheSet.js","webpack:///./node_modules/lodash/_setCacheAdd.js","webpack:///./node_modules/lodash/_setCacheHas.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/_baseIsNaN.js","webpack:///./node_modules/lodash/_strictIndexOf.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./node_modules/lodash/_baseRest.js","webpack:///./node_modules/lodash/_overRest.js","webpack:///./node_modules/lodash/_apply.js","webpack:///./node_modules/lodash/_setToString.js","webpack:///./node_modules/lodash/_baseSetToString.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_shortOut.js","webpack:///./node_modules/lodash/isArrayLikeObject.js","webpack:///../undux/node_modules/typed-rx-emitter/index.ts","webpack:///../undux/src/plugins/withLogger.ts","webpack:///../undux/src/plugins/withReduxDevtools.ts","webpack:///../undux/src/react/index.ts","webpack:///../undux/src/react/connect.tsx","webpack:///../undux/src/react/connectAs.tsx","webpack:///../undux/src/react/connectToTree.tsx","webpack:///../undux/src/react/connectToTreeAs.tsx","webpack:///./src/effects.ts","webpack:///./node_modules/lodash/mapValues.js","webpack:///./node_modules/lodash/_baseAssignValue.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_arrayLikeKeys.js","webpack:///./node_modules/lodash/_baseTimes.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/stubFalse.js","webpack:///./node_modules/lodash/_baseIsTypedArray.js","webpack:///./node_modules/lodash/_nodeUtil.js","webpack:///./node_modules/lodash/_baseKeys.js","webpack:///./node_modules/lodash/_isPrototype.js","webpack:///./node_modules/lodash/_nativeKeys.js","webpack:///./node_modules/lodash/_overArg.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./node_modules/lodash/_baseMatches.js","webpack:///./node_modules/lodash/_baseIsMatch.js","webpack:///./node_modules/lodash/_stackClear.js","webpack:///./node_modules/lodash/_stackDelete.js","webpack:///./node_modules/lodash/_stackGet.js","webpack:///./node_modules/lodash/_stackHas.js","webpack:///./node_modules/lodash/_stackSet.js","webpack:///./node_modules/lodash/_baseIsEqualDeep.js","webpack:///./node_modules/lodash/_arraySome.js","webpack:///./node_modules/lodash/_equalByTag.js","webpack:///./node_modules/lodash/_Uint8Array.js","webpack:///./node_modules/lodash/_mapToArray.js","webpack:///./node_modules/lodash/_setToArray.js","webpack:///./node_modules/lodash/_equalObjects.js","webpack:///./node_modules/lodash/_getAllKeys.js","webpack:///./node_modules/lodash/_baseGetAllKeys.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_getSymbols.js","webpack:///./node_modules/lodash/_arrayFilter.js","webpack:///./node_modules/lodash/stubArray.js","webpack:///./node_modules/lodash/_getTag.js","webpack:///./node_modules/lodash/_DataView.js","webpack:///./node_modules/lodash/_Promise.js","webpack:///./node_modules/lodash/_Set.js","webpack:///./node_modules/lodash/_WeakMap.js","webpack:///./node_modules/lodash/_getMatchData.js","webpack:///./node_modules/lodash/_baseMatchesProperty.js","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./node_modules/lodash/memoize.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/hasIn.js","webpack:///./node_modules/lodash/_baseHasIn.js","webpack:///./node_modules/lodash/_hasPath.js","webpack:///./node_modules/lodash/property.js","webpack:///./node_modules/lodash/_baseProperty.js","webpack:///./node_modules/lodash/_basePropertyDeep.js","webpack:///./src/components/AddTodoItem.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/TodoList.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/TodoItem.tsx","webpack:///./src/components/ToggleAll.tsx","webpack:///./node_modules/lodash/sum.js","webpack:///./node_modules/lodash/_baseSum.js","webpack:///../undux/node_modules/tslib/tslib.es6.js","webpack:///../undux/node_modules/rxjs/src/internal/util/isFunction.ts","webpack:///../undux/node_modules/rxjs/src/internal/config.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/hostReportError.ts","webpack:///../undux/node_modules/rxjs/src/internal/Observer.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isObject.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/tryCatch.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack:///../undux/node_modules/rxjs/src/internal/Subscription.ts","webpack:///../undux/node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack:///../undux/node_modules/rxjs/src/internal/Subscriber.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/pipe.ts","webpack:///../undux/node_modules/rxjs/src/internal/Observable.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack:///../undux/node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack:///../undux/node_modules/rxjs/src/internal/Subject.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/refCount.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/groupBy.ts","webpack:///../undux/node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/Action.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack:///../undux/node_modules/rxjs/src/internal/Scheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/empty.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isScheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/fromArray.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/of.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/scalar.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/throwError.ts","webpack:///../undux/node_modules/rxjs/src/internal/Notification.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/observeOn.ts","webpack:///../undux/node_modules/rxjs/src/internal/ReplaySubject.ts","webpack:///../undux/node_modules/rxjs/src/internal/AsyncSubject.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/Immediate.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/identity.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isObservable.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/EmptyError.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/map.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack:///../undux/node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack:///../undux/node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack:///../undux/node_modules/rxjs/src/internal/symbol/iterator.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isPromise.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/from.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/fromObservable.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/fromPromise.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isIterable.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/fromIterable.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/concat.ts","webpack:///../undux/node_modules/rxjs/src/internal/operators/concatAll.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/defer.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/generate.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/iif.ts","webpack:///../undux/node_modules/rxjs/src/internal/util/isNumeric.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/interval.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/merge.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/never.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/pairs.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/race.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/range.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/timer.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/using.ts","webpack:///../undux/node_modules/rxjs/src/internal/observable/zip.ts","webpack:///../undux/node_modules/rxjs/src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","React","freeGlobal","freeSelf","self","root","Function","isArray","Array","baseIsNative","getValue","getNative","undefined","undux_1","effects_1","initialState","fromLocalStorage","addTodoTitle","editingTodo","editingTodoNewTitle","route","todos","default","connectToTree","withEffects","withLogger","isObjectLike","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isImmutable","a","keys","equals","b","getDisplayName","Component","displayName","mapValues","f","result","forEach","k","some","nativeCreate","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","has","eq","assocIndexOf","array","isKeyable","getMapData","map","data","__data__","identity","isSymbol","INFINITY","toKey","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","isObject","type","Map","MAX_SAFE_INTEGER","isLength","typed_rx_emitter_1","utils_1","CYCLE_ERROR_MESSAGE","StoreSnapshot","state","storeDefinition","getState","freeze","DEFAULT_OPTIONS","isDevMode","StoreDefinition","options","_this","emitterOptions","onCycle","chain","console","error","join","alls","Emitter","emitter","storeSnapshot","setters","v","previousValue","assign","_a","emit","on","onAll","all","getCurrentSnapshot","toStore","createStore","__export","mapValues_1","__importDefault","keyFromLocalStorage","or","localStorage","getItem","JSON","parse","pluralize","count","word","replace","item","replacement","indexOf","slice","concat","arrayLikeKeys","baseKeys","isArrayLike","reIsDeepProp","reIsPlainProp","isKey","test","symbolTag","setCacheAdd","setCacheHas","SetCache","values","add","push","asyncTag","funcTag","genTag","proxyTag","isFunction","tag","global","funcToString","toString","toSource","func","e","other","arrayMap","iteratee","baseUnary","cacheHas","cache","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","arguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","webpackPolyfill","deprecate","paths","children","reIsUint","isIndex","baseIsTypedArray","nodeUtil","nodeIsTypedArray","isTypedArray","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","size","baseIsEqualDeep","baseIsEqual","bitmask","customizer","stack","arraySome","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","isStrictComparable","matchesStrictComparable","srcValue","castPath","baseGet","path","stringToPath","ENTER","ESCAPE","react_1","Input","autoFocus","className","onBlur","onChange","onKeyDown","placeholder","createElement","currentTarget","which","react_dom_1","App_1","store_1","render","Container","document","getElementsByClassName","ReactDOM","without_1","AddTodoItem_1","Footer_1","TodoList_1","ToggleAll_1","App","_super","apply","onDestroy","todo","props","store","onToggleAll","status","_","__assign","onToggle","isCompleted","onSave","title","__extends","Fragment","withStore","baseDifference","baseRest","isArrayLikeObject","without","arrayIncludes","arrayIncludesWith","LARGE_ARRAY_SIZE","comparator","includes","isCommon","valuesLength","outer","computed","valuesIndex","Hash","hash","string","hashClear","hashDelete","hashGet","hashHas","hashSet","isMasked","reIsHostCtor","funcProto","reIsNative","RegExp","g","eval","window","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","uid","exec","IE_PROTO","HASH_UNDEFINED","splice","pop","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","predicate","fromRight","overRest","setToString","start","nativeMax","Math","max","transform","args","otherArgs","thisArg","baseSetToString","shortOut","constant","configurable","writable","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","lastCalled","stamp","remaining","rxjs_1","ALL","emitterState","callChain","Set","observables","observers","from","hasChannel","emitOnChannel","createChannel","observable","Observable","deleteChannel","delete","next","subscribe","info","withReduxDevtools","devtools","__REDUX_DEVTOOLS_EXTENSION__","devTools","connect","wasTriggeredByDevtools","message","send","payload","newState","oldState","jumpToState","connect_1","connectAs_1","connectAs","connectToTree_1","connectToTreeAs_1","connectToTreeAs","class_1","subscription","setState","componentWillUnmount","unsubscribe","shouldComponentUpdate","stores","subscriptions","_b","__1","effects","Context","createContext","__MISSING_PROVIDER__","Consumer","isInitialized","Error","fx","Provider","initialStates","states","storeDefinitions","storeSnapshots","withStores","setItem","stringify","location","baseAssignValue","baseForOwn","baseIteratee","baseFor","createBaseFor","keysFunc","iterable","baseTimes","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","argsTag","typedArrayTags","freeProcess","process","types","require","binding","isPrototype","nativeKeys","Ctor","constructor","overArg","arg","baseMatches","baseMatchesProperty","baseIsMatch","getMatchData","source","matchData","noCustomizer","objValue","pairs","equalByTag","equalObjects","getTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","byteLength","byteOffset","buffer","convert","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","symbolsFunc","offset","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","DataView","Promise","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","hasIn","defaultValue","rePropName","reEscapeChar","memoizeCapped","charCodeAt","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","Cache","baseToString","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","KEYCODES_1","Input_1","AddTodoItem","keyCode","filters","Footer","onClearCompleted","filter","allTodos","activeCount","shouldShowClearButton","onClick","classnames_1","TodoItem_1","byRoute","completed","editing","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","argType","inner","TodoItem","onEdit","onSubmit","text","checked","onDoubleClick","sum_1","baseSum","sum","current","extendStatics","setPrototypeOf","__proto__","__","x","_enable_super_gross_mode_that_will_cause_bad_things","config","hostReportError","err","setTimeout","empty","closed","useDeprecatedSynchronousErrorHandling","complete","tryCatchTarget","tryCatcher","errorObject","tryCatch","fn","UnsubscriptionError_UnsubscriptionError","UnsubscriptionError","errors","Subscription_Subscription","Subscription","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","len","remove","flattenUnsubscriptionErrors","sub","teardown","EMPTY","_addParent","tmp","subscriptionIndex","parent","reduce","errs","rxSubscriber","for","Subscriber_Subscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","isTrustedSubscriber","obj","trustedSubscriber","Subscriber_SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","context","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","pipe","_i","pipeFromArray","fns","piped","input","prev","noop","Observable_Observable","_isScalar","_subscribe","lift","operator","sink","toSubscriber","nextOrObserver","_trySubscribe","promiseCtor","getPromiseCtor","reject","observable_observable","operations","toPromise","ObjectUnsubscribedError_ObjectUnsubscribedError","ObjectUnsubscribedError","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","Subject_AnonymousSubject","copy","thrownError","asObservable","AnonymousSubject","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","RefCountSubscriber","refCount","sharedConnection","_connection","ConnectableObservable_ConnectableObservable","ConnectableObservable","subjectFactory","getSubject","_subject","_isComplete","ConnectableObservable_ConnectableSubscriber","refCountOperatorFunction","connectableProto","ConnectableSubscriber","groupBy_GroupedObservable","GroupedObservable","groupSubject","refCountSubscription","groupBy_InnerRefCountSubscription","InnerRefCountSubscription","attemptedToUnsubscribe","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","AsyncAction_AsyncAction","AsyncAction","scheduler","work","schedule","delay","id","recycleAsyncId","pending","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction_QueueAction","QueueAction","Scheduler","SchedulerAction","AsyncScheduler_AsyncScheduler","AsyncScheduler","delegate","active","scheduled","action","shift","QueueScheduler","empty_empty","emptyScheduled","isScheduler","subscribeToArray","fromArray","of","scalar","throwError","dispatch","Notification_Notification","Notification","kind","hasValue","observe","observer","do","accept","toObservable","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","notification","scheduleMessage","ObserveOnMessage","ReplaySubject_ReplaySubject","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextTimeWindow","nextInfiniteTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_ObserveOnSubscriber","queue","spliceCount","eventsCount","time","AsyncSubject_AsyncSubject","AsyncSubject","hasNext","hasCompleted","nextHandle","tasksByHandle","Immediate","cb","handle","then","runIfPresent","AsapAction_AsapAction","AsapAction","AsapScheduler","AnimationFrameAction_AnimationFrameAction","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler","VirtualTimeScheduler_VirtualTimeScheduler","VirtualTimeScheduler","maxFrames","VirtualTimeScheduler_VirtualAction","frame","frameTimeFactor","VirtualAction","sort","sortActions","isObservable","ArgumentOutOfRangeError_ArgumentOutOfRangeError","ArgumentOutOfRangeError","EmptyError_EmptyError","EmptyError","TimeoutError_TimeoutError","TimeoutError","project","mapOperation","MapOperator","map_MapSubscriber","MapSubscriber","bindCallback","callbackFunc","resultSelector","params","bindCallback_dispatch","innerArgs","dispatchNext","bindNodeCallback","bindNodeCallback_dispatch","bindNodeCallback_dispatchError","bindNodeCallback_dispatchNext","OuterSubscriber_OuterSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber_InnerSubscriber","InnerSubscriber","subscribeToPromise","promise","iterator_iterator","getSymbolIterator","iterator","subscribeToIterable","done","return","subscribeToObservable","obs","isPromise","subscribeTo","subscribeToResult","outerSubscriber","NONE","combineLatest","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","isInteropObservable","fromObservable","fromPromise","isIterable","fromIterable","MergeMapOperator","concurrent","mergeMap_MergeMapSubscriber","MergeMapSubscriber","_tryNext","_innerSub","ish","mergeAll","mergeMap","ii","concatAll","defer","observableFactory","forkJoin","sources","forkJoin_ForkJoinSubscriber","ForkJoinSubscriber","haveValues","innerSubscription","_hasValue","fromEvent","target","eventName","setupSubscription","sourceObj","handler","isEventTarget","addEventListener","removeEventListener","source_1","isJQueryStyleEventEmitter","off","source_2","isNodeStyleEventEmitter","addListener","removeListener","source_3","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","generate_dispatch","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","val","parseFloat","interval","period","async_async","interval_dispatch","counter","merge","last","NEVER","never","onErrorResumeNext","first","remainder","subNext","pairs_dispatch","race","RaceOperator","race_RaceSubscriber","RaceSubscriber","hasFirst","range","range_dispatch","timer","dueTime","periodOrScheduler","due","timer_dispatch","using","resourceFactory","resource","zip","ZipOperator","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","__webpack_exports__"],"mappings":"mBACA,IAAAA,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAC,QAGA,IAAAC,OAAAJ,iBAAAE,WACAG,EAAAH,SACAI,GAAA,EACAH,YAUA,OANAI,QAAAL,UAAAM,KAAAJ,OAAAD,QAAAC,cAAAD,QAAAF,qBAGAG,OAAAE,GAAA,EAGAF,OAAAD,QAKAF,oBAAAQ,EAAAF,QAGAN,oBAAAS,EAAAV,iBAGAC,oBAAAU,EAAA,SAAAR,QAAAS,KAAAC,QACAZ,oBAAAa,EAAAX,QAAAS,OACAG,OAAAC,eAAAb,QAAAS,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CZ,oBAAAkB,EAAA,SAAAhB,SACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,QAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,QAAA,cAAiDmB,OAAA,KAQjDrB,oBAAAsB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAArB,oBAAAqB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFA1B,oBAAAkB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAArB,oBAAAU,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAzB,oBAAA6B,EAAA,SAAA1B,QACA,IAAAS,OAAAT,eAAAqB,WACA,SAAAM,aAA2B,OAAA3B,OAAA,SAC3B,SAAA4B,mBAAiC,OAAA5B,QAEjC,OADAH,oBAAAU,EAAAE,OAAA,IAAAA,QACAA,QAIAZ,oBAAAa,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtDjC,oBAAAoC,EAAA,GAIApC,wCAAAqC,EAAA,+BClFAlC,OAAAD,QAAAoC,oDCAA,IAAAC,WAAAvC,oBAAA,IAGAwC,SAAA,iBAAAC,iBAAA3B,iBAAA2B,KAGAC,KAAAH,YAAAC,UAAAG,SAAA,cAAAA,GAEAxC,OAAAD,QAAAwC,+BCeA,IAAAE,QAAAC,MAAAD,QAEAzC,OAAAD,QAAA0C,sDCzBA,IAAAE,aAAA9C,oBAAA,IACA+C,SAAA/C,oBAAA,IAeAG,OAAAD,QALA,SAAA8C,UAAAhB,OAAAL,KACA,IAAAN,MAAA0B,SAAAf,OAAAL,KACA,OAAAmB,aAAAzB,kBAAA4B,qHCbA,IAAAC,QAAAlD,oBAAA,IAEAmD,UAAAnD,oBAAA,KAWIoD,aAVJpD,oBAAA,IAUmBqD,kBACjBC,aAAc,GACdC,YAAa,KACbC,oBAAqB,KACrBC,MAAO,OACPC,WAGFxD,QAAAyD,QAAeT,QAAAU,cAAcR,aAAc,SAAAf,GAAK,OAAAc,UAAAU,YAAYX,QAAAY,WAAW,gCCOvE3D,OAAAD,QAJA,SAAA6D,aAAA1C,OACA,aAAAA,OAAA,iBAAAA,qDCzBA,IAAAF,OAAAnB,oBAAA,GACAgE,UAAAhE,oBAAA,IACAiE,eAAAjE,oBAAA,IAGAkE,QAAA,gBACAC,aAAA,qBAGAC,eAAAjD,cAAAC,iBAAA6B,EAkBA9C,OAAAD,QATA,SAAAmE,WAAAhD,OACA,aAAAA,WACA4B,IAAA5B,MAAA8C,aAAAD,QAEAE,kCAAAtD,OAAAO,OACA2C,UAAA3C,OACA4C,eAAA5C,mECJA,SAAAiD,YAA4BC,GAC1B,QAASA,GAAkB,iBAANA,IACnB,+BAAgCA,GAC7B,6BAA8BA,GASrC,SAAAC,KAAuC3D,GACrC,OAAOC,OAAO0D,KAAK3D,0DAxBrBX,QAAAuE,OAAA,SAAAA,OAA0BF,EAAMG,GAC9B,OAAIJ,YAAYC,IAAMD,YAAYI,GACzBH,EAAEE,OAAOC,GAEXH,IAAMG,GAOfxE,QAAAoE,wBAOApE,QAAAyE,eAAA,SAAAA,eAAkCC,WAChC,OAAOA,UAAUC,aAAeD,UAAUjE,MAAQ,aAIpDT,QAAAsE,UAIAtE,QAAA4E,UAAA,SAAAA,UACEjE,EACAkE,GAEA,IAAIC,UAIJ,OAHAR,KAAK3D,GAAGoE,QAAQ,SAAAC,GACd,OAAAF,OAAOE,GAAKH,EAAElE,EAAEqE,GAAWA,KAEtBF,QAGT9E,QAAAiF,KAAA,SAAAA,KAAuCtE,EAAMkE,GAC3C,OAAOP,KAAK3D,GAAGsE,KAAK,SAAAD,GAAK,OAAAH,EAAElE,EAAEqE,GAAIA,oDChDnC,IAGAE,aAHApF,oBAAA,EAGAgD,CAAAlC,OAAA,UAEAX,OAAAD,QAAAkF,2DCLA,IAGAjE,OAHAnB,oBAAA,GAGAmB,OAEAhB,OAAAD,QAAAiB,qDCLA,IAAAkE,eAAArF,oBAAA,IACAsF,gBAAAtF,oBAAA,IACAuF,aAAAvF,oBAAA,IACAwF,aAAAxF,oBAAA,IACAyF,aAAAzF,oBAAA,IASA,SAAA0F,UAAAC,SACA,IAAAC,OAAA,EACAC,OAAA,MAAAF,QAAA,EAAAA,QAAAE,OAGA,IADAC,KAAAC,UACAH,MAAAC,QAAA,CACA,IAAAG,MAAAL,QAAAC,OACAE,KAAAG,IAAAD,MAAA,GAAAA,MAAA,KAKAN,UAAAxD,UAAA6D,MAAAV,eACAK,UAAAxD,UAAA,OAAAoD,gBACAI,UAAAxD,UAAAjB,IAAAsE,aACAG,UAAAxD,UAAAgE,IAAAV,aACAE,UAAAxD,UAAA+D,IAAAR,aAEAtF,OAAAD,QAAAwF,wDC/BA,IAAAS,GAAAnG,oBAAA,IAoBAG,OAAAD,QAVA,SAAAkG,aAAAC,MAAA1E,KAEA,IADA,IAAAkE,OAAAQ,MAAAR,OACAA,UACA,GAAAM,GAAAE,MAAAR,QAAA,GAAAlE,KACA,OAAAkE,OAGA,wDCjBA,IAAAS,UAAAtG,oBAAA,IAiBAG,OAAAD,QAPA,SAAAqG,WAAAC,IAAA7E,KACA,IAAA8E,KAAAD,IAAAE,SACA,OAAAJ,UAAA3E,KACA8E,KAAA,iBAAA9E,IAAA,iBACA8E,KAAAD,+BCMArG,OAAAD,QAJA,SAAAyG,SAAAtF,OACA,OAAAA,qDCjBA,IAAAuF,SAAA5G,oBAAA,IAGA6G,SAAA,IAiBA1G,OAAAD,QARA,SAAA4G,MAAAzF,OACA,oBAAAA,OAAAuF,SAAAvF,OACA,OAAAA,MAEA,IAAA2D,OAAA3D,MAAA,GACA,WAAA2D,QAAA,EAAA3D,QAAAwF,SAAA,KAAA7B,sDCjBA,IAAA+B,cAAA/G,oBAAA,IACAgH,eAAAhH,oBAAA,IACAiH,YAAAjH,oBAAA,IACAkH,YAAAlH,oBAAA,IACAmH,YAAAnH,oBAAA,IASA,SAAAoH,SAAAzB,SACA,IAAAC,OAAA,EACAC,OAAA,MAAAF,QAAA,EAAAA,QAAAE,OAGA,IADAC,KAAAC,UACAH,MAAAC,QAAA,CACA,IAAAG,MAAAL,QAAAC,OACAE,KAAAG,IAAAD,MAAA,GAAAA,MAAA,KAKAoB,SAAAlF,UAAA6D,MAAAgB,cACAK,SAAAlF,UAAA,OAAA8E,eACAI,SAAAlF,UAAAjB,IAAAgG,YACAG,SAAAlF,UAAAgE,IAAAgB,YACAE,SAAAlF,UAAA+D,IAAAkB,YAEAhH,OAAAD,QAAAkH,mCCDAjH,OAAAD,QALA,SAAAmH,SAAAhG,OACA,IAAAiG,YAAAjG,MACA,aAAAA,QAAA,UAAAiG,MAAA,YAAAA,qDC3BA,IAIAC,IAJAvH,oBAAA,EAIAgD,CAHAhD,oBAAA,GAGA,OAEAG,OAAAD,QAAAqH,8BCLA,IAAAC,iBAAA,iBAiCArH,OAAAD,QALA,SAAAuH,SAAApG,OACA,uBAAAA,OACAA,OAAA,GAAAA,MAAA,MAAAA,OAAAmG,qNC9BA,IAAAE,mBAAA1H,oBAAA,IACA2H,QAAA3H,oBAAA,GAEM4H,oBAAsB,yMAmB5BC,cAAA,WACE,SAAAA,cACUC,MACAC,iBADAjC,KAAAgC,YACAhC,KAAAiC,gCAWZ,OATEF,cAAA3F,UAAAjB,IAAA,SAA2BU,KACzB,OAAOmE,KAAKgC,MAAMnG,MAEpBkG,cAAA3F,UAAA+D,IAAA,SAA2BtE,KACzB,OAAOmE,KAAKiC,gBAAgB9B,IAAItE,MAElCkG,cAAA3F,UAAA8F,SAAA,WACE,OAAOlH,OAAOmH,OAAOnC,KAAKgC,QAE9BD,cAdA,GAAa3H,QAAA2H,4BAoBb,IAAIK,iBACFC,WAAW,GAGbC,gBAAA,WAOE,SAAAA,gBAAYN,MAAcO,SAA1B,IAAAC,MAAAxC,KAEMyC,gBACFJ,UAAWE,QAAQF,UACnBK,QAAO,SAACC,OACNC,QAAQC,MAAMf,oBAAsBa,MAAMG,KAAK,WAKnD9C,KAAK+C,KAAO,IAAInB,mBAAAoB,QAAQP,gBACxBzC,KAAKiD,QAAU,IAAIrB,mBAAAoB,QAAQP,gBAG3BzC,KAAKkD,cAAgB,IAAInB,cAAcC,MAAOhC,MAG9CA,KAAKmD,QAAUtB,QAAA7C,UAAUgD,MAAO,SAACoB,EAAGvH,KAClC,gBAACN,cACK8H,cAAgBb,MAAKU,cAAc/H,IAAIU,KAC3C2G,MAAKU,cAAgB,IAAInB,cACvB/G,OAAOsI,UAAWd,MAAKU,cAAchB,aAAUqB,OAAK1H,KAAMN,MAAKgI,KAC/Df,OAEFA,MAAKS,QAAQO,KAAK3H,IAAKN,OACvBiH,MAAKO,KAAKS,KAAK3H,KAAOA,IAAGA,IAAEwH,cAAaA,cAAE9H,MAAKA,WAyBvD,OArBE+G,gBAAAlG,UAAAqH,GAAA,SAA0B5H,KACxB,OAAOmE,KAAKiD,QAAQQ,GAAG5H,MAEzByG,gBAAAlG,UAAAsH,MAAA,WACE,OAAO1D,KAAK+C,KAAKY,OAEnBrB,gBAAAlG,UAAAjB,IAAA,SAA2BU,KACzB,OAAOmE,KAAKkD,cAAc/H,IAAIU,MAEhCyG,gBAAAlG,UAAA+D,IAAA,SAA2BtE,KACzB,OAAOmE,KAAKmD,QAAQtH,MAEtByG,gBAAAlG,UAAAwH,mBAAA,WACE,OAAO5D,KAAKkD,eAEdZ,gBAAAlG,UAAAyH,QAAA,WACE,OAAO7D,KAAKkD,eAEdZ,gBAAAlG,UAAA8F,SAAA,WACE,OAAOlC,KAAKkD,cAAchB,YAE9BI,gBAzDA,GAAalI,QAAAkI,gCA2DblI,QAAA0J,YAAA,SAAAA,YACExG,aACAiF,SAEA,YAFA,IAAAA,kBAAAH,iBAEO,IAAIE,gBAAuBhF,aAAciF,UAelDwB,SAAA7J,oBAAA,KACA6J,SAAA7J,oBAAA,KACA6J,SAAA7J,oBAAA,mOC/HA,IAAA8J,YAAAC,gBAAA/J,oBAAA,MAMA,SAAAgK,oBAAgCC,GAAOtI,KACrC,IAAIN,MAAQ6I,aAAaC,QAAQxI,KACjC,OAAc,OAAVN,MACK+I,KAAKC,MAAMhJ,OAEb4I,GATT/J,QAAAmD,iBAAA,SAAAA,iBAAmDrB,QACjD,OAAO8H,YAAAnG,QAAU3B,OAAQgI,sBAW3B9J,QAAAoK,UAAA,SAAAA,UAA0BC,MAAeC,MACvC,OAAiB,IAAVD,MAAcC,KAAOA,KAAO,KAGrCtK,QAAAuK,QAAA,SAAAA,QAA2BpE,MAAYqE,KAASC,aAC9C,IAAI/E,MAAQS,MAAMuE,QAAQF,MAC1B,OAAI9E,MAAQ,EACHS,MAGJA,MAAMwE,MAAM,EAAGjF,OAAMkF,QACxBH,aACGtE,MAAMwE,MAAMjF,MAAQ,mDC1B3B,IAAAmF,cAAA/K,oBAAA,KACAgL,SAAAhL,oBAAA,KACAiL,YAAAjL,oBAAA,IAkCAG,OAAAD,QAJA,SAAAsE,KAAAxC,QACA,OAAAiJ,YAAAjJ,QAAA+I,cAAA/I,QAAAgJ,SAAAhJ,uDCjCA,IAAAY,QAAA5C,oBAAA,GACA4G,SAAA5G,oBAAA,IAGAkL,aAAA,mDACAC,cAAA,QAuBAhL,OAAAD,QAbA,SAAAkL,MAAA/J,MAAAW,QACA,GAAAY,QAAAvB,OACA,SAEA,IAAAiG,YAAAjG,MACA,kBAAAiG,MAAA,UAAAA,MAAA,WAAAA,MACA,MAAAjG,QAAAuF,SAAAvF,SAGA8J,cAAAE,KAAAhK,SAAA6J,aAAAG,KAAAhK,QACA,MAAAW,QAAAX,SAAAP,OAAAkB,uDCzBA,IAAAqC,WAAArE,oBAAA,GACA+D,aAAA/D,oBAAA,GAGAsL,UAAA,kBAwBAnL,OAAAD,QALA,SAAA0G,SAAAvF,OACA,uBAAAA,OACA0C,aAAA1C,QAAAgD,WAAAhD,QAAAiK,yDCzBA,IAAAlE,SAAApH,oBAAA,IACAuL,YAAAvL,oBAAA,IACAwL,YAAAxL,oBAAA,IAUA,SAAAyL,SAAAC,QACA,IAAA9F,OAAA,EACAC,OAAA,MAAA6F,OAAA,EAAAA,OAAA7F,OAGA,IADAC,KAAAY,SAAA,IAAAU,WACAxB,MAAAC,QACAC,KAAA6F,IAAAD,OAAA9F,QAKA6F,SAAAvJ,UAAAyJ,IAAAF,SAAAvJ,UAAA0J,KAAAL,YACAE,SAAAvJ,UAAAgE,IAAAsF,YAEArL,OAAAD,QAAAuL,uDC1BA,IAAApH,WAAArE,oBAAA,GACAqH,SAAArH,oBAAA,IAGA6L,SAAA,yBACAC,QAAA,oBACAC,OAAA,6BACAC,SAAA,iBA6BA7L,OAAAD,QAVA,SAAA+L,WAAA5K,OACA,IAAAgG,SAAAhG,OACA,SAIA,IAAA6K,IAAA7H,WAAAhD,OACA,OAAA6K,KAAAJ,SAAAI,KAAAH,QAAAG,KAAAL,UAAAK,KAAAF,yDCjCA,SAAAG,QACA,IAAA5J,WAAA,iBAAA4J,uBAAArL,iBAAAqL,OAEAhM,OAAAD,QAAAqC,0ECFA,IAGA6J,aAHAzJ,SAAAT,UAGAmK,SAqBAlM,OAAAD,QAZA,SAAAoM,SAAAC,MACA,SAAAA,KAAA,CACA,IACA,OAAAH,aAAA7L,KAAAgM,MACK,MAAAC,IACL,IACA,OAAAD,KAAA,GACK,MAAAC,KAEL,oCCcArM,OAAAD,QAJA,SAAAiG,GAAA9E,MAAAoL,OACA,OAAApL,QAAAoL,OAAApL,cAAAoL,wCCbAtM,OAAAD,QAXA,SAAAwM,SAAArG,MAAAsG,UAKA,IAJA,IAAA/G,OAAA,EACAC,OAAA,MAAAQ,MAAA,EAAAA,MAAAR,OACAb,OAAAnC,MAAAgD,UAEAD,MAAAC,QACAb,OAAAY,OAAA+G,SAAAtG,MAAAT,aAAAS,OAEA,OAAArB,kCCJA7E,OAAAD,QANA,SAAA0M,UAAAL,MACA,gBAAAlL,OACA,OAAAkL,KAAAlL,mCCGAlB,OAAAD,QAJA,SAAA2M,SAAAC,MAAAnL,KACA,OAAAmL,MAAA5G,IAAAvE,oDCTA,IAAAqB,UAAAhD,oBAAA,GAEAe,eAAA,WACA,IACA,IAAAwL,KAAAvJ,UAAAlC,OAAA,kBAEA,OADAyL,QAAW,OACXA,KACG,MAAAC,KALH,GAQArM,OAAAD,QAAAa,6DCVA,IAAAkL,WAAAjM,oBAAA,IACAyH,SAAAzH,oBAAA,IA+BAG,OAAAD,QAJA,SAAA+K,YAAA5J,OACA,aAAAA,OAAAoG,SAAApG,MAAAwE,UAAAoG,WAAA5K,sDC7BA,IAAA0L,gBAAA/M,oBAAA,KACA+D,aAAA/D,oBAAA,GAGAgN,YAAAlM,OAAAoB,UAGAC,eAAA6K,YAAA7K,eAGA8K,qBAAAD,YAAAC,qBAoBAC,YAAAH,gBAAA,WAA8C,OAAAI,UAA9C,IAAkEJ,gBAAA,SAAA1L,OAClE,OAAA0C,aAAA1C,QAAAc,eAAA5B,KAAAc,MAAA,YACA4L,qBAAA1M,KAAAc,MAAA,WAGAlB,OAAAD,QAAAgN,2DCnCA,SAAA/M,QAAA,IAAAuC,KAAA1C,oBAAA,GACAoN,UAAApN,oBAAA,KAGAqN,YAAA,iBAAAnN,2BAAAoN,UAAApN,QAGAqN,WAAAF,aAAA,iBAAAlN,wBAAAmN,UAAAnN,OAMAqN,OAHAD,uBAAArN,UAAAmN,YAGA3K,KAAA8K,YAAAvK,EAsBAwK,UAnBAD,cAAAC,cAAAxK,IAmBAmK,UAEAjN,OAAAD,QAAAuN,gFCrCAtN,OAAAD,QAAA,SAAAC,QAoBA,OAnBAA,OAAAuN,kBACAvN,OAAAwN,UAAA,aACAxN,OAAAyN,SAEAzN,OAAA0N,WAAA1N,OAAA0N,aACA/M,OAAAC,eAAAZ,OAAA,UACAa,YAAA,EACAC,IAAA,WACA,OAAAd,OAAAE,KAGAS,OAAAC,eAAAZ,OAAA,MACAa,YAAA,EACAC,IAAA,WACA,OAAAd,OAAAC,KAGAD,OAAAuN,gBAAA,GAEAvN,kCCnBA,IAAAqH,iBAAA,iBAGAsG,SAAA,mBAoBA3N,OAAAD,QAVA,SAAA6N,QAAA1M,MAAAwE,QACA,IAAAyB,YAAAjG,MAGA,SAFAwE,OAAA,MAAAA,OAAA2B,iBAAA3B,UAGA,UAAAyB,MACA,UAAAA,MAAAwG,SAAAzC,KAAAhK,SACAA,OAAA,GAAAA,MAAA,MAAAA,MAAAwE,sDCrBA,IAAAmI,iBAAAhO,oBAAA,KACA4M,UAAA5M,oBAAA,IACAiO,SAAAjO,oBAAA,KAGAkO,iBAAAD,mBAAAE,aAmBAA,aAAAD,iBAAAtB,UAAAsB,kBAAAF,iBAEA7N,OAAAD,QAAAiO,2DC1BA,IAAAzI,UAAA1F,oBAAA,IACAoO,WAAApO,oBAAA,KACAqO,YAAArO,oBAAA,KACAsO,SAAAtO,oBAAA,KACAuO,SAAAvO,oBAAA,KACAwO,SAAAxO,oBAAA,KASA,SAAAyO,MAAA9I,SACA,IAAAc,KAAAX,KAAAY,SAAA,IAAAhB,UAAAC,SACAG,KAAA4I,KAAAjI,KAAAiI,KAIAD,MAAAvM,UAAA6D,MAAAqI,WACAK,MAAAvM,UAAA,OAAAmM,YACAI,MAAAvM,UAAAjB,IAAAqN,SACAG,MAAAvM,UAAAgE,IAAAqI,SACAE,MAAAvM,UAAA+D,IAAAuI,SAEArO,OAAAD,QAAAuO,oDC1BA,IAAAE,gBAAA3O,oBAAA,KACA+D,aAAA/D,oBAAA,GA0BAG,OAAAD,QAVA,SAAA0O,YAAAvN,MAAAoL,MAAAoC,QAAAC,WAAAC,OACA,OAAA1N,QAAAoL,QAGA,MAAApL,OAAA,MAAAoL,QAAA1I,aAAA1C,SAAA0C,aAAA0I,OACApL,cAAAoL,aAEAkC,gBAAAtN,MAAAoL,MAAAoC,QAAAC,WAAAF,YAAAG,uDCxBA,IAAAtD,SAAAzL,oBAAA,IACAgP,UAAAhP,oBAAA,KACA6M,SAAA7M,oBAAA,IAGAiP,qBAAA,EACAC,uBAAA,EA4EA/O,OAAAD,QA7DA,SAAAiP,YAAA9I,MAAAoG,MAAAoC,QAAAC,WAAAM,UAAAL,OACA,IAAAM,UAAAR,QAAAI,qBACAK,UAAAjJ,MAAAR,OACA0J,UAAA9C,MAAA5G,OAEA,GAAAyJ,WAAAC,aAAAF,WAAAE,UAAAD,WACA,SAGA,IAAAE,QAAAT,MAAA9N,IAAAoF,OACA,GAAAmJ,SAAAT,MAAA9N,IAAAwL,OACA,OAAA+C,SAAA/C,MAEA,IAAA7G,OAAA,EACAZ,QAAA,EACAyK,KAAAZ,QAAAK,uBAAA,IAAAzD,cAAAxI,EAMA,IAJA8L,MAAA9I,IAAAI,MAAAoG,OACAsC,MAAA9I,IAAAwG,MAAApG,SAGAT,MAAA0J,WAAA,CACA,IAAAI,SAAArJ,MAAAT,OACA+J,SAAAlD,MAAA7G,OAEA,GAAAkJ,WACA,IAAAc,SAAAP,UACAP,WAAAa,SAAAD,SAAA9J,MAAA6G,MAAApG,MAAA0I,OACAD,WAAAY,SAAAC,SAAA/J,MAAAS,MAAAoG,MAAAsC,OAEA,QAAA9L,IAAA2M,SAAA,CACA,GAAAA,SACA,SAEA5K,QAAA,EACA,MAGA,GAAAyK,MACA,IAAAT,UAAAvC,MAAA,SAAAkD,SAAAE,UACA,IAAAhD,SAAA4C,KAAAI,YACAH,WAAAC,UAAAP,UAAAM,SAAAC,SAAAd,QAAAC,WAAAC,QACA,OAAAU,KAAA7D,KAAAiE,YAEW,CACX7K,QAAA,EACA,YAEK,GACL0K,WAAAC,WACAP,UAAAM,SAAAC,SAAAd,QAAAC,WAAAC,OACA,CACA/J,QAAA,EACA,OAKA,OAFA+J,MAAA,OAAA1I,OACA0I,MAAA,OAAAtC,OACAzH,sDC/EA,IAAAqC,SAAArH,oBAAA,IAcAG,OAAAD,QAJA,SAAA4P,mBAAAzO,OACA,OAAAA,eAAAgG,SAAAhG,kCCQAlB,OAAAD,QAVA,SAAA6P,wBAAApO,IAAAqO,UACA,gBAAAhO,QACA,aAAAA,QAGAA,OAAAL,OAAAqO,gBACA/M,IAAA+M,UAAArO,OAAAb,OAAAkB,yDCfA,IAAAiO,SAAAjQ,oBAAA,IACA8G,MAAA9G,oBAAA,IAsBAG,OAAAD,QAZA,SAAAgQ,QAAAlO,OAAAmO,MAMA,IAHA,IAAAvK,MAAA,EACAC,QAHAsK,KAAAF,SAAAE,KAAAnO,SAGA6D,OAEA,MAAA7D,QAAA4D,MAAAC,QACA7D,cAAA8E,MAAAqJ,KAAAvK,WAEA,OAAAA,cAAAC,OAAA7D,YAAAiB,iDCpBA,IAAAL,QAAA5C,oBAAA,GACAoL,MAAApL,oBAAA,IACAoQ,aAAApQ,oBAAA,KACAqM,SAAArM,oBAAA,KAiBAG,OAAAD,QAPA,SAAA+P,SAAA5O,MAAAW,QACA,OAAAY,QAAAvB,OACAA,MAEA+J,MAAA/J,MAAAW,SAAAX,OAAA+O,aAAA/D,SAAAhL,2HCjBWnB,QAAAmQ,MAAQ,GACRnQ,QAAAoQ,OAAS,iOCDpB,IAAAC,QAAAxG,gBAAA/J,oBAAA,IAYWE,QAAAsQ,MAAyC,SAACnH,QACnDoH,UAAApH,GAAAoH,UAAWC,UAAArH,GAAAqH,UAAWC,OAAAtH,GAAAsH,OAAQC,SAAAvH,GAAAuH,SAAUC,UAAAxH,GAAAwH,UAAWC,YAAAzH,GAAAyH,YAAazP,MAAAgI,GAAAhI,MAEhE,OAAAkP,QAAA5M,QAAAoN,cAAA,SACEN,UAAWA,UACXC,UAAWA,UACXC,OAAQ,WAAM,OAAAA,QAAUA,UACxBC,SAAU,SAAApE,GAAK,OAAAoE,UAAYA,SAASpE,EAAEwE,cAAc3P,QACpDwP,UAAW,SAAArE,GAAK,OAAAqE,WAAaA,UAAUrE,EAAEyE,QACzCH,YAAaA,YACbzP,MAAOA,uOCtBX,IAAAkP,QAAAxG,gBAAA/J,oBAAA,IACAkR,YAAAlR,oBAAA,IACAmR,MAAApH,gBAAA/J,oBAAA,KACAoR,QAAArH,gBAAA/J,oBAAA,IAEAkR,YAAAG,OACEd,QAAA5M,QAAAoN,cAACK,QAAAzN,QAAM2N,UAAS,KAACf,QAAA5M,QAAAoN,cAACI,MAAAxN,QAAG,OACrB4N,SAASC,uBAAuB,WAAW,8BCP7CrR,OAAAD,QAAAuR,4wBCAA,IAAAC,UAAA3H,gBAAA/J,oBAAA,KACAuQ,QAAAxG,gBAAA/J,oBAAA,IAEAoR,QAAArH,gBAAA/J,oBAAA,IACA2H,QAAA3H,oBAAA,IACA2R,cAAA5H,gBAAA/J,oBAAA,MACA4R,SAAA7H,gBAAA/J,oBAAA,MACA6R,WAAA9H,gBAAA/J,oBAAA,MACA8R,YAAA/H,gBAAA/J,oBAAA,MAEA+R,IAAA,SAAAC,QAAA,SAAAD,MAAA,IAAAzJ,MAAA,OAAA0J,eAAAC,MAAAnM,KAAAqH,YAAArH,YAoBEwC,MAAA4J,UAAY,SAACC,MACX7J,MAAK8J,MAAMC,MAAMpM,IAAI,QAArBqC,CACEoJ,UAAA/N,QAAQ2E,MAAK8J,MAAMC,MAAMpR,IAAI,SAAUkR,QAI3C7J,MAAAgK,YAAc,SAACC,QACb,OAAAjK,MAAK8J,MAAMC,MAAMpM,IAAI,QAArBqC,CACEA,MAAK8J,MAAMC,MAAMpR,IAAI,SAASuF,IAAI,SAAAgM,GAAK,OAAAC,YAAMD,GAAGD,OAAMA,aAG1DjK,MAAAoK,SAAW,SAACP,KAAYQ,aACtB,IAAIJ,OAAqBI,YAAc,YAAc,SACrDrK,MAAK8J,MAAMC,MAAMpM,IAAI,QAArBqC,CACEX,QAAA8C,QAAQnC,MAAK8J,MAAMC,MAAMpR,IAAI,SAAUkR,KAAIM,YAAON,MAAMI,OAAMA,YAIlEjK,MAAAsK,OAAS,SAACT,KAAYU,OACf,IAAAR,MAAA/J,MAAA8J,MAAAC,MACLA,MAAMpM,IAAI,QAAVoM,CACE1K,QAAA8C,QAAQ4H,MAAMpR,IAAI,SAAUkR,KAAIM,YAAON,MAAMU,MAAKA,UAEpDR,MAAMpM,IAAI,cAAVoM,CAAyB,aAG7B,OA9CkBS,UAAAf,IAAAC,QAEhBD,IAAA7P,UAAAmP,OAAA,WACE,OAAOd,QAAA5M,QAAAoN,cAAAR,QAAA5M,QAAAoP,SAAA,KACLxC,QAAA5M,QAAAoN,cAAA,UAAQL,UAAU,UAChBH,QAAA5M,QAAAoN,cAAA,mBACAR,QAAA5M,QAAAoN,cAACY,cAAAhO,QAAW,OAEd4M,QAAA5M,QAAAoN,cAAA,WAASL,UAAU,QACjBH,QAAA5M,QAAAoN,cAACe,YAAAnO,SAAUiN,SAAU9K,KAAKwM,cAC1B/B,QAAA5M,QAAAoN,cAACc,WAAAlO,SACCuO,UAAWpM,KAAKoM,UAChBU,OAAQ9M,KAAK8M,OACbF,SAAU5M,KAAK4M,YAGnBnC,QAAA5M,QAAAoN,cAACa,SAAAjO,QAAU,QA8BjBoO,IA9CA,CAAkBxB,QAAA5M,QAAMiB,WAgDxB1E,QAAAyD,QAAeyN,QAAAzN,QAAMqP,UAAUjB,mDC1D/B,IAAAkB,eAAAjT,oBAAA,IACAkT,SAAAlT,oBAAA,IACAmT,kBAAAnT,oBAAA,IAsBAoT,QAAAF,SAAA,SAAA7M,MAAAqF,QACA,OAAAyH,kBAAA9M,OACA4M,eAAA5M,MAAAqF,aAIAvL,OAAAD,QAAAkT,sDC9BA,IAAA3H,SAAAzL,oBAAA,IACAqT,cAAArT,oBAAA,IACAsT,kBAAAtT,oBAAA,IACA0M,SAAA1M,oBAAA,IACA4M,UAAA5M,oBAAA,IACA6M,SAAA7M,oBAAA,IAGAuT,iBAAA,IA0DApT,OAAAD,QA7CA,SAAA+S,eAAA5M,MAAAqF,OAAAiB,SAAA6G,YACA,IAAA5N,OAAA,EACA6N,SAAAJ,cACAK,UAAA,EACA7N,OAAAQ,MAAAR,OACAb,UACA2O,aAAAjI,OAAA7F,OAEA,IAAAA,OACA,OAAAb,OAEA2H,WACAjB,OAAAgB,SAAAhB,OAAAkB,UAAAD,YAEA6G,YACAC,SAAAH,kBACAI,UAAA,GAEAhI,OAAA7F,QAAA0N,mBACAE,SAAA5G,SACA6G,UAAA,EACAhI,OAAA,IAAAD,SAAAC,SAEAkI,MACA,OAAAhO,MAAAC,QAAA,CACA,IAAAxE,MAAAgF,MAAAT,OACAiO,SAAA,MAAAlH,SAAAtL,MAAAsL,SAAAtL,OAGA,GADAA,MAAAmS,YAAA,IAAAnS,YAAA,EACAqS,UAAAG,mBAAA,CAEA,IADA,IAAAC,YAAAH,aACAG,eACA,GAAApI,OAAAoI,eAAAD,SACA,SAAAD,MAGA5O,OAAA4G,KAAAvK,YAEAoS,SAAA/H,OAAAmI,SAAAL,aACAxO,OAAA4G,KAAAvK,OAGA,OAAA2D,sDC/DA,IAAA+O,KAAA/T,oBAAA,IACA0F,UAAA1F,oBAAA,IACAuH,IAAAvH,oBAAA,IAkBAG,OAAAD,QATA,SAAA6G,gBACAjB,KAAA4I,KAAA,EACA5I,KAAAY,UACAsN,KAAA,IAAAD,KACAvN,IAAA,IAAAe,KAAA7B,WACAuO,OAAA,IAAAF,qDChBA,IAAAG,UAAAlU,oBAAA,IACAmU,WAAAnU,oBAAA,IACAoU,QAAApU,oBAAA,IACAqU,QAAArU,oBAAA,IACAsU,QAAAtU,oBAAA,IASA,SAAA+T,KAAApO,SACA,IAAAC,OAAA,EACAC,OAAA,MAAAF,QAAA,EAAAA,QAAAE,OAGA,IADAC,KAAAC,UACAH,MAAAC,QAAA,CACA,IAAAG,MAAAL,QAAAC,OACAE,KAAAG,IAAAD,MAAA,GAAAA,MAAA,KAKA+N,KAAA7R,UAAA6D,MAAAmO,UACAH,KAAA7R,UAAA,OAAAiS,WACAJ,KAAA7R,UAAAjB,IAAAmT,QACAL,KAAA7R,UAAAgE,IAAAmO,QACAN,KAAA7R,UAAA+D,IAAAqO,QAEAnU,OAAAD,QAAA6T,mDC/BA,IAAA3O,aAAApF,oBAAA,GAcAG,OAAAD,QALA,SAAAgU,YACApO,KAAAY,SAAAtB,0BAAA,SACAU,KAAA4I,KAAA,iDCXA,IAAAzC,WAAAjM,oBAAA,IACAuU,SAAAvU,oBAAA,IACAqH,SAAArH,oBAAA,IACAsM,SAAAtM,oBAAA,IASAwU,aAAA,8BAGAC,UAAA9R,SAAAT,UACA8K,YAAAlM,OAAAoB,UAGAkK,aAAAqI,UAAApI,SAGAlK,eAAA6K,YAAA7K,eAGAuS,WAAAC,OAAA,IACAvI,aAAA7L,KAAA4B,gBAAAsI,QAjBA,sBAiBA,QACAA,QAAA,uEAmBAtK,OAAAD,QARA,SAAA4C,aAAAzB,OACA,SAAAgG,SAAAhG,QAAAkT,SAAAlT,UAGA4K,WAAA5K,OAAAqT,WAAAF,cACAnJ,KAAAiB,SAAAjL,mCC3CA,IAAAuT,EAGAA,EAAA,WACA,OAAA9O,KADA,GAIA,IAEA8O,KAAAjS,SAAA,cAAAA,KAAA,EAAAkS,MAAA,QACC,MAAArI,GAED,iBAAAsI,SAAAF,EAAAE,QAOA3U,OAAAD,QAAA0U,gDCnBA,IAAAzT,OAAAnB,oBAAA,GAGAgN,YAAAlM,OAAAoB,UAGAC,eAAA6K,YAAA7K,eAOA4S,qBAAA/H,YAAAX,SAGAjI,eAAAjD,cAAAC,iBAAA6B,EA6BA9C,OAAAD,QApBA,SAAA8D,UAAA3C,OACA,IAAA2T,MAAA7S,eAAA5B,KAAAc,MAAA+C,gBACA8H,IAAA7K,MAAA+C,gBAEA,IACA/C,MAAA+C,qBAAAnB,EACA,IAAAgS,UAAA,EACG,MAAAzI,IAEH,IAAAxH,OAAA+P,qBAAAxU,KAAAc,OAQA,OAPA4T,WACAD,MACA3T,MAAA+C,gBAAA8H,WAEA7K,MAAA+C,iBAGAY,kCCzCA,IAOA+P,qBAPAjU,OAAAoB,UAOAmK,SAaAlM,OAAAD,QAJA,SAAA+D,eAAA5C,OACA,OAAA0T,qBAAAxU,KAAAc,sDClBA,IAAA6T,WAAAlV,oBAAA,IAGAmV,WAAA,WACA,IAAAC,IAAA,SAAAC,KAAAH,uBAAA1Q,MAAA0Q,WAAA1Q,KAAA8Q,UAAA,IACA,OAAAF,IAAA,iBAAAA,IAAA,GAFA,GAgBAjV,OAAAD,QAJA,SAAAqU,SAAAhI,MACA,QAAA4I,0BAAA5I,oDChBA,IAGA2I,WAHAlV,oBAAA,GAGA,sBAEAG,OAAAD,QAAAgV,qCCOA/U,OAAAD,QAJA,SAAA6C,SAAAf,OAAAL,KACA,aAAAK,YAAAiB,EAAAjB,OAAAL,gCCOAxB,OAAAD,QANA,SAAAiU,WAAAxS,KACA,IAAAqD,OAAAc,KAAAI,IAAAvE,aAAAmE,KAAAY,SAAA/E,KAEA,OADAmE,KAAA4I,MAAA1J,OAAA,IACAA,sDCbA,IAAAI,aAAApF,oBAAA,GAGAuV,eAAA,4BAMApT,eAHArB,OAAAoB,UAGAC,eAoBAhC,OAAAD,QATA,SAAAkU,QAAAzS,KACA,IAAA8E,KAAAX,KAAAY,SACA,GAAAtB,aAAA,CACA,IAAAJ,OAAAyB,KAAA9E,KACA,OAAAqD,SAAAuQ,oBAAAtS,EAAA+B,OAEA,OAAA7C,eAAA5B,KAAAkG,KAAA9E,KAAA8E,KAAA9E,UAAAsB,iDC1BA,IAAAmC,aAAApF,oBAAA,GAMAmC,eAHArB,OAAAoB,UAGAC,eAgBAhC,OAAAD,QALA,SAAAmU,QAAA1S,KACA,IAAA8E,KAAAX,KAAAY,SACA,OAAAtB,kBAAAnC,IAAAwD,KAAA9E,KAAAQ,eAAA5B,KAAAkG,KAAA9E,oDCnBA,IAAAyD,aAAApF,oBAAA,GAGAuV,eAAA,4BAmBApV,OAAAD,QAPA,SAAAoU,QAAA3S,IAAAN,OACA,IAAAoF,KAAAX,KAAAY,SAGA,OAFAZ,KAAA4I,MAAA5I,KAAAI,IAAAvE,KAAA,IACA8E,KAAA9E,KAAAyD,mBAAAnC,IAAA5B,MAAAkU,eAAAlU,MACAyE,gCCPA3F,OAAAD,QALA,SAAAmF,iBACAS,KAAAY,YACAZ,KAAA4I,KAAA,iDCTA,IAAAtI,aAAApG,oBAAA,IAMAwV,OAHA3S,MAAAX,UAGAsT,OA4BArV,OAAAD,QAjBA,SAAAoF,gBAAA3D,KACA,IAAA8E,KAAAX,KAAAY,SACAd,MAAAQ,aAAAK,KAAA9E,KAEA,QAAAiE,MAAA,IAIAA,OADAa,KAAAZ,OAAA,EAEAY,KAAAgP,MAEAD,OAAAjV,KAAAkG,KAAAb,MAAA,KAEAE,KAAA4I,KACA,mDC/BA,IAAAtI,aAAApG,oBAAA,IAkBAG,OAAAD,QAPA,SAAAqF,aAAA5D,KACA,IAAA8E,KAAAX,KAAAY,SACAd,MAAAQ,aAAAK,KAAA9E,KAEA,OAAAiE,MAAA,OAAA3C,EAAAwD,KAAAb,OAAA,kDCfA,IAAAQ,aAAApG,oBAAA,IAeAG,OAAAD,QAJA,SAAAsF,aAAA7D,KACA,OAAAyE,aAAAN,KAAAY,SAAA/E,MAAA,iDCZA,IAAAyE,aAAApG,oBAAA,IAyBAG,OAAAD,QAbA,SAAAuF,aAAA9D,IAAAN,OACA,IAAAoF,KAAAX,KAAAY,SACAd,MAAAQ,aAAAK,KAAA9E,KAQA,OANAiE,MAAA,KACAE,KAAA4I,KACAjI,KAAAmF,MAAAjK,IAAAN,SAEAoF,KAAAb,OAAA,GAAAvE,MAEAyE,oDCtBA,IAAAS,WAAAvG,oBAAA,IAiBAG,OAAAD,QANA,SAAA8G,eAAArF,KACA,IAAAqD,OAAAuB,WAAAT,KAAAnE,KAAA,OAAAA,KAEA,OADAmE,KAAA4I,MAAA1J,OAAA,IACAA,kCCAA7E,OAAAD,QAPA,SAAAoG,UAAAjF,OACA,IAAAiG,YAAAjG,MACA,gBAAAiG,MAAA,UAAAA,MAAA,UAAAA,MAAA,WAAAA,KACA,cAAAjG,MACA,OAAAA,qDCXA,IAAAkF,WAAAvG,oBAAA,IAeAG,OAAAD,QAJA,SAAA+G,YAAAtF,KACA,OAAA4E,WAAAT,KAAAnE,KAAAV,IAAAU,oDCZA,IAAA4E,WAAAvG,oBAAA,IAeAG,OAAAD,QAJA,SAAAgH,YAAAvF,KACA,OAAA4E,WAAAT,KAAAnE,KAAAuE,IAAAvE,oDCZA,IAAA4E,WAAAvG,oBAAA,IAqBAG,OAAAD,QATA,SAAAiH,YAAAxF,IAAAN,OACA,IAAAoF,KAAAF,WAAAT,KAAAnE,KACA+M,KAAAjI,KAAAiI,KAIA,OAFAjI,KAAAR,IAAAtE,IAAAN,OACAyE,KAAA4I,MAAAjI,KAAAiI,WAAA,IACA5I,gCCjBA,IAAAyP,eAAA,4BAiBApV,OAAAD,QALA,SAAAqL,YAAAlK,OAEA,OADAyE,KAAAY,SAAAT,IAAA5E,MAAAkU,gBACAzP,gCCFA3F,OAAAD,QAJA,SAAAsL,YAAAnK,OACA,OAAAyE,KAAAY,SAAAR,IAAA7E,sDCVA,IAAAqU,YAAA1V,oBAAA,IAgBAG,OAAAD,QALA,SAAAmT,cAAAhN,MAAAhF,OAEA,QADA,MAAAgF,cAAAR,SACA6P,YAAArP,MAAAhF,MAAA,qDCbA,IAAAsU,cAAA3V,oBAAA,IACA4V,UAAA5V,oBAAA,IACA6V,cAAA7V,oBAAA,IAiBAG,OAAAD,QANA,SAAAwV,YAAArP,MAAAhF,MAAAyU,WACA,OAAAzU,aACAwU,cAAAxP,MAAAhF,MAAAyU,WACAH,cAAAtP,MAAAuP,UAAAE,sCCOA3V,OAAAD,QAZA,SAAAyV,cAAAtP,MAAA0P,UAAAD,UAAAE,WAIA,IAHA,IAAAnQ,OAAAQ,MAAAR,OACAD,MAAAkQ,WAAAE,UAAA,MAEAA,UAAApQ,gBAAAC,QACA,GAAAkQ,UAAA1P,MAAAT,aAAAS,OACA,OAAAT,MAGA,oCCTAzF,OAAAD,QAJA,SAAA0V,UAAAvU,OACA,OAAAA,wCCcAlB,OAAAD,QAZA,SAAA2V,cAAAxP,MAAAhF,MAAAyU,WAIA,IAHA,IAAAlQ,MAAAkQ,UAAA,EACAjQ,OAAAQ,MAAAR,SAEAD,MAAAC,QACA,GAAAQ,MAAAT,SAAAvE,MACA,OAAAuE,MAGA,oCCEAzF,OAAAD,QAZA,SAAAoT,kBAAAjN,MAAAhF,MAAAmS,YAIA,IAHA,IAAA5N,OAAA,EACAC,OAAA,MAAAQ,MAAA,EAAAA,MAAAR,SAEAD,MAAAC,QACA,GAAA2N,WAAAnS,MAAAgF,MAAAT,QACA,SAGA,wDClBA,IAAAe,SAAA3G,oBAAA,IACAiW,SAAAjW,oBAAA,IACAkW,YAAAlW,oBAAA,IAcAG,OAAAD,QAJA,SAAAgT,SAAA3G,KAAA4J,OACA,OAAAD,YAAAD,SAAA1J,KAAA4J,MAAAxP,UAAA4F,KAAA,mDCbA,IAAA0F,MAAAjS,oBAAA,IAGAoW,UAAAC,KAAAC,IAgCAnW,OAAAD,QArBA,SAAA+V,SAAA1J,KAAA4J,MAAAI,WAEA,OADAJ,MAAAC,eAAAnT,IAAAkT,MAAA5J,KAAA1G,OAAA,EAAAsQ,MAAA,GACA,WAMA,IALA,IAAAK,KAAArJ,UACAvH,OAAA,EACAC,OAAAuQ,UAAAI,KAAA3Q,OAAAsQ,MAAA,GACA9P,MAAAxD,MAAAgD,UAEAD,MAAAC,QACAQ,MAAAT,OAAA4Q,KAAAL,MAAAvQ,OAEAA,OAAA,EAEA,IADA,IAAA6Q,UAAA5T,MAAAsT,MAAA,KACAvQ,MAAAuQ,OACAM,UAAA7Q,OAAA4Q,KAAA5Q,OAGA,OADA6Q,UAAAN,OAAAI,UAAAlQ,OACA4L,MAAA1F,KAAAzG,KAAA2Q,uCCXAtW,OAAAD,QAVA,SAAA+R,MAAA1F,KAAAmK,QAAAF,MACA,OAAAA,KAAA3Q,QACA,cAAA0G,KAAAhM,KAAAmW,SACA,cAAAnK,KAAAhM,KAAAmW,QAAAF,KAAA,IACA,cAAAjK,KAAAhM,KAAAmW,QAAAF,KAAA,GAAAA,KAAA,IACA,cAAAjK,KAAAhM,KAAAmW,QAAAF,KAAA,GAAAA,KAAA,GAAAA,KAAA,IAEA,OAAAjK,KAAA0F,MAAAyE,QAAAF,qDCjBA,IAAAG,gBAAA3W,oBAAA,IAWAkW,YAVAlW,oBAAA,GAUA4W,CAAAD,iBAEAxW,OAAAD,QAAAgW,0DCbA,IAAAW,SAAA7W,oBAAA,IACAe,eAAAf,oBAAA,IACA2G,SAAA3G,oBAAA,IAUA2W,gBAAA5V,eAAA,SAAAwL,KAAA0H,QACA,OAAAlT,eAAAwL,KAAA,YACAuK,cAAA,EACA9V,YAAA,EACAK,MAAAwV,SAAA5C,QACA8C,UAAA,KALApQ,SASAxG,OAAAD,QAAAyW,0CCIAxW,OAAAD,QANA,SAAA2W,SAAAxV,OACA,kBACA,OAAAA,kCCpBA,IAAA2V,UAAA,IACAC,SAAA,GAGAC,UAAAC,KAAAC,IA+BAjX,OAAAD,QApBA,SAAA0W,SAAArK,MACA,IAAAhC,MAAA,EACA8M,WAAA,EAEA,kBACA,IAAAC,MAAAJ,YACAK,UAAAN,UAAAK,MAAAD,YAGA,GADAA,WAAAC,MACAC,UAAA,GACA,KAAAhN,OAAAyM,UACA,OAAA7J,UAAA,QAGA5C,MAAA,EAEA,OAAAgC,KAAA0F,WAAAhP,EAAAkK,2DChCA,IAAAlC,YAAAjL,oBAAA,IACA+D,aAAA/D,oBAAA,GA+BAG,OAAAD,QAJA,SAAAiT,kBAAA9R,OACA,OAAA0C,aAAA1C,QAAA4J,YAAA5J,6TC7BA,IAAAmW,OAAAxX,oBAAA,KAGMyX,IAAW,UAcjB3O,QAAA,WAIE,SAAAA,QAAYT,SAEV,IAAIH,iBACFC,WAAW,EACXK,QAAO,SAACC,OACNC,QAAQC,MACN,8GAEEF,MAAMG,KAAK,WAKnB9C,KAAK4R,cACHC,UAAW,IAAIC,IACfC,YAAa,IAAItQ,IACjBuQ,UAAW,IAAIvQ,IACfc,QAAOoK,YAAMvK,gBAAoBG,UAwFvC,OAjFES,QAAA5G,UAAAoH,KAAA,SAA+B3H,IAAQN,OACjC,IAAAgI,GAAAvD,KAAA4R,aAAArP,QAAEF,UAAAkB,GAAAlB,UAAWK,QAAAa,GAAAb,QACjB,GAAIL,UAAW,CACb,GAAIrC,KAAK4R,aAAaC,UAAUzR,IAAIvE,KAElC,OADA6G,QAAQ3F,MAAMkV,KAAKjS,KAAK4R,aAAaC,WAAW7M,OAAOnJ,MAChDmE,KAEPA,KAAK4R,aAAaC,UAAUhM,IAAIhK,KAUpC,OAPImE,KAAKkS,WAAWrW,MAClBmE,KAAKmS,cAActW,IAAKN,OAEtByE,KAAKkS,WAAWP,MAClB3R,KAAKmS,cAAcR,IAAKpW,OAEtB8G,WAAWrC,KAAK4R,aAAaC,UAAU5R,QACpCD,MAMTgD,QAAA5G,UAAAqH,GAAA,SAA6B5H,KAC3B,OAAOmE,KAAKoS,cAAcvW,MAM5BmH,QAAA5G,UAAAuH,IAAA,WACE,OAAO3D,KAAKoS,cAAcT,MAKpB3O,QAAA5G,UAAAgW,cAAR,SAAgDvW,KAAhD,IAAA2G,MAAAxC,KACOA,KAAK4R,aAAaI,UAAU5R,IAAIvE,MACnCmE,KAAK4R,aAAaI,UAAU7R,IAAItE,QAE7BmE,KAAK4R,aAAaG,YAAY3R,IAAIvE,MACrCmE,KAAK4R,aAAaG,YAAY5R,IAAItE,QAEpC,IAAMwW,WAAsCX,OAAAY,WACzC1W,OAAO,SAAC8Q,GAEP,OADAlK,MAAKoP,aAAaI,UAAU7W,IAAIU,KAAMiK,KAAK4G,GACpC,WAAM,OAAAlK,MAAK+P,cAAc1W,IAAKwW,eAGzC,OADArS,KAAK4R,aAAaG,YAAY5W,IAAIU,KAAMiK,KAAKuM,YACtCA,YAGDrP,QAAA5G,UAAAmW,cAAR,SACE1W,IACAwW,YAEA,GAAKrS,KAAK4R,aAAaG,YAAY3R,IAAIvE,KAAvC,CAGA,IAAM0E,MAAQP,KAAK4R,aAAaG,YAAY5W,IAAIU,KAC1CiE,MAAQS,MAAMuE,QAAQuN,YACxBvS,MAAQ,IAGZS,MAAMmP,OAAO5P,MAAO,GACfS,MAAMR,SACTC,KAAK4R,aAAaG,YAAYS,OAAO3W,KACrCmE,KAAK4R,aAAaI,UAAUQ,OAAO3W,SAI/BmH,QAAA5G,UAAA+V,cAAR,SACEtW,IACAN,OAEAyE,KAAK4R,aAAaI,UAAU7W,IAAIU,KAAMsD,QAAQ,SAAAuN,GAAK,OAAAA,EAAE+F,KAAKlX,UAGpDyH,QAAA5G,UAAA8V,WAAR,SAA6CrW,KAC3C,OAAOmE,KAAK4R,aAAaG,YAAY3R,IAAIvE,MAE7CmH,QA7GA,GAAa5I,QAAA4I,kICfb5I,QAAA4D,WAAA,SAAAA,WACEuO,OAOA,OAJAA,MAAM7I,QAAQgP,UAAU,SAACnP,QAAE1H,IAAA0H,GAAA1H,IAAKwH,cAAAE,GAAAF,cAAe9H,MAAAgI,GAAAhI,MAC7CqH,QAAQ+P,KAAK,QAAQ9W,IAAO,4EAA6EwH,cAAe,IAAK9H,SAGxHgR,yHCRTnS,QAAAwY,kBAAA,SAAAA,kBACErG,OAGA,IAAIsG,SAAW7D,OAAO8D,6BAEtB,IAAKD,SAEH,OADAjQ,QAAQC,MAAM,kGACP0J,MAGT,IAAIwG,SAAWF,SAASG,UACpBC,wBAAyB,EAuC7B,OA1BAF,SAASL,UAAU,SAAAQ,SACjB,OAAQA,QAAQ1R,MACd,IAAK,QAEH,YADAuR,SAASI,KAAK,KAAM5G,MAAMrK,YAE5B,IAAK,WACH,IAAKgR,QAAQlR,MACX,OAEF,OAAQkR,QAAQE,QAAQ5R,MACtB,IAAK,iBACL,IAAK,gBAEH,YAxBQ,SAAC6R,UACjB,IAAIC,SAAW/G,MAAMrK,WACrB,IAAK,IAAIrG,OAAOwX,SACVxX,OAAOyX,WACTL,wBAAyB,EACzB1G,MAAMpM,IAAItE,IAAV0Q,CAA8B8G,SAASxX,MACvCoX,wBAAyB,GAiBrBM,CAAYjP,KAAKC,MAAM2O,QAAQlR,QAGnC,UAINuK,MAAM7I,QAAQgP,UAAU,SAACnP,QAAE1H,IAAA0H,GAAA1H,IACrBoX,wBAGJF,SAASI,KAAKtX,IAAK0Q,MAAMrK,cAGpBqK,yHCrDT,IAAAiH,UAAAtZ,oBAAA,IAAQE,QAAA4Y,QAAAQ,UAAAR,QACR,IAAAS,YAAAvZ,oBAAA,IAAQE,QAAAsZ,UAAAD,YAAAC,UACR,IAAAC,gBAAAzZ,oBAAA,IAAQE,QAAA0D,cAAA6V,gBAAA7V,cACR,IAAA8V,kBAAA1Z,oBAAA,KAAQE,QAAAyZ,gBAAAD,kBAAAC,2qBCHR,IAAArX,MAAAtC,oBAAA,GAGA2H,QAAA3H,oBAAA,GAEAE,QAAA4Y,QAAA,SAAAA,QAAmDzG,OACjD,OAAO,SAILzN,kBAQA,OAAAyE,GAAA,SAAA2I,QAAO,SAAA4H,UAAA,IAAAtR,MAAA,OAAA0J,eAAAC,MAAAnM,KAAAqH,YAAArH,YAELwC,MAAAR,OACEuK,MAAOA,MAAM3I,qBACbmQ,aAAcxH,MAAM7I,QAAQgP,UAAU,SAACnP,QAAEF,cAAAE,GAAAF,cAAe9H,MAAAgI,GAAAhI,MACtD,GAAIsG,QAAAlD,OAAO0E,cAAe9H,OACxB,OAAO,EAETiH,MAAKwR,UAAWzH,MAAOA,MAAM3I,gCAanC,OArBqBoJ,UAAA8G,QAAA5H,QAWnB4H,QAAA1X,UAAA6X,qBAAA,WACEjU,KAAKgC,MAAM+R,aAAaG,eAE1BJ,QAAA1X,UAAA+X,sBAAA,SAAsB7H,MAAqEtK,OAA3F,IAAAQ,MAAAxC,KACE,OAAOgC,MAAMuK,QAAUvM,KAAKgC,MAAMuK,OAC7BvR,OAAO0D,KAAK4N,OAAOjN,KAAK,SAAAqN,GAAK,OAACJ,MAAcI,KAAQlK,MAAK8J,MAAcI,MAE9EoH,QAAA1X,UAAAmP,OAAA,WACE,OAAO/O,MAAAyO,cAACnM,UAAS6N,YAAK3M,KAAKsM,OAAOC,MAAOvM,KAAKgC,MAAMuK,UAExDuH,QArBA,CAAqBtX,MAAMsC,YAClBC,YAAc,aAAa8C,QAAAhD,eAAeC,WAAU,oqBCnBjE,IAAAtC,MAAAtC,oBAAA,GAGA2H,QAAA3H,oBAAA,GAEAE,QAAAsZ,UAAA,SAAAA,UAGEU,QAEA,OAAO,SACLtV,kBAYA,OAAAyE,GAAA,SAAA2I,QAAO,SAAA4H,UAAA,IAAAtR,MAAA,OAAA0J,eAAAC,MAAAnM,KAAAqH,YAAArH,YAELwC,MAAAR,OACEoS,OAAQvS,QAAA7C,UAAUoV,OAAQ,SAAA1H,GACxB,OAAAA,EAAE9I,uBAEJyQ,cAAexS,QAAAnD,KAAK0V,QAAQ1T,IAAI,SAAAtB,GAC9B,OAAAgV,OAAOhV,GAAGsE,QAAQgP,UAAU,SAACnP,WAAEF,cAAAE,GAAAF,cAAe9H,MAAAgI,GAAAhI,MAC5C,GAAIsG,QAAAlD,OAAO0E,cAAe9H,OACxB,OAAO,EAETiH,MAAKwR,UACHI,OAAQpZ,OAAOsI,UAAWd,MAAKR,MAAMoS,QAAaE,MAAGA,GAAClV,GAAIgV,OAAOhV,GAAGwE,qBAAoB0Q,kBAelG,OA3BqBtH,UAAA8G,QAAA5H,QAiBnB4H,QAAA1X,UAAA6X,qBAAA,WACEjU,KAAKgC,MAAMqS,cAAclV,QAAQ,SAAAuN,GAAK,OAAAA,EAAEwH,iBAE1CJ,QAAA1X,UAAA+X,sBAAA,SAAsB7H,MAA4BtK,OAAlD,IAAAQ,MAAAxC,KACE,OAAO6B,QAAAxC,KAAK2C,MAAMoS,OAAQ,SAAC7X,EAAG6C,GAAM,OAAA7C,IAAMiG,MAAKR,MAAMoS,OAAOhV,MACvDpE,OAAO0D,KAAK4N,OAAOjN,KAAK,SAAAqN,GAAK,OAACJ,MAAcI,KAAQlK,MAAK8J,MAAcI,MAE9EoH,QAAA1X,UAAAmP,OAAA,WACE,OAAO/O,MAAAyO,cAACnM,UAAS6N,YAAK3M,KAAKsM,MAAWtM,KAAKgC,MAAMoS,UAErDN,QA3BA,CAAqBtX,MAAMsC,YAClBC,YAAc,aAAa8C,QAAAhD,eAAeC,WAAU,oqBCxBjE,IAAAtC,MAAAtC,oBAAA,GAEAqa,IAAAra,oBAAA,IACA2H,QAAA3H,oBAAA,GAgBAE,QAAA0D,cAAA,SAAAA,cACER,aACAkX,SAEA,IAAIC,QAAUjY,MAAMkY,eAAgBC,sBAAsB,IA6CtDC,SAAW,SAACtI,OAId,OAAA9P,MAAAyO,cAACwJ,QAAQG,SAAQ,KACd,SAAArI,OACC,IA4BR,SAAAsI,cACEtI,OAEA,QAAS,yBAA0BA,OA/BxBsI,CAActI,OACjB,MAAMuI,MAAM,cAAcxI,MAAMvN,YAAW,6HAE7C,OAAOuN,MAAMvE,SAASwE,UAmB5B,OACEf,UAlEF,SAAAU,QACE,SAAAV,UAAYc,OAAZ,IAAA9J,MACE0J,OAAAzR,KAAAuF,KAAMsM,QAAMtM,KAGRgC,MAAQsK,MAAMhP,cAAgBA,aAC9B2E,gBAAkBsS,IAAAzQ,YAAY9B,OAG9B+S,GAAKzI,MAAMkI,SAAWA,eACtBO,IACFA,GAAG9S,iBAGLO,MAAKR,OACHC,gBAAeA,gBACfiB,cAAejB,gBAAgB2B,qBAC/BmQ,aAAc9R,gBAAgByB,QAAQgP,UAAU,WAC9C,OAAAlQ,MAAKwR,UAAW9Q,cAAejB,gBAAgB2B,gCAiBvD,OAnCwBoJ,UAAAxB,UAAAU,QAsBtBV,UAAApP,UAAA6X,qBAAA,WACEjU,KAAKgC,MAAM+R,aAAaG,cAGvBlU,KAAKgC,MAAMkB,cAAsBlB,MAAQ,KACzChC,KAAKgC,MAAMkB,cAAsBjB,gBAAkB,KACnDjC,KAAKgC,MAAMC,gBAAwBiB,cAAgB,MAEtDsI,UAAApP,UAAAmP,OAAA,WACE,OAAO/O,MAAAyO,cAACwJ,QAAQO,UAASzZ,MAAOyE,KAAKgC,MAAMkB,eACxClD,KAAKsM,MAAMvE,WAGlByD,UAnCA,CAAwBhP,MAAMsC,WAmE5BoO,UAjBF,SAAAA,UAIEpO,WAEA,IAAIC,YAAc8C,QAAAhD,eAAeC,WAC7BG,EAAiD,SAAAqN,OACnD,OAAA9P,MAAAyO,cAAC2J,UAAS7V,YAAaA,aACpB,SAAAwN,OAAS,OAAA/P,MAAAyO,cAACnM,UAAS6N,UAACJ,MAAOA,OAAWD,WAG3C,OADArN,EAAEF,YAAc,aAAaA,YAAW,IACjCE,gqBC7FX,IAAAzC,MAAAtC,oBAAA,GAEAqa,IAAAra,oBAAA,IACA2H,QAAA3H,oBAAA,GAqBAE,QAAAyZ,gBAAA,SAAAA,gBAGEoB,cACAT,SAEA,IAAIC,QAAUjY,MAAMkY,eAAgBC,sBAAsB,IA0DtDC,SAAW,SAACtI,OAId,OAAA9P,MAAAyO,cAACwJ,QAAQG,SAAQ,KACd,SAAAR,QAMC,OALAvS,QAAA7C,UAAUoV,OAAQ,SAAC7H,OACjB,IA8BV,SAAAsI,cACEtI,OAEA,QAAS,yBAA0BA,OAjCtBsI,CAActI,OACjB,MAAMuI,MAAM,cAAcxI,MAAMvN,YAAW,+HAGxCuN,MAAMvE,SAASqM,WAmB5B,OACE5I,UA3EF,SAAAU,QACE,SAAAV,UAAYc,OAAZ,IAAA9J,MACE0J,OAAAzR,KAAAuF,KAAMsM,QAAMtM,KAGRkV,OAAS5I,MAAM2I,eAAiBA,cAChCb,OAASvS,QAAA7C,UAAUkW,OAAQ,SAAAxI,GAAK,OAAA6H,IAAAzQ,YAAY4I,KAG5CqI,GAAKzI,MAAMkI,SAAWA,eACtBO,IACFA,GAAGX,QAGL5R,MAAKR,OACHmT,iBAAkBf,OAClBgB,eAAgBvT,QAAA7C,UAAUoV,OAAQ,SAAA1H,GAAK,OAAAA,EAAE9I,uBACzCyQ,cAAexS,QAAA7C,UAAUoV,OAAQ,SAAC1H,EAAGtN,GAAM,OAAAsN,EAAEhJ,QAAQgP,UAAU,kBAC7D,OAAAlQ,MAAKwR,UACHoB,eAAgBpa,OAAOsI,UAErBd,MAAKR,MAAMoT,gBAAc7R,MACvBA,GAACnE,GAAIsN,EAAE9I,qBAAoBL,kBAoBzC,OA1CwByJ,UAAAxB,UAAAU,QA4BtBV,UAAApP,UAAA6X,qBAAA,WACEpS,QAAA7C,UAAUgB,KAAKgC,MAAMqS,cAAe,SAAA3H,GAAK,OAAAA,EAAEwH,gBAGvClU,KAAKgC,MAAMoT,eACfvT,QAAA7C,UAAUgB,KAAKgC,MAAMoT,eAAgB,SAAA1I,GAAK,OAACA,EAAU1K,MAAQ,OAC7DH,QAAA7C,UAAUgB,KAAKgC,MAAMoT,eAAgB,SAAA1I,GAAK,OAACA,EAAUzK,gBAAkB,OACvEJ,QAAA7C,UAAUgB,KAAKgC,MAAMmT,iBAAkB,SAAAzI,GAAK,OAACA,EAAUxJ,cAAgB,QAEzEsI,UAAApP,UAAAmP,OAAA,WACE,OAAO/O,MAAAyO,cAACwJ,QAAQO,UAASzZ,MAAOyE,KAAKgC,MAAMoT,gBACxCpV,KAAKsM,MAAMvE,WAGlByD,UA1CA,CAAwBhP,MAAMsC,WA4E5BmW,cAAaA,cACbI,WAlBF,SAAAA,WAIEvW,WAEA,IAAIC,YAAc8C,QAAAhD,eAAeC,WAC7BG,EAAiD,SAAAqN,OACnD,OAAA9P,MAAAyO,cAAC2J,UAAS7V,YAAaA,aACpB,SAAAqV,QAAU,OAAA5X,MAAAyO,cAACnM,UAAS6N,YAAKyH,OAAY9H,WAG1C,OADArN,EAAEF,YAAc,cAAcA,YAAW,IAClCE,uHChHA7E,QAAA2D,YAA6B,SAAAwO,OAYtC,OATAA,MAAM7I,QAAQgP,UAAU,SAACnP,QAAE1H,IAAA0H,GAAA1H,IAAKN,MAAAgI,GAAAhI,MAC9B,OAAA6I,aAAakR,QAAQzZ,IAAKyI,KAAKiR,UAAUha,UAI3CgR,MAAM9I,GAAG,SAASiP,UAAU,SAAA/U,OAC1B,OAAAqR,OAAOwG,SAAStH,KAAOvQ,QAGlB4O,qDCfT,IAAAkJ,gBAAAvb,oBAAA,KACAwb,WAAAxb,oBAAA,KACAyb,aAAAzb,oBAAA,KAwCAG,OAAAD,QAVA,SAAA4E,UAAA9C,OAAA2K,UACA,IAAA3H,UAMA,OALA2H,SAAA8O,aAAA9O,SAAA,GAEA6O,WAAAxZ,OAAA,SAAAX,MAAAM,IAAAK,QACAuZ,gBAAAvW,OAAArD,IAAAgL,SAAAtL,MAAAM,IAAAK,WAEAgD,sDCvCA,IAAAjE,eAAAf,oBAAA,IAwBAG,OAAAD,QAbA,SAAAqb,gBAAAvZ,OAAAL,IAAAN,OACA,aAAAM,KAAAZ,eACAA,eAAAiB,OAAAL,KACAmV,cAAA,EACA9V,YAAA,EACAK,YACA0V,UAAA,IAGA/U,OAAAL,KAAAN,qDCpBA,IAAAqa,QAAA1b,oBAAA,KACAwE,KAAAxE,oBAAA,IAcAG,OAAAD,QAJA,SAAAsb,WAAAxZ,OAAA2K,UACA,OAAA3K,QAAA0Z,QAAA1Z,OAAA2K,SAAAnI,qDCZA,IAaAkX,QAbA1b,oBAAA,IAaA2b,GAEAxb,OAAAD,QAAAwb,kCCSAvb,OAAAD,QAjBA,SAAAyb,cAAA3F,WACA,gBAAAhU,OAAA2K,SAAAiP,UAMA,IALA,IAAAhW,OAAA,EACAiW,SAAA/a,OAAAkB,QACAoQ,MAAAwJ,SAAA5Z,QACA6D,OAAAuM,MAAAvM,OAEAA,UAAA,CACA,IAAAlE,IAAAyQ,MAAA4D,UAAAnQ,SAAAD,OACA,QAAA+G,SAAAkP,SAAAla,SAAAka,UACA,MAGA,OAAA7Z,uDCpBA,IAAA8Z,UAAA9b,oBAAA,KACAkN,YAAAlN,oBAAA,IACA4C,QAAA5C,oBAAA,GACAyN,SAAAzN,oBAAA,IACA+N,QAAA/N,oBAAA,IACAmO,aAAAnO,oBAAA,IAMAmC,eAHArB,OAAAoB,UAGAC,eAqCAhC,OAAAD,QA3BA,SAAA6K,cAAA1J,MAAA0a,WACA,IAAAC,MAAApZ,QAAAvB,OACA4a,OAAAD,OAAA9O,YAAA7L,OACA6a,QAAAF,QAAAC,OAAAxO,SAAApM,OACA8a,QAAAH,QAAAC,QAAAC,QAAA/N,aAAA9M,OACA+a,YAAAJ,OAAAC,OAAAC,QAAAC,OACAnX,OAAAoX,YAAAN,UAAAza,MAAAwE,OAAAwW,WACAxW,OAAAb,OAAAa,OAEA,QAAAlE,OAAAN,OACA0a,YAAA5Z,eAAA5B,KAAAc,MAAAM,MACAya,cAEA,UAAAza,KAEAua,SAAA,UAAAva,KAAA,UAAAA,MAEAwa,SAAA,UAAAxa,KAAA,cAAAA,KAAA,cAAAA,MAEAoM,QAAApM,IAAAkE,UAEAb,OAAA4G,KAAAjK,KAGA,OAAAqD,kCC1BA7E,OAAAD,QAVA,SAAA4b,UAAAja,EAAA8K,UAIA,IAHA,IAAA/G,OAAA,EACAZ,OAAAnC,MAAAhB,KAEA+D,MAAA/D,GACAmD,OAAAY,OAAA+G,SAAA/G,OAEA,OAAAZ,sDChBA,IAAAX,WAAArE,oBAAA,GACA+D,aAAA/D,oBAAA,GAGAsc,QAAA,qBAaAnc,OAAAD,QAJA,SAAA6M,gBAAA1L,OACA,OAAA0C,aAAA1C,QAAAgD,WAAAhD,QAAAib,mCCGAnc,OAAAD,QAJA,SAAAkN,YACA,wDCdA,IAAA/I,WAAArE,oBAAA,GACAyH,SAAAzH,oBAAA,IACA+D,aAAA/D,oBAAA,GA8BAuc,kBACAA,eAZA,yBAYAA,eAXA,yBAYAA,eAXA,sBAWAA,eAVA,uBAWAA,eAVA,uBAUAA,eATA,uBAUAA,eATA,8BASAA,eARA,wBASAA,eARA,yBAQA,EACAA,eAjCA,sBAiCAA,eAhCA,kBAiCAA,eApBA,wBAoBAA,eAhCA,oBAiCAA,eApBA,qBAoBAA,eAhCA,iBAiCAA,eAhCA,kBAgCAA,eA/BA,qBAgCAA,eA/BA,gBA+BAA,eA9BA,mBA+BAA,eA9BA,mBA8BAA,eA7BA,mBA8BAA,eA7BA,gBA6BAA,eA5BA,mBA6BAA,eA5BA,qBA4BA,EAcApc,OAAAD,QALA,SAAA8N,iBAAA3M,OACA,OAAA0C,aAAA1C,QACAoG,SAAApG,MAAAwE,WAAA0W,eAAAlY,WAAAhD,wDCxDA,SAAAlB,QAAA,IAAAoC,WAAAvC,oBAAA,IAGAqN,YAAA,iBAAAnN,2BAAAoN,UAAApN,QAGAqN,WAAAF,aAAA,iBAAAlN,wBAAAmN,UAAAnN,OAMAqc,YAHAjP,uBAAArN,UAAAmN,aAGA9K,WAAAka,QAGAxO,SAAA,WACA,IAEA,IAAAyO,MAAAnP,uBAAAoP,SAAApP,WAAAoP,QAAA,QAAAD,MAEA,OAAAA,OAKAF,yBAAAI,SAAAJ,YAAAI,QAAA,QACG,MAAApQ,KAXH,GAcArM,OAAAD,QAAA+N,oGC7BA,IAAA4O,YAAA7c,oBAAA,KACA8c,WAAA9c,oBAAA,KAMAmC,eAHArB,OAAAoB,UAGAC,eAsBAhC,OAAAD,QAbA,SAAA8K,SAAAhJ,QACA,IAAA6a,YAAA7a,QACA,OAAA8a,WAAA9a,QAEA,IAAAgD,UACA,QAAArD,OAAAb,OAAAkB,QACAG,eAAA5B,KAAAyB,OAAAL,MAAA,eAAAA,KACAqD,OAAA4G,KAAAjK,KAGA,OAAAqD,kCCzBA,IAAAgI,YAAAlM,OAAAoB,UAgBA/B,OAAAD,QAPA,SAAA2c,YAAAxb,OACA,IAAA0b,KAAA1b,aAAA2b,YAGA,OAAA3b,SAFA,mBAAA0b,WAAA7a,WAAA8K,4DCZA,IAGA8P,WAHA9c,oBAAA,IAGAid,CAAAnc,OAAA0D,KAAA1D,QAEAX,OAAAD,QAAA4c,qCCSA3c,OAAAD,QANA,SAAA+c,QAAA1Q,KAAAgK,WACA,gBAAA2G,KACA,OAAA3Q,KAAAgK,UAAA2G,sDCVA,IAAAC,YAAAnd,oBAAA,KACAod,oBAAApd,oBAAA,KACA2G,SAAA3G,oBAAA,IACA4C,QAAA5C,oBAAA,GACAiC,SAAAjC,oBAAA,KA0BAG,OAAAD,QAjBA,SAAAub,aAAApa,OAGA,yBAAAA,MACAA,MAEA,MAAAA,MACAsF,SAEA,iBAAAtF,MACAuB,QAAAvB,OACA+b,oBAAA/b,MAAA,GAAAA,MAAA,IACA8b,YAAA9b,OAEAY,SAAAZ,sDC3BA,IAAAgc,YAAArd,oBAAA,KACAsd,aAAAtd,oBAAA,KACA+P,wBAAA/P,oBAAA,IAmBAG,OAAAD,QAVA,SAAAid,YAAAI,QACA,IAAAC,UAAAF,aAAAC,QACA,UAAAC,UAAA3X,QAAA2X,UAAA,MACAzN,wBAAAyN,UAAA,MAAAA,UAAA,OAEA,SAAAxb,QACA,OAAAA,SAAAub,QAAAF,YAAArb,OAAAub,OAAAC,2DCjBA,IAAA/O,MAAAzO,oBAAA,IACA4O,YAAA5O,oBAAA,IAGAiP,qBAAA,EACAC,uBAAA,EAwDA/O,OAAAD,QA5CA,SAAAmd,YAAArb,OAAAub,OAAAC,UAAA1O,YACA,IAAAlJ,MAAA4X,UAAA3X,OACAA,OAAAD,MACA6X,cAAA3O,WAEA,SAAA9M,OACA,OAAA6D,OAGA,IADA7D,OAAAlB,OAAAkB,QACA4D,SAAA,CACA,IAAAa,KAAA+W,UAAA5X,OACA,GAAA6X,cAAAhX,KAAA,GACAA,KAAA,KAAAzE,OAAAyE,KAAA,MACAA,KAAA,KAAAzE,QAEA,SAGA,OAAA4D,MAAAC,QAAA,CAEA,IAAAlE,KADA8E,KAAA+W,UAAA5X,QACA,GACA8X,SAAA1b,OAAAL,KACAqO,SAAAvJ,KAAA,GAEA,GAAAgX,cAAAhX,KAAA,IACA,QAAAxD,IAAAya,YAAA/b,OAAAK,QACA,aAEK,CACL,IAAA+M,MAAA,IAAAN,MACA,GAAAK,WACA,IAAA9J,OAAA8J,WAAA4O,SAAA1N,SAAArO,IAAAK,OAAAub,OAAAxO,OAEA,UAAA9L,IAAA+B,OACA4J,YAAAoB,SAAA0N,SAAAzO,qBAAAC,uBAAAJ,WAAAC,OACA/J,QAEA,UAIA,wDC1DA,IAAAU,UAAA1F,oBAAA,IAcAG,OAAAD,QALA,SAAAkO,aACAtI,KAAAY,SAAA,IAAAhB,UACAI,KAAA4I,KAAA,6BCMAvO,OAAAD,QARA,SAAAmO,YAAA1M,KACA,IAAA8E,KAAAX,KAAAY,SACA1B,OAAAyB,KAAA,OAAA9E,KAGA,OADAmE,KAAA4I,KAAAjI,KAAAiI,KACA1J,kCCDA7E,OAAAD,QAJA,SAAAoO,SAAA3M,KACA,OAAAmE,KAAAY,SAAAzF,IAAAU,gCCGAxB,OAAAD,QAJA,SAAAqO,SAAA5M,KACA,OAAAmE,KAAAY,SAAAR,IAAAvE,oDCVA,IAAA+D,UAAA1F,oBAAA,IACAuH,IAAAvH,oBAAA,IACAoH,SAAApH,oBAAA,IAGAuT,iBAAA,IA4BApT,OAAAD,QAhBA,SAAAsO,SAAA7M,IAAAN,OACA,IAAAoF,KAAAX,KAAAY,SACA,GAAAD,gBAAAf,UAAA,CACA,IAAAiY,MAAAlX,KAAAC,SACA,IAAAa,KAAAoW,MAAA9X,OAAA0N,iBAAA,EAGA,OAFAoK,MAAA/R,MAAAjK,IAAAN,QACAyE,KAAA4I,OAAAjI,KAAAiI,KACA5I,KAEAW,KAAAX,KAAAY,SAAA,IAAAU,SAAAuW,OAIA,OAFAlX,KAAAR,IAAAtE,IAAAN,OACAyE,KAAA4I,KAAAjI,KAAAiI,KACA5I,oDC9BA,IAAA2I,MAAAzO,oBAAA,IACAmP,YAAAnP,oBAAA,IACA4d,WAAA5d,oBAAA,KACA6d,aAAA7d,oBAAA,KACA8d,OAAA9d,oBAAA,KACA4C,QAAA5C,oBAAA,GACAyN,SAAAzN,oBAAA,IACAmO,aAAAnO,oBAAA,IAGAiP,qBAAA,EAGAqN,QAAA,qBACAyB,SAAA,iBACAC,UAAA,kBAMA7b,eAHArB,OAAAoB,UAGAC,eA6DAhC,OAAAD,QA7CA,SAAAyO,gBAAA3M,OAAAyK,MAAAoC,QAAAC,WAAAM,UAAAL,OACA,IAAAkP,SAAArb,QAAAZ,QACAkc,SAAAtb,QAAA6J,OACA0R,OAAAF,SAAAF,SAAAD,OAAA9b,QACAoc,OAAAF,SAAAH,SAAAD,OAAArR,OAKA4R,UAHAF,eAAA7B,QAAA0B,UAAAG,SAGAH,UACAM,UAHAF,eAAA9B,QAAA0B,UAAAI,SAGAJ,UACAO,UAAAJ,QAAAC,OAEA,GAAAG,WAAA9Q,SAAAzL,QAAA,CACA,IAAAyL,SAAAhB,OACA,SAEAwR,UAAA,EACAI,UAAA,EAEA,GAAAE,YAAAF,SAEA,OADAtP,cAAA,IAAAN,OACAwP,UAAA9P,aAAAnM,QACAmN,YAAAnN,OAAAyK,MAAAoC,QAAAC,WAAAM,UAAAL,OACA6O,WAAA5b,OAAAyK,MAAA0R,OAAAtP,QAAAC,WAAAM,UAAAL,OAEA,KAAAF,QAAAI,sBAAA,CACA,IAAAuP,aAAAH,UAAAlc,eAAA5B,KAAAyB,OAAA,eACAyc,aAAAH,UAAAnc,eAAA5B,KAAAkM,MAAA,eAEA,GAAA+R,cAAAC,aAAA,CACA,IAAAC,aAAAF,aAAAxc,OAAAX,QAAAW,OACA2c,aAAAF,aAAAhS,MAAApL,QAAAoL,MAGA,OADAsC,cAAA,IAAAN,OACAW,UAAAsP,aAAAC,aAAA9P,QAAAC,WAAAC,QAGA,QAAAwP,YAGAxP,cAAA,IAAAN,OACAoP,aAAA7b,OAAAyK,MAAAoC,QAAAC,WAAAM,UAAAL,mCCzDA5O,OAAAD,QAZA,SAAA8O,UAAA3I,MAAA0P,WAIA,IAHA,IAAAnQ,OAAA,EACAC,OAAA,MAAAQ,MAAA,EAAAA,MAAAR,SAEAD,MAAAC,QACA,GAAAkQ,UAAA1P,MAAAT,aAAAS,OACA,SAGA,wDCnBA,IAAAlF,OAAAnB,oBAAA,GACA4e,WAAA5e,oBAAA,KACAmG,GAAAnG,oBAAA,IACAmP,YAAAnP,oBAAA,IACA6e,WAAA7e,oBAAA,KACA8e,WAAA9e,oBAAA,KAGAiP,qBAAA,EACAC,uBAAA,EAGA6P,QAAA,mBACAC,QAAA,gBACAC,SAAA,iBACAC,OAAA,eACAC,UAAA,kBACAC,UAAA,kBACAC,OAAA,eACAC,UAAA,kBACAhU,UAAA,kBAEAiU,eAAA,uBACAC,YAAA,oBAGAC,YAAAte,cAAAe,eAAAe,EACAyc,cAAAD,wBAAAE,aAAA1c,EAoFA9C,OAAAD,QAjEA,SAAA0d,WAAA5b,OAAAyK,MAAAP,IAAA2C,QAAAC,WAAAM,UAAAL,OACA,OAAA7C,KACA,KAAAsT,YACA,GAAAxd,OAAA4d,YAAAnT,MAAAmT,YACA5d,OAAA6d,YAAApT,MAAAoT,WACA,SAEA7d,cAAA8d,OACArT,YAAAqT,OAEA,KAAAP,eACA,QAAAvd,OAAA4d,YAAAnT,MAAAmT,aACAxQ,UAAA,IAAAwP,WAAA5c,QAAA,IAAA4c,WAAAnS,SAKA,KAAAsS,QACA,KAAAC,QACA,KAAAG,UAGA,OAAAhZ,IAAAnE,QAAAyK,OAEA,KAAAwS,SACA,OAAAjd,OAAArB,MAAA8L,MAAA9L,MAAAqB,OAAAgX,SAAAvM,MAAAuM,QAEA,KAAAoG,UACA,KAAAE,UAIA,OAAAtd,QAAAyK,MAAA,GAEA,KAAAyS,OACA,IAAAa,QAAAlB,WAEA,KAAAQ,OACA,IAAAhQ,UAAAR,QAAAI,qBAGA,GAFA8Q,kBAAAjB,YAEA9c,OAAA0M,MAAAjC,MAAAiC,OAAAW,UACA,SAGA,IAAAG,QAAAT,MAAA9N,IAAAe,QACA,GAAAwN,QACA,OAAAA,SAAA/C,MAEAoC,SAAAK,uBAGAH,MAAA9I,IAAAjE,OAAAyK,OACA,IAAAzH,OAAAmK,YAAA4Q,QAAA/d,QAAA+d,QAAAtT,OAAAoC,QAAAC,WAAAM,UAAAL,OAEA,OADAA,MAAA,OAAA/M,QACAgD,OAEA,KAAAsG,UACA,GAAAoU,cACA,OAAAA,cAAAnf,KAAAyB,SAAA0d,cAAAnf,KAAAkM,OAGA,wDC5GA,IAGAmS,WAHA5e,oBAAA,GAGA4e,WAEAze,OAAAD,QAAA0e,qCCYAze,OAAAD,QAVA,SAAA2e,WAAArY,KACA,IAAAZ,OAAA,EACAZ,OAAAnC,MAAA2D,IAAAkI,MAKA,OAHAlI,IAAAvB,QAAA,SAAA5D,MAAAM,KACAqD,SAAAY,QAAAjE,IAAAN,SAEA2D,kCCGA7E,OAAAD,QAVA,SAAA4e,WAAA7Y,KACA,IAAAL,OAAA,EACAZ,OAAAnC,MAAAoD,IAAAyI,MAKA,OAHAzI,IAAAhB,QAAA,SAAA5D,OACA2D,SAAAY,OAAAvE,QAEA2D,sDCdA,IAAAgb,WAAAhgB,oBAAA,KAGAiP,qBAAA,EAMA9M,eAHArB,OAAAoB,UAGAC,eA+EAhC,OAAAD,QAhEA,SAAA2d,aAAA7b,OAAAyK,MAAAoC,QAAAC,WAAAM,UAAAL,OACA,IAAAM,UAAAR,QAAAI,qBACAgR,SAAAD,WAAAhe,QACAke,UAAAD,SAAApa,OAIA,GAAAqa,WAHAF,WAAAvT,OACA5G,SAEAwJ,UACA,SAGA,IADA,IAAAzJ,MAAAsa,UACAta,SAAA,CACA,IAAAjE,IAAAse,SAAAra,OACA,KAAAyJ,UAAA1N,OAAA8K,MAAAtK,eAAA5B,KAAAkM,MAAA9K,MACA,SAIA,IAAA6N,QAAAT,MAAA9N,IAAAe,QACA,GAAAwN,SAAAT,MAAA9N,IAAAwL,OACA,OAAA+C,SAAA/C,MAEA,IAAAzH,QAAA,EACA+J,MAAA9I,IAAAjE,OAAAyK,OACAsC,MAAA9I,IAAAwG,MAAAzK,QAGA,IADA,IAAAme,SAAA9Q,YACAzJ,MAAAsa,WAAA,CAEA,IAAAxC,SAAA1b,OADAL,IAAAse,SAAAra,QAEA+J,SAAAlD,MAAA9K,KAEA,GAAAmN,WACA,IAAAc,SAAAP,UACAP,WAAAa,SAAA+N,SAAA/b,IAAA8K,MAAAzK,OAAA+M,OACAD,WAAA4O,SAAA/N,SAAAhO,IAAAK,OAAAyK,MAAAsC,OAGA,UAAA9L,IAAA2M,SACA8N,WAAA/N,UAAAP,UAAAsO,SAAA/N,SAAAd,QAAAC,WAAAC,OACAa,UACA,CACA5K,QAAA,EACA,MAEAmb,oBAAA,eAAAxe,KAEA,GAAAqD,SAAAmb,SAAA,CACA,IAAAC,QAAApe,OAAAgb,YACAqD,QAAA5T,MAAAuQ,YAGAoD,SAAAC,SACA,gBAAAre,QAAA,gBAAAyK,SACA,mBAAA2T,qCACA,mBAAAC,uCACArb,QAAA,GAKA,OAFA+J,MAAA,OAAA/M,QACA+M,MAAA,OAAAtC,OACAzH,sDCrFA,IAAAsb,eAAAtgB,oBAAA,KACAugB,WAAAvgB,oBAAA,KACAwE,KAAAxE,oBAAA,IAaAG,OAAAD,QAJA,SAAA8f,WAAAhe,QACA,OAAAse,eAAAte,OAAAwC,KAAA+b,2DCZA,IAAAC,UAAAxgB,oBAAA,KACA4C,QAAA5C,oBAAA,GAkBAG,OAAAD,QALA,SAAAogB,eAAAte,OAAA4Z,SAAA6E,aACA,IAAAzb,OAAA4W,SAAA5Z,QACA,OAAAY,QAAAZ,QAAAgD,OAAAwb,UAAAxb,OAAAyb,YAAAze,oCCGA7B,OAAAD,QAXA,SAAAsgB,UAAAna,MAAAqF,QAKA,IAJA,IAAA9F,OAAA,EACAC,OAAA6F,OAAA7F,OACA6a,OAAAra,MAAAR,SAEAD,MAAAC,QACAQ,MAAAqa,OAAA9a,OAAA8F,OAAA9F,OAEA,OAAAS,qDChBA,IAAAsa,YAAA3gB,oBAAA,KACA4gB,UAAA5gB,oBAAA,KAMAiN,qBAHAnM,OAAAoB,UAGA+K,qBAGA4T,iBAAA/f,OAAAggB,sBASAP,WAAAM,iBAAA,SAAA7e,QACA,aAAAA,WAGAA,OAAAlB,OAAAkB,QACA2e,YAAAE,iBAAA7e,QAAA,SAAA+e,QACA,OAAA9T,qBAAA1M,KAAAyB,OAAA+e,YANAH,UAUAzgB,OAAAD,QAAAqgB,qCCLApgB,OAAAD,QAfA,SAAAygB,YAAAta,MAAA0P,WAMA,IALA,IAAAnQ,OAAA,EACAC,OAAA,MAAAQ,MAAA,EAAAA,MAAAR,OACAmb,SAAA,EACAhc,YAEAY,MAAAC,QAAA,CACA,IAAAxE,MAAAgF,MAAAT,OACAmQ,UAAA1U,MAAAuE,MAAAS,SACArB,OAAAgc,YAAA3f,OAGA,OAAA2D,kCCCA7E,OAAAD,QAJA,SAAA0gB,YACA,wDCnBA,IAAAK,SAAAjhB,oBAAA,KACAuH,IAAAvH,oBAAA,IACAkhB,QAAAlhB,oBAAA,KACA4X,IAAA5X,oBAAA,KACAmhB,QAAAnhB,oBAAA,KACAqE,WAAArE,oBAAA,GACAsM,SAAAtM,oBAAA,IAYAohB,mBAAA9U,SAAA2U,UACAI,cAAA/U,SAAA/E,KACA+Z,kBAAAhV,SAAA4U,SACAK,cAAAjV,SAAAsL,KACA4J,kBAAAlV,SAAA6U,SASArD,OAAAzZ,YAGA4c,UAnBA,qBAmBAnD,OAAA,IAAAmD,SAAA,IAAAQ,YAAA,MACAla,KA1BA,gBA0BAuW,OAAA,IAAAvW,MACA2Z,SAzBA,oBAyBApD,OAAAoD,QAAAQ,YACA9J,KAzBA,gBAyBAkG,OAAA,IAAAlG,MACAuJ,SAzBA,oBAyBArD,OAAA,IAAAqD,YACArD,OAAA,SAAAzc,OACA,IAAA2D,OAAAX,WAAAhD,OACA0b,KA/BA,mBA+BA/X,OAAA3D,MAAA2b,iBAAA/Z,EACA0e,WAAA5E,KAAAzQ,SAAAyQ,MAAA,GAEA,GAAA4E,WACA,OAAAA,YACA,KAAAP,mBAAA,MA/BA,oBAgCA,KAAAC,cAAA,MAtCA,eAuCA,KAAAC,kBAAA,MArCA,mBAsCA,KAAAC,cAAA,MArCA,eAsCA,KAAAC,kBAAA,MArCA,mBAwCA,OAAAxc,SAIA7E,OAAAD,QAAA4d,qDCzDA,IAIAmD,SAJAjhB,oBAAA,EAIAgD,CAHAhD,oBAAA,GAGA,YAEAG,OAAAD,QAAA+gB,uDCNA,IAIAC,QAJAlhB,oBAAA,EAIAgD,CAHAhD,oBAAA,GAGA,WAEAG,OAAAD,QAAAghB,sDCNA,IAIAtJ,IAJA5X,oBAAA,EAIAgD,CAHAhD,oBAAA,GAGA,OAEAG,OAAAD,QAAA0X,kDCNA,IAIAuJ,QAJAnhB,oBAAA,EAIAgD,CAHAhD,oBAAA,GAGA,WAEAG,OAAAD,QAAAihB,sDCNA,IAAArR,mBAAA9P,oBAAA,IACAwE,KAAAxE,oBAAA,IAsBAG,OAAAD,QAbA,SAAAod,aAAAtb,QAIA,IAHA,IAAAgD,OAAAR,KAAAxC,QACA6D,OAAAb,OAAAa,OAEAA,UAAA,CACA,IAAAlE,IAAAqD,OAAAa,QACAxE,MAAAW,OAAAL,KAEAqD,OAAAa,SAAAlE,IAAAN,MAAAyO,mBAAAzO,QAEA,OAAA2D,sDCpBA,IAAA4J,YAAA5O,oBAAA,IACAiB,IAAAjB,oBAAA,KACA4hB,MAAA5hB,oBAAA,KACAoL,MAAApL,oBAAA,IACA8P,mBAAA9P,oBAAA,IACA+P,wBAAA/P,oBAAA,IACA8G,MAAA9G,oBAAA,IAGAiP,qBAAA,EACAC,uBAAA,EAsBA/O,OAAAD,QAZA,SAAAkd,oBAAAjN,KAAAH,UACA,OAAA5E,MAAA+E,OAAAL,mBAAAE,UACAD,wBAAAjJ,MAAAqJ,MAAAH,UAEA,SAAAhO,QACA,IAAA0b,SAAAzc,IAAAe,OAAAmO,MACA,YAAAlN,IAAAya,qBAAA1N,SACA4R,MAAA5f,OAAAmO,MACAvB,YAAAoB,SAAA0N,SAAAzO,qBAAAC,wEC5BA,IAAAgB,QAAAlQ,oBAAA,IAgCAG,OAAAD,QALA,SAAAe,IAAAe,OAAAmO,KAAA0R,cACA,IAAA7c,OAAA,MAAAhD,YAAAiB,EAAAiN,QAAAlO,OAAAmO,MACA,YAAAlN,IAAA+B,OAAA6c,aAAA7c,sDC7BA,IAGA8c,WAAA,mGAGAC,aAAA,WASA3R,aAfApQ,oBAAA,IAeAgiB,CAAA,SAAA/N,QACA,IAAAjP,UAOA,OANA,KAAAiP,OAAAgO,WAAA,IACAjd,OAAA4G,KAAA,IAEAqI,OAAAxJ,QAAAqX,WAAA,SAAAI,MAAAC,OAAAC,MAAAC,WACArd,OAAA4G,KAAAwW,MAAAC,UAAA5X,QAAAsX,aAAA,MAAAI,QAAAD,SAEAld,SAGA7E,OAAAD,QAAAkQ,2DC1BA,IAAAkS,QAAAtiB,oBAAA,KAGAuiB,iBAAA,IAsBApiB,OAAAD,QAZA,SAAA8hB,cAAAzV,MACA,IAAAvH,OAAAsd,QAAA/V,KAAA,SAAA5K,KAIA,OAHAmL,MAAA4B,OAAA6T,kBACAzV,MAAA/G,QAEApE,MAGAmL,MAAA9H,OAAA8H,MACA,OAAA9H,sDCtBA,IAAAoC,SAAApH,oBAAA,IAGAwiB,gBAAA,sBA8CA,SAAAF,QAAA/V,KAAAkW,UACA,sBAAAlW,MAAA,MAAAkW,UAAA,mBAAAA,SACA,UAAAC,UAAAF,iBAEA,IAAAG,SAAA,WACA,IAAAnM,KAAArJ,UACAxL,IAAA8gB,kBAAAxQ,MAAAnM,KAAA0Q,WAAA,GACA1J,MAAA6V,SAAA7V,MAEA,GAAAA,MAAA5G,IAAAvE,KACA,OAAAmL,MAAA7L,IAAAU,KAEA,IAAAqD,OAAAuH,KAAA0F,MAAAnM,KAAA0Q,MAEA,OADAmM,SAAA7V,YAAA7G,IAAAtE,IAAAqD,SAAA8H,MACA9H,QAGA,OADA2d,SAAA7V,MAAA,IAAAwV,QAAAM,OAAAxb,UACAub,SAIAL,QAAAM,MAAAxb,SAEAjH,OAAAD,QAAAoiB,sDCxEA,IAAAO,aAAA7iB,oBAAA,KA2BAG,OAAAD,QAJA,SAAAmM,SAAAhL,OACA,aAAAA,MAAA,GAAAwhB,aAAAxhB,sDCxBA,IAAAF,OAAAnB,oBAAA,GACA0M,SAAA1M,oBAAA,IACA4C,QAAA5C,oBAAA,GACA4G,SAAA5G,oBAAA,IAGA6G,SAAA,IAGA4Y,YAAAte,cAAAe,eAAAe,EACA6f,eAAArD,wBAAApT,cAAApJ,EA0BA9C,OAAAD,QAhBA,SAAA2iB,aAAAxhB,OAEA,oBAAAA,MACA,OAAAA,MAEA,GAAAuB,QAAAvB,OAEA,OAAAqL,SAAArL,MAAAwhB,cAAA,GAEA,GAAAjc,SAAAvF,OACA,OAAAyhB,8BAAAviB,KAAAc,OAAA,GAEA,IAAA2D,OAAA3D,MAAA,GACA,WAAA2D,QAAA,EAAA3D,QAAAwF,SAAA,KAAA7B,sDCjCA,IAAA+d,UAAA/iB,oBAAA,KACAgjB,QAAAhjB,oBAAA,KAgCAG,OAAAD,QAJA,SAAA0hB,MAAA5f,OAAAmO,MACA,aAAAnO,QAAAghB,QAAAhhB,OAAAmO,KAAA4S,sCClBA5iB,OAAAD,QAJA,SAAA6iB,UAAA/gB,OAAAL,KACA,aAAAK,QAAAL,OAAAb,OAAAkB,uDCTA,IAAAiO,SAAAjQ,oBAAA,IACAkN,YAAAlN,oBAAA,IACA4C,QAAA5C,oBAAA,GACA+N,QAAA/N,oBAAA,IACAyH,SAAAzH,oBAAA,IACA8G,MAAA9G,oBAAA,IAiCAG,OAAAD,QAtBA,SAAA8iB,QAAAhhB,OAAAmO,KAAA8S,SAOA,IAJA,IAAArd,OAAA,EACAC,QAHAsK,KAAAF,SAAAE,KAAAnO,SAGA6D,OACAb,QAAA,IAEAY,MAAAC,QAAA,CACA,IAAAlE,IAAAmF,MAAAqJ,KAAAvK,QACA,KAAAZ,OAAA,MAAAhD,QAAAihB,QAAAjhB,OAAAL,MACA,MAEAK,cAAAL,KAEA,OAAAqD,UAAAY,OAAAC,OACAb,UAEAa,OAAA,MAAA7D,OAAA,EAAAA,OAAA6D,SACA4B,SAAA5B,SAAAkI,QAAApM,IAAAkE,UACAjD,QAAAZ,SAAAkL,YAAAlL,wDCnCA,IAAAkhB,aAAAljB,oBAAA,KACAmjB,iBAAAnjB,oBAAA,KACAoL,MAAApL,oBAAA,IACA8G,MAAA9G,oBAAA,IA4BAG,OAAAD,QAJA,SAAA+B,SAAAkO,MACA,OAAA/E,MAAA+E,MAAA+S,aAAApc,MAAAqJ,OAAAgT,iBAAAhT,iCCfAhQ,OAAAD,QANA,SAAAgjB,aAAAvhB,KACA,gBAAAK,QACA,aAAAA,YAAAiB,EAAAjB,OAAAL,qDCTA,IAAAuO,QAAAlQ,oBAAA,IAeAG,OAAAD,QANA,SAAAijB,iBAAAhT,MACA,gBAAAnO,QACA,OAAAkO,QAAAlO,OAAAmO,4kBCXA,IAAAI,QAAAxG,gBAAA/J,oBAAA,IACAojB,WAAApjB,oBAAA,IACAoR,QAAArH,gBAAA/J,oBAAA,IACAqjB,QAAArjB,oBAAA,IAEAsjB,YAAA,SAAAtR,QAAA,SAAAsR,cAAA,IAAAhb,MAAA,OAAA0J,eAAAC,MAAAnM,KAAAqH,YAAArH,YAaEwC,MAAAuI,UAAY,SAAC0S,SACL,IAAAlR,MAAA/J,MAAA8J,MAAAC,MACN,OAAQkR,SACN,KAAKH,WAAA/S,MACH,IAAIwC,MAAQR,MAAMpR,IAAI,gBAClB4R,QACFR,MAAMpM,IAAI,eAAVoM,CAA0B,IAC1BA,MAAMpM,IAAI,QAAVoM,GACIE,OAAQ,SAAUM,MAAKA,eACtBR,MAAMpR,IAAI,oBAKzB,OA3B0B6R,UAAAwQ,YAAAtR,QAExBsR,YAAAphB,UAAAmP,OAAA,WACE,OAAOd,QAAA5M,QAAAoN,cAACsS,QAAA7S,OACNC,WAAW,EACXC,UAAU,WACVE,SAAU9K,KAAKsM,MAAMC,MAAMpM,IAAI,gBAC/B4K,UAAW/K,KAAK+K,UAChBC,YAAY,yBACZzP,MAAOyE,KAAKsM,MAAMC,MAAMpR,IAAI,mBAkBlCqiB,YA3BA,CAA0B/S,QAAA5M,QAAMiB,WA6BhC1E,QAAAyD,QAAeyN,QAAAzN,QAAMqP,UAAUsQ,ilBClC/B,IAAA/S,QAAAxG,gBAAA/J,oBAAA,IAEAoR,QAAArH,gBAAA/J,oBAAA,IACA2H,QAAA3H,oBAAA,IAEIwjB,UACD,OAAQ,QACR,UAAW,WACX,aAAc,cAGjBC,OAAA,SAAAzR,QAAA,SAAAyR,SAAA,IAAAnb,MAAA,OAAA0J,eAAAC,MAAAnM,KAAAqH,YAAArH,YA8BEwC,MAAAob,iBAAmB,WACjB,OAAApb,MAAK8J,MAAMC,MAAMpM,IAAI,QAArBqC,CACEA,MAAK8J,MAAMC,MAAMpR,IAAI,SAAS0iB,OAAO,SAAAnR,GAAK,MAAa,cAAbA,EAAED,iBAElD,OAlCqBO,UAAA2Q,OAAAzR,QACnByR,OAAAvhB,UAAAmP,OAAA,eAAA/I,MAAAxC,KAEM8d,SAAW9d,KAAKsM,MAAMC,MAAMpR,IAAI,SAChC4iB,YAAcD,SAASD,OAAO,SAAAnR,GAAK,MAAa,WAAbA,EAAED,SAAqB1M,OAE1Die,sBADiBF,SAAS/d,OAASge,YACM,EAE7C,OAAOtT,QAAA5M,QAAAoN,cAAA,UAAQL,UAAU,UACvBH,QAAA5M,QAAAoN,cAAA,QAAML,UAAU,cACdH,QAAA5M,QAAAoN,cAAA,cAAS8S,iBAAuBlc,QAAA2C,UAAUuZ,YAAa,iBAEzDtT,QAAA5M,QAAAoN,cAAA,MAAIL,UAAU,WACX8S,QAAQhd,IAAI,SAAC6C,QAAC5F,MAAA4F,GAAA,GAAO1I,KAAA0I,GAAA,GACpB,OAAAkH,QAAA5M,QAAAoN,cAAA,MAAIpP,IAAK8B,OACP8M,QAAA5M,QAAAoN,cAAA,KACEL,UAAWjN,QAAU6E,MAAK8J,MAAMC,MAAMpR,IAAI,SAAW,WAAa,GAClE8iB,QAAS,WAAM,OAAAzb,MAAK8J,MAAMC,MAAMpM,IAAI,QAArBqC,CAA8B7E,SAC7C9C,UAIPmjB,uBAAyBvT,QAAA5M,QAAAoN,cAAA,UACxBL,UAAU,kBACVqT,QAASje,KAAK4d,kBAAgB,qBAUtCD,OAlCA,CAAqBlT,QAAA5M,QAAMiB,WAoC3B1E,QAAAyD,QAAeyN,QAAAzN,QAAMqP,UAAUyQ,sOC/C/B,IAAAO,aAAAja,gBAAA/J,oBAAA,MACAuQ,QAAAxG,gBAAA/J,oBAAA,IAEAoR,QAAArH,gBAAA/J,oBAAA,IACAikB,WAAAla,gBAAA/J,oBAAA,MAkCAE,QAAAyD,QAAeyN,QAAAzN,QAAMqP,UA1B2B,SAAC3J,QAC/C6I,UAAA7I,GAAA6I,UAAWU,OAAAvJ,GAAAuJ,OAAQF,SAAArJ,GAAAqJ,SAAUL,MAAAhJ,GAAAgJ,MAE7B,OAAA9B,QAAA5M,QAAAoN,cAAA,MAAIL,UAAU,aACX2B,MACEpR,IAAI,SACJ0iB,OAsBP,SAAAO,QAAiBzgB,OACf,OAAO,SAAC0O,MACN,OAAQ1O,OACN,IAAK,OAAQ,OAAO,EACpB,IAAK,UAAW,MAAuB,WAAhB0O,KAAKI,OAC5B,IAAK,aAAc,MAAuB,cAAhBJ,KAAKI,SA3BvB2R,CAAQ7R,MAAMpR,IAAI,WACzBuF,IAAI,SAAC2L,KAAMvM,OACV,OAAA2K,QAAA5M,QAAAoN,cAAA,MACEL,UAAWsT,aAAArgB,SACTwgB,UAA2B,cAAhBhS,KAAKI,OAChB6R,QAASjS,OAASE,MAAMpR,IAAI,iBAE9BU,IAAKiE,OAEL2K,QAAA5M,QAAAoN,cAACkT,WAAAtgB,SACCwO,KAAMA,KACNO,SAAUA,SACVR,UAAWA,UACXU,OAAQA,6DC/BpB,IAAAyR;;;;;;;;;;;CAOA,WACA,aAEA,IAAAC,UAAgBniB,eAEhB,SAAAoiB,aAGA,IAFA,IAAAC,WAEApkB,EAAA,EAAiBA,EAAA+M,UAAAtH,OAAsBzF,IAAA,CACvC,IAAA8c,IAAA/P,UAAA/M,GACA,GAAA8c,IAAA,CAEA,IAAAuH,eAAAvH,IAEA,cAAAuH,SAAA,WAAAA,QACAD,QAAA5Y,KAAAsR,UACI,GAAAra,MAAAD,QAAAsa,UAAArX,OAAA,CACJ,IAAA6e,MAAAH,WAAAtS,MAAA,KAAAiL,KACAwH,OACAF,QAAA5Y,KAAA8Y,YAEI,cAAAD,QACJ,QAAA9iB,OAAAub,IACAoH,OAAA/jB,KAAA2c,IAAAvb,MAAAub,IAAAvb,MACA6iB,QAAA5Y,KAAAjK,MAMA,OAAA6iB,QAAA5b,KAAA,UAGA,IAAAzI,eAAAD,SACAqkB,WAAA5gB,QAAA4gB,WACApkB,OAAAD,QAAAqkB,iBAKGthB,KAFHohB,8BAAA,WACA,OAAAE,YACGtS,MAAA/R,eAAAC,OAAAD,QAAAmkB,+BAxCH,ukBCPA,IAAA9T,QAAAxG,gBAAA/J,oBAAA,IACAojB,WAAApjB,oBAAA,IAEAoR,QAAArH,gBAAA/J,oBAAA,IACAqjB,QAAArjB,oBAAA,IASA2kB,SAAA,SAAA3S,QAAA,SAAA2S,WAAA,IAAArc,MAAA,OAAA0J,eAAAC,MAAAnM,KAAAqH,YAAArH,YAEEwC,MAAAsc,OAAS,WACPtc,MAAK8J,MAAMC,MAAMpM,IAAI,cAArBqC,CAAoCA,MAAK8J,MAAMD,MAC/C7J,MAAK8J,MAAMC,MAAMpM,IAAI,sBAArBqC,CAA4CA,MAAK8J,MAAMD,KAAKU,QAG9DvK,MAAAuI,UAAY,SAAC0S,SACX,OAAQA,SACN,KAAKH,WAAA/S,MAEH,YADA/H,MAAKuc,WAEP,KAAKzB,WAAA9S,OAGH,OAFAhI,MAAK8J,MAAMC,MAAMpM,IAAI,sBAArBqC,CAA4CA,MAAK8J,MAAMD,KAAKU,YAC5DvK,MAAK8J,MAAMC,MAAMpM,IAAI,cAArBqC,CAAoC,QAK1CA,MAAAuc,SAAW,WACT,IAAIC,KAAOxc,MAAK8J,MAAMC,MAAMpR,IAAI,uBAChC,OAAQ6jB,MACN,KAAK,KACH,OACF,IAAK,GACH,OAAOxc,MAAK8J,MAAMF,UAAU5J,MAAK8J,MAAMD,MACzC,QACE7J,MAAK8J,MAAMQ,OAAOtK,MAAK8J,MAAMD,KAAM2S,MACnCxc,MAAK8J,MAAMC,MAAMpM,IAAI,sBAArBqC,CAA4C,cAgCpD,OA5DuBwK,UAAA6R,SAAA3S,QAgCrB2S,SAAAziB,UAAAmP,OAAA,eAAA/I,MAAAxC,KACE,OAAIA,KAAKsM,MAAMD,OAASrM,KAAKsM,MAAMC,MAAMpR,IAAI,eACpCsP,QAAA5M,QAAAoN,cAACsS,QAAA7S,OACNC,WAAS,EACTC,UAAU,OACVrP,MAAOyE,KAAKsM,MAAMC,MAAMpR,IAAI,wBAA0B,GACtD0P,OAAQ,WAAM,OAAArI,MAAKuc,YACnBjU,SAAU9K,KAAKsM,MAAMC,MAAMpM,IAAI,uBAC/B4K,UAAW/K,KAAK+K,YAIbN,QAAA5M,QAAAoN,cAAA,OAAKL,UAAU,QACpBH,QAAA5M,QAAAoN,cAAA,SACEL,UAAU,SACVpJ,KAAK,WACLyd,QAAoC,cAA3Bjf,KAAKsM,MAAMD,KAAKI,OACzB3B,SAAU,SAAApE,GAAK,OAAAlE,MAAK8J,MAAMM,SAASpK,MAAK8J,MAAMD,KAAM3F,EAAEwE,cAAc+T,YAEtExU,QAAA5M,QAAAoN,cAAA,SAAOiU,cAAelf,KAAK8e,QACxB9e,KAAKsM,MAAMD,KAAKU,OAEnBtC,QAAA5M,QAAAoN,cAAA,UACEL,UAAU,UACVqT,QAAS,WAAM,OAAAzb,MAAK8J,MAAMF,UAAU5J,MAAK8J,MAAMD,WAIvDwS,SA5DA,CAAuBpU,QAAA5M,QAAMiB,WA8D7B1E,QAAAyD,QAAeyN,QAAAzN,QAAMqP,UAAU2R,wOC3E/B,IAAAM,MAAAlb,gBAAA/J,oBAAA,MACAuQ,QAAAxG,gBAAA/J,oBAAA,IAEAoR,QAAArH,gBAAA/J,oBAAA,IAoBAE,QAAAyD,QAAeyN,QAAAzN,QAAMqP,UAd4B,SAAC3J,QAAEuH,SAAAvH,GAAAuH,SAE9CgT,SAFwDva,GAAAgJ,MAEvCpR,IAAI,SACrB4iB,YAAcoB,MAAAthB,QAAIigB,SAASD,OAAO,SAAAnR,GAAK,MAAa,WAAbA,EAAED,UAE7C,OAAOhC,QAAA5M,QAAAoN,cAAA,SACLL,UAAU,aACVpJ,KAAK,WACLsJ,SAAU,SAAApE,GAAK,OAAAoE,SAASpE,EAAEwE,cAAc+T,QAAU,YAAc,WAChEA,QAAyB,IAAhBlB,8DClBb,IAAAqB,QAAAllB,oBAAA,KACA2G,SAAA3G,oBAAA,IAsBAG,OAAAD,QANA,SAAAilB,IAAA9e,OACA,OAAAA,aAAAR,OACAqf,QAAA7e,MAAAM,UACA,6BCGAxG,OAAAD,QAdA,SAAAglB,QAAA7e,MAAAsG,UAKA,IAJA,IAAA3H,OACAY,OAAA,EACAC,OAAAQ,MAAAR,SAEAD,MAAAC,QAAA,CACA,IAAAuf,QAAAzY,SAAAtG,MAAAT,aACA3C,IAAAmiB,UACApgB,YAAA/B,IAAA+B,OAAAogB,QAAApgB,OAAAogB,SAGA,OAAApgB;;;;;;;;;;;;;;;ACJA,IAAAqgB,cAAA,SAAA3kB,EAAAgE,GAIA,OAHA2gB,cAAAvkB,OAAAwkB,iBACUC,wBAAgB1iB,OAAA,SAAAnC,EAAAgE,GAAsChE,EAAA6kB,UAAA7gB,IAChE,SAAAhE,EAAAgE,GAAyB,QAAAtC,KAAAsC,IAAAvC,eAAAC,KAAA1B,EAAA0B,GAAAsC,EAAAtC,MACzB1B,EAAAgE,IAGA,SAAAoO,UAAApS,EAAAgE,GAEA,SAAA8gB,KAAmB1f,KAAAkX,YAAAtc,EADnB2kB,cAAA3kB,EAAAgE,GAEAhE,EAAAwB,UAAA,OAAAwC,EAAA5D,OAAAY,OAAAgD,IAAA8gB,GAAAtjB,UAAAwC,EAAAxC,UAAA,IAAAsjB,ICzBE,SAAOvZ,WAAawZ,GACrB,yBAAAA,ECID,IAAAC,qDAAsB,EAKbC,QAUPzE,aAAIje,4CACS5B,OACTA,QACa,IAAAuZ,OACd7L,MAIF2W,oDAAArkB,mDAIA,OAAAqkB,sDC3BD,SAAWE,gBAAQC,KACpBC,WAAA,iBAAAD,MCFC,IAAME,OACNC,QAAA,EACAzN,KAAK,SAALlX,eACE,SAAWwkB,QACTF,OAAMM,sCACP,MAAAJ,IAEAD,gBAAAC,MAGHK,SAAA,sFCdA,SAAY7e,SAAQoe,GACrB,aAAAA,GAAA,iBAAAA,MCEDU,2CACMC,iBAEH,OAAAD,eAAAlU,MAAAnM,KAAAqH,iBACCX,GAED,OADC6Z,YAAO7Z,IACR6Z,aAID,SAAAC,SAAoBC,IAErB,OADCJ,eAAsBI,GACvBH,eCZwCI,wCAAA,SAAKxU,iBAI5CyU,oBACEC,YACKpe,MAAO0J,OAAMzR,KAAAuF,KAAA4gB,OAFDA,OAAA7gB,OAAA,8CAAa6gB,OAAAlgB,IAAA,SAAAqf,IAAAzlB,GAAA,OAAAA,EAAA,OAAAylB,IAAAxZ,aAAAzD,KAAA,aAAA9C,KAK/B,OAPewC,MAAAoe,OAAOA,OAMpBpe,MAAc3H,KAAC,iFACjB2H,MATsC,OAIvCwK,UAAA2T,oBAAgCzU,QAMjCyU,oBAVwC,QCwCvCE,0BAAY,oBAbLC,aAAkB5M,aAGflU,KAAAkgB,QAAO,EAEPlgB,KAAA+gB,QAAQ,KAEV/gB,KAAAghB,SAAA,KAONhhB,KAAIihB,eAAa,KACR/M,cAERlU,KAAAkhB,aAAAhN,aAqKJ,oBA3JO9X,UAAY8X,YAAM,WACtB,IAEI0M,OAFAO,WAAc,MAGhBnhB,KAAAkgB,QAKF,IAAca,QAAT/gB,KAAc+gB,QAAAC,SAAdhhB,KAAcghB,SAAAE,aAAdlhB,KAAckhB,aAAAD,eAAdjhB,KAAcihB,eACnBjhB,KAAKkgB,QAAO,EACZlgB,KAAK+gB,QAAQ,KAGb/gB,KAAKghB,SAAA,KAELhhB,KAAIihB,eAAW,SACf,IAAInhB,OAAM,EAIVshB,IAAOJ,SAASA,SAAAjhB,OAAA,EACdghB,SAGAA,QAAOM,OAAKrhB,MACb+gB,UAAAjhB,MAAAshB,KAAAJ,SAAAlhB,QAAA,QAGCqG,WAAS+a,cACAV,SAAKU,cAAazmB,KAAAuF,QAChBugB,cACTY,WAAS,SAELP,SAAAL,YAA4B7Z,aAAaga,wCAE9CY,4BAAAf,YAAA7Z,EAAAka,SAAAL,YAAA7Z,QAKD5J,QAAQmkB,oBACRnhB,OAAM,EAENshB,IAAAH,eAAoBlhB,SACZD,MAAMshB,KAAA,CACZ,IAAIG,IAAAN,eAAenhB,UACjByB,SAASggB,QACAf,SAAKe,IAAWrN,aAAEzZ,KAAA8mB,OAChBhB,YAAQ,CACjBY,WAAS,EACTP,OAAOA,WACP,IAAIb,IAAGQ,YAAY7Z,EACjBqZ,eAAeW,wCAChBE,cAAA5b,OAAAsc,4BAAAvB,IAAAa,SAEAA,OAAA9a,KAAAia,SAOPoB,UACD,UAAAT,wCAAAE,uBAsBIxkB,UAAayJ,IAAA,SAAa2b,cAC7BA,UAAOA,WAAmBV,aAAAW,MAC3B,OAAAX,aAAAW,SAGCD,WAAYxhB,KACb,OAAAA,KAID,IAAA+T,aAAeyN,uBACRA,cACH,WACFzN,aAAa,IAAA+M,aAAAU,cACX,YACEzN,aAAOmM,QAAa,mBAAAnM,aAAAG,YACrB,OAAAH,aACC,GAAA/T,KAAAkgB,OAED,OADCnM,aAAOG,cACRH,aACC,GAAyB,mBAAbA,aAAa2N,WAAA,CACzB,IAAAC,IAAA5N,cACAA,aAAa,IAAA+M,cACdG,gBAAAU,KAEH,cAED,UAAA7M,MAAA,yBAAA0M,SAAA,2BAQF,OAJoBxhB,KAAAihB,iBAAcjhB,KAAAihB,oBACpBnb,KAAAiO,cAEbA,aAAO2N,WAAa1hB,MACrB+T,2BASO3X,UAAailB,OAAQ,SAAAtN,cAC3B,IAAIM,cAAerU,KAAAihB,kBACjB5M,cAAM,CACN,IAAIuN,kBAAiBvN,cAASvP,QAAAiP,eACP,IAArB6N,mBACDvN,cAAA3E,OAAAkS,kBAAA,kBAMCxlB,UAAEslB,WAAA,SAASG,QACf,IAAYd,QAAP/gB,KAAuB+gB,QAAQC,SAA/BhhB,KAA+BghB,SAGlCD,SAAYA,UAAUc,OAIjBb,UAGiB,IAAtBA,SAAclc,QAAQ+c,SACvBb,SAAAlb,KAAA+b,QAHA7hB,KAAAghB,UAAAa,QAJA7hB,KAAA+gB,QAAAc,qBArLKJ,MAAS,SAAKxB,OAEpB,OADAA,MAAAC,QAAa,EACTD,MAFW,CA8LnB,IAAAa,cAACA,aAzKa,YA4KbQ,4BAAsBV,QACtB,OAAAA,OAAAkB,OAAA,SAAAC,KAAAhC,KAAA,OAAAgC,KAAA/c,OAAA+a,eAAAW,wCAAAX,IAAAa,OAAAb,UCvNK,IAAAiC,aAA0B,mBAAA3mB,QAAA,mBAAAA,OAAA4mB,IAC1B5mB,OAAiB4mB,IAAA,gBAKjB,iBCU6BC,sBAAA,SAAYhW,iBAuC7CiW,WAGEC,kBAAOvf,MA8BRud,UAhDgB,IAAA5d,MAAA0J,OAAAzR,KAAsBuF,OAAKA,YAC3BwC,MAAA6f,eAAe,KACf7f,MAAA8f,iBAAkB,EAEzB9f,MAAA+f,oBAA2B,EAgBnC/f,MAAAggB,WAAkB,EAChBnb,UAAMtH,aACJ,EACAyC,MAAMigB,YAAAxC,MACR,WACE,MACEmC,kBAAmB,CACnB5f,MAAMigB,YAAAxC,MACP,SAIyB,iBAApBmC,kBAAoB,aA2OhCM,oBAAsBC,KACvB,OAAAA,eAAAT,uBAAA,uBAAAS,SAAAX,cA3OWU,CAAMN,mBAAoB,CAC1B,IAAAQ,kBAAuBR,kBAAGJ,gBAC1Bxf,MAAK+f,mBAAcK,kBAAkBL,mBACrC/f,MAAAigB,YAAkBG,kBACnBA,kBAAA/c,IAAArD,YAECA,MAAK+f,oBAAkB,EACxB/f,MAAAigB,YAAA,IAAAI,0BAAArgB,MAAA4f,mBAEF,cAGD5f,MAAK+f,oBAAkB,EACvB/f,MAAMigB,YAAA,IAAAI,0BAAArgB,MAAA4f,kBAAAvf,MAAAud,UAEX,OAAA5d,MAxEgC,OAuCjCwK,UAAAmV,WAAYjW,QAvBLiW,WAAA/lB,UAAP4lB,cAEiB,WAAqB,OAAAhiB,iBAC9BpE,OAAU,SAAO6W,KAAW5P,MAAMud,UACxC,IAAA0C,WAAW,IAAAX,WAAqB1P,KAAM5P,MAAAud,UAEvC,OADC0C,WAAOP,oBAAW,EACnBO,uBA4DM1mB,UAAKqW,KAAW,SAAAlX,OACnByE,KAAKwiB,WACNxiB,KAAA+iB,MAAAxnB,mBAWIa,UAAKyG,MAAW,SAAAkd,KACnB/f,KAAKwiB,YACLxiB,KAAKwiB,WAAY,EAClBxiB,KAAAgjB,OAAAjD,kBAUI3jB,UAAKgkB,SAAW,WACnBpgB,KAAKwiB,YACLxiB,KAAKwiB,WAAY,EAClBxiB,KAAAijB,yBAIG7mB,UAAa8X,YAAA,WACflU,KAAAkgB,SAGFlgB,KAAAwiB,WAAM,EACPtW,OAAA9P,UAAA8X,YAAAzZ,KAAAuF,mBAGM5D,UAAY2mB,MAAK,SAAOxnB,OAC9ByE,KAAAyiB,YAAAhQ,KAAAlX,mBAGMa,UAAY4mB,OAAS,SAAEjD,KAC5B/f,KAAKyiB,YAAW5f,MAAGkd,KACpB/f,KAAAkU,0BAGM9X,UAAY6mB,UAAW,WAC5BjjB,KAAKyiB,YAAWrC,WACjBpgB,KAAAkU,0BAIO9X,UAAE8mB,uBAAS,WACjB,IAAenC,QAAV/gB,KAAe+gB,QAAAC,SAAfhhB,KAAeghB,SAQrB,OAPChhB,KAAK+gB,QAAQ,KACb/gB,KAAKghB,SAAW,KAChBhhB,KAAKkU,cACLlU,KAAKkgB,QAAS,EACdlgB,KAAKwiB,WAAU,EACfxiB,KAAK+gB,QAAQA,QACb/gB,KAAAghB,SAAYA,SACbhhB,MAnJgCmiB,WAAA,4BA2JHU,0BAAA,SAAa3W,iBAI3CiX,eAIEC,kBAwBDC,eAAAxgB,MAAAud,UA5BmB,IAOd3N,KAPcjQ,MAAA0J,OAAAzR,KAAiBuF,OAAjBA,KAMlBwC,MAAI4gB,kBAA2BA,kBAG/B,IAAIE,QAAU9gB,MAmBf,OAlBG2D,WAA+Bkd,gBAChC5Q,KAAA4Q,eACKA,iBACJ5Q,KAAK4Q,eAAwC5Q,KAC7C5P,MAAQwgB,eAAyBxgB,MACjCud,SAAIiD,eAAmBjD,SACrBiD,iBAAiBpD,QAEf9Z,YADFmd,QAAItoB,OAAWY,OAAQynB,iBACSnP,cAC/B1R,MAAAqD,IAAAyd,QAAApP,YAAApY,KAAAwnB,UAEFA,QAAApP,YAAA1R,MAAA0R,YAAApY,KAAA0G,SAIHA,MAAK+gB,SAAQD,QACb9gB,MAAKugB,MAAMtQ,KACXjQ,MAAKwgB,OAASngB,+BACfL,MAhC6B,OAI9BwK,UAAAmW,eAAoBjX,uBA+BR9P,UAASqW,KAAS,SAAOlX,WACzByE,KAAAwiB,WAAAxiB,KAAA+iB,MAAA,CACR,IAAIK,kBAAQpjB,KAAAojB,kBACVvD,OAAKM,uCAAgCiD,kBAAAb,mBAEhCviB,KAAAwjB,gBAAcJ,kBAAApjB,KAAA+iB,MAAAxnB,QACpByE,KAAAkU,cAFAlU,KAAAyjB,aAAAzjB,KAAA+iB,MAAAxnB,wBAOOa,UAAWyG,MAAA,SAAAkd,SACX/f,KAAAwiB,UAAA,CACA,IAAAY,kBAAApjB,KAAAojB,kBACJjD,sCAAaN,OAAAM,yCACfngB,KAAKgjB,OACH7C,uCAAoCiD,kBAAAb,oBAIpCviB,KAAKwjB,gBAAcJ,kBAAApjB,KAAAgjB,OAAAjD,KACpB/f,KAAAkU,gBAJClU,KAAKyjB,aAAazjB,KAACgjB,OAAAjD,KACpB/f,KAAAkU,oBAKD,GAAKkP,kBAAcb,mBAOjBpC,uCACAiD,kBAAkBf,eAAetC,IAClCqD,kBAAAd,iBAAA,GAEAxC,gBAAAC,KAEF/f,KAAAkU,kBAboB,IACnBlU,KAAIkU,cACFiM,sCACD,MAAAJ,IAEFD,gBAAAC,uBAYL3jB,UAiBCgkB,SAAA,WAhBC,IAAI5d,MAAMxC,SACAA,KAAAwiB,UAAA,CACR,IAAIY,kBAAgBpjB,KAAAojB,qBAClBpjB,KAAMijB,UAAA,CAEN,IAAIS,gBAAQ,kBAAAlhB,MAAqCygB,UAAKxoB,KAAA+H,MAAA+gB,WACpD1D,OAAKM,uCAA8BiD,kBAAAb,oBAInCviB,KAAKwjB,gBAAcJ,kBAAAM,iBACpB1jB,KAAAkU,gBAJClU,KAAKyjB,aAAaC,iBACnB1jB,KAAAkU,oBAMFlU,KAAAkU,+BAKC9X,UAAAqnB,aAAA,SAAAhD,GAAAllB,WAEHklB,GAAAhmB,KAAAuF,KAAAujB,SAAAhoB,aACCwkB,QACA/f,KAAIkU,cACF2L,OAAMM,sCACP,MAAAJ,IAEAD,gBAAAC,sBAKQ3jB,UAAConB,gBAAA,SAAqC3B,OAAEpB,GAAAllB,WACjDskB,OAAMM,sCACP,UAAArL,MAAA,gBAGA2L,GAAAhmB,KAAAuF,KAAAujB,SAAAhoB,aACCwkB,YACEF,OAAOM,uCACP0B,OAAOQ,eAAetC,IACtB8B,OAAOS,iBAAK,GACb,IAECxC,gBAAYC,MACb,GAGJ,yBAIS3jB,UAAA8kB,aAAA,WACR,IAAIkC,kBAAiBpjB,KAAAojB,kBACrBpjB,KAAKujB,SAAA,KACLvjB,KAAAojB,kBAAkB,KACnBA,kBAAAlP,eApI6BiP,eAAA,CAuIhCjB,+HCpS2B,SAAAyB,sBAAAC,GAAA,EAAAA,GAAAvc,UAAkCtH,OAAA6jB,2BAE5D,OAAAC,cAAAC,KAIC,SAAUD,cAAAC,YACRA,IAIc,IAAdA,IAAA/jB,OACD+jB,IAAA,GAGC,SAAWC,MAAOC,OAClB,OAAAF,IAAAhC,OAAA,SAAAmC,KAAAxD,IAAA,OAAAA,GAAAwD,OAAAD,QARDE,SCWDC,sBAAY,oBAfL7R,WAASI,WAgBd1S,KAAIokB,WAAW,EACb1R,YACD1S,KAAAqkB,WAAA3R,WAgTJ,kBAtRStW,UAAakoB,KAAI,SAAgBC,UACvC,IAAAlS,WAAiB,IAAGC,WAGrB,OAFCD,WAAWoF,OAAQzX,KACnBqS,WAAOkS,SAAWA,SACnBlS,uBA8HSjW,UAAAsW,UAAkB,SAAA2Q,eAAAxgB,MAAAud,UAC1B,IAAMmE,SAAOvkB,KAAAukB,SAETC,KC3LN,SAAIC,aAAgBC,eAAA7hB,MAAAud,aAClBsE,eAAI,IACFA,0BAAwCxC,sBACzC,OAAAwC,kBAGCA,eAAO1C,cACR,OAAA0C,eAAA1C,uBAID0C,gBAAW7hB,OAAWud,SAIzB,IAAA8B,sBAAAwC,eAAA7hB,MAAAud,UAHE,IAAA8B,sBAAAjC,OD+KKwE,CAAUpB,eAAAxgB,MAAAud,aACZmE,SACDA,SAAA9pB,KAAA+pB,KAAAxkB,KAAAyX,aAGG5R,IAAK7F,KAAAyX,QAAgBoI,OAAEM,wCAAAqE,KAAAjC,mBACvBviB,KAAKqkB,WAAAG,MAERxkB,KAAA2kB,cAAAH,OAGC3E,OAAIM,uCACFqE,KAAKjC,qBACLiC,KAAIjC,oBAAsB,EACxBiC,KAAAlC,iBACD,MAAAkC,KAAAnC,eAKN,OAAAmC,iBAIKpoB,UAAAuoB,cAAA,SAAAH,UAEH,OAAAxkB,KAAAqkB,WAAAG,YACCzE,KACEF,OAAKM,wCACLqE,KAAKlC,iBAAiB,EACvBkC,KAAAnC,eAAAtC,KAEFyE,KAAA3hB,MAAAkd,kBAUH3jB,UAkBC+C,QAAA,SAAAsT,KAAAmS,aAjBC,IAAApiB,MAAWxC,YAKT,IAHF4kB,YAAWC,eAAkBD,cAGI,SAAAhJ,QAAAkJ,QAC/B,IAAA/Q,0BACMvR,MAAAkQ,UAAA,SAAAnX,WAEHkX,KAAAlX,aACCwkB,KACA+E,OAAI/E,KACFhM,cACDA,aAAAG,gBAGa4Q,OAAAlJ,uBAKZxf,UAAAioB,WAAgB,SAAAvB,YACxB,IAAArL,OAAazX,KAAIyX,OAClB,OAAAA,eAAA/E,UAAAoQ,wBAqBQ1mB,UAAK2oB,uBAAA,WACb,OAAA/kB,iBAmCO5D,UAAAunB,KAAuC,iCAAvCC,GAAA,EAAAA,GAAAvc,UAAAtH,OAAuC6jB,yCAExB,IAAnBoB,WAAkBjlB,OACnBC,KAGF6jB,cAAAmB,WAAAnB,CAAA7jB,kBAQD5D,UAOC6oB,UAAA,SAAAL,aANC,IAAApiB,MAAWxC,YAGT,IADF4kB,YAAWC,eAAYD,cACN,SAAAhJ,QAAAkJ,QACf,IAAAvpB,MACeiH,MAAAkQ,UAAA,SAAAiN,GAAA,OAAApkB,MAAAokB,GAAA,SAAAI,KAAA,OAAA+E,OAAA/E,MAAA,kBAAAnE,QAAArgB,uBA/RVK,OAAI,SAAc8W,WAC1B,WAAAJ,WAAAI,YAgSFJ,WAnTa,YA6TPuS,eAAaD,gBAChBA,cACDA,YAAA/E,OAAAzE,mBAGCwJ,YACD,UAAA9P,MAAA,yBAGF,OAAA8P,gBEhW4CM,gDAAA,SAAKhZ,iBAIhDiZ,0BAFgB,IAAA3iB,MAAI0J,OAAGzR,KAAAuF,KAAA,wBAA0BA,KAKhD,OADEwC,MAAc3H,KAAC,yFACjB2H,MAP0C,OAI3CwK,UAAAmY,wBAAAjZ,QAIDiZ,wBAR4C,QCADC,wCAAA,SAAYlZ,iBAGtDmZ,oBACEC,QAAOxC,YADU,IAAAtgB,MAAA0J,OAAAzR,KAAmBuF,YAErC,OAF8CwC,MAAA8iB,QAAUA,QAFzD9iB,MAAAsgB,WAAkBA,2BAIjBtgB,MALyC,OAG1CwK,UAAAqY,oBAA+CnZ,4BAK9B9P,UAAE8X,YAAA,eACflU,KAAAkgB,QAKFlgB,KAAMkgB,QAAU,EAChB,IAAMoF,QAAStlB,KAAGslB,QAEdtT,UAAWsT,QAAKtT,aAEpBhS,KAAKslB,QAAS,KACZtT,WAAO,IAAAA,UAAAjS,SAAAulB,QAAA9C,YAAA8C,QAAApF,QAKT,IAAIqF,gBAAevT,UAASlN,QAAA9E,KAAA8iB,aACT,IAAjByC,iBACDvT,UAAAtC,OAAA6V,gBAAA,MA3BuCF,oBAAA,4BCGFG,0BAAA,SAAatZ,iBACrDuZ,kBACEhD,aADoB,IAAAjgB,MAAA0J,OAAWzR,KAAXuF,KAAAyiB,cAAuBziB,KAE5C,qCAAAwC,MAHuC,OACxCwK,UAAAyY,kBAAsBvZ,QADkBuZ,kBAAA,wBASVC,gBAAA,SAAaxZ,iBAgB3CyZ,UAVA,IAAAnjB,MAAA0J,OAA2BzR,KAAGuF,YAY7B,OAVDwC,MAAAwP,aAEAxP,MAAA0d,QAAS,EAET1d,MAAAggB,WAAW,EAEXhgB,MAAAojB,UAAW,yBAIVpjB,MAlB6B,OAgB9BwK,UAAA2Y,QAAAzZ,gBAbE9P,UAAW4lB,cAAwB,WACpC,WAAAwD,0BAAAxlB,eAsBO5D,UAAUkoB,KAAI,SAAAC,UACpB,IAAAe,QAAQ,IAAQO,yBAAiB7lB,WAElC,OADCslB,QAAYf,SAAQA,SACrBe,iBAGKlpB,UAAKqW,KAAQ,SAAAlX,UACfyE,KAAAkgB,OACD,UAAAgF,oDAESllB,KAAAwiB,cACR,IAAMxQ,UAAMhS,KAAUgS,UAChBoP,IAAIpP,UAAYjS,OACtB+lB,KAAU9T,UAAUjN,QACbzK,EAAG,EAAIA,EAAC8mB,IAAO9mB,IACrBwrB,KAAAxrB,GAAAmY,KAAAlX,gBAKCa,UAAKyG,MAAQ,SAAAkd,QACf/f,KAAAkgB,OACD,UAAAgF,gDAEDllB,KAAK4lB,UAAW,EAChB5lB,KAAK+lB,YAAYhG,IACT/f,KAAAwiB,WAAA,MACR,IAAMxQ,UAAMhS,KAAUgS,UAChBoP,IAAIpP,UAAYjS,OACtB+lB,KAAU9T,UAAUjN,QACbzK,EAAG,EAAAA,EAAM8mB,IAAK9mB,IACpBwrB,KAAAxrB,GAAAuI,MAAAkd,KAEF/f,KAAAgS,UAAAjS,OAAA,WAGK3D,UAAKgkB,SAAQ,cACfpgB,KAAAkgB,OACD,UAAAgF,gDAEOllB,KAAAwiB,WAAA,MACR,IAAMxQ,UAAMhS,KAAUgS,UAChBoP,IAAIpP,UAAYjS,OACtB+lB,KAAU9T,UAAUjN,QACbzK,EAAG,EAAAA,EAAQ8mB,IAAG9mB,IACpBwrB,KAAAxrB,GAAA8lB,WAEFpgB,KAAAgS,UAAAjS,OAAA,WAGK3D,UAAU8X,YAAQ,WACtBlU,KAAKwiB,WAAS,EACdxiB,KAAKkgB,QAAS,EACflgB,KAAAgS,UAAA,cAIK5V,UAAKuoB,cAAQ,SAAA7B,eACf9iB,KAAAkgB,OACD,UAAAgF,gDAEA,OAAAhZ,OAAA9P,UAAAuoB,cAAAlqB,KAAAuF,KAAA8iB,qBAKG1mB,UAAKioB,WAAQ,SAAAvB,eACf9iB,KAAAkgB,OACD,UAAAgF,gDACC,OAAAllB,KAAU4lB,UACV9C,WAAOjgB,MAAA7C,KAAa+lB,aACrBlF,0BAAAY,OACCzhB,KAAUwiB,WACVM,WAAO1C,WACRS,0BAAAY,QAECzhB,KAAAgS,UAAWlM,KAAAgd,YACZ,IAAAsC,wCAAAplB,KAAA8iB,sBAIK1mB,UAAU4pB,aAAO,WACjB,IAAA3T,WAAkB,IAAG8R,sBAE5B,OADC9R,WAAOoF,OAAWzX,KACnBqS,oBAxFCzW,OAAW,SAAA6mB,YAAoBhL,QAChC,WAAAoO,yBAAApD,YAAAhL,SAvB6BkO,QAAA,wBAoHSE,yBAAA,SAAU3Z,iBACjD+Z,iBACExD,YAAOhL,QADa,IAAAjV,MAAA0J,OAAWzR,KAAXuF,OAAyBA,KAG9C,OADCwC,MAAKigB,YAASA,gCACfjgB,MAJsC,OACvCwK,UAAAiZ,iBAAsB/Z,yBAMZ9P,UAAAqW,KAAA,SAAqBlX,OAC7B,IAAIknB,YAAWziB,KAAIyiB,YACjBA,aAAYA,YAAYhQ,MACzBgQ,YAAAhQ,KAAAlX,yBAIOa,UAAAyG,MAAA,SAAqBkd,KAC7B,IAAI0C,YAAWziB,KAAIyiB,YACjBA,aAAKA,YAAsB5f,OAC5B7C,KAAAyiB,YAAA5f,MAAAkd,uBAIO3jB,UAAAgkB,SAAW,WACnB,IAAIqC,YAAWziB,KAAIyiB,YACjBA,aAAKA,YAAsBrC,UAC5BpgB,KAAAyiB,YAAArC,6BAKOhkB,UAAAioB,WAAgB,SAAAvB,mBACZ9iB,KAAAyX,OAEXzX,KAAAyX,OAAA/E,UAAAoQ,YAEAjC,0BAAAY,OAlC2CwE,iBAAP,sBC3HvCC,iBAAoB,oBAAAA,iBAAAC,aACnBnmB,KAAAmmB,wBAeF,wBAZW/pB,UAAA3B,KAAA,SAAqBqoB,WAAArL,QACtB,IAAA0O,YAAanmB,KAAWmmB,YAE/BA,YAAMC,YACN,IAAMC,WAAY,IAAGC,4BAAiBxD,WAAYqD,aAE9CpS,aAAY0D,OAAQ/E,UAAA2T,YAKzB,OAJUA,WAAYnG,SACpBmG,WAAAE,WAAAJ,YAAAnT,WAGFe,cACFmS,iBAhBqB,GAkBcI,4BAAA,SAAapa,iBAI/Csa,mBAEE/D,YAAM0D,aADY,IAAA3jB,MAAA0J,OAAWzR,KAAXuF,KAAAyiB,cAAqCziB,KAExD,qCAAAwC,MAPiC,OAIlCwK,UAAAwZ,mBAAYta,2BAOF9P,UAAA8kB,aAAqB,WAC7B,IAAIiF,YAAcnmB,KAAAmmB,eAChBA,aAKFnmB,KAAMmmB,YAAkB,KACxB,IAAIM,SAAQN,YAAOC,aACjBK,UAAK,EACLzmB,KAAAumB,WAAO,aAITJ,YAAYC,UAAMK,SAAA,EAChBA,SAAK,EACLzmB,KAAAumB,WAAO,UA4BT,IAAMA,WAAAvmB,KAAgBumB,WAClBG,iBAAmBP,YAAAQ,YAEvB3mB,KAAIumB,WAAA,MACFG,kBAAiBH,YAAcG,mBAAAH,YAChCG,iBAAAxS,oBA9CClU,KAAAumB,WAAO,MAduBC,mBAAA,wBCrBUI,4CAAA,SAAa1a,iBAQzD2a,sBAEEpP,OAAOqP,gBAFU,IAAAtkB,MAAM0J,OAANzR,KAAqBuF,YAGvC,OAFqBwC,MAAAiV,cANZjV,MAAAskB,eAAsBA,eAGhCtkB,MAAA4jB,UAAW,uBAKV5jB,MAX2C,OAQ5CwK,UAAA6Z,sBACsB3a,8BAMR9P,UAAaioB,WAAU,SAAYvB,YAChD,OAAA9iB,KAAA+mB,aAAArU,UAAAoQ,mCAGqB1mB,UAAU2qB,WAAA,WAC9B,IAAIzB,QAAQtlB,KAAIgnB,SAIjB,OAHG1B,UAAKA,QAAe9C,YACrBxiB,KAAAgnB,SAAAhnB,KAAA8mB,kBAEF9mB,KAAAgnB,gCAGkB5qB,UAAK4W,QAAY,WAClC,IAAIuT,WAAavmB,KAAA2mB,YAalB,OAZGJ,aACAvmB,KAAAinB,aAAkB,GAClBV,WAAWvmB,KAAI2mB,YAAW,IAAA9F,2BACvBhb,IAAU7F,KAAIyX,OACb/E,UAAW,IAAAwU,4CAAQlnB,KAAA+mB,aAAA/mB,QACrBumB,WAAKrG,QACLlgB,KAAA2mB,YAAa,KACdJ,WAAA1F,0BAAAY,OAEAzhB,KAAA2mB,YAAAJ,YAGJA,kCAGQnqB,UAAqBqqB,SAAwB,WACrD,ODhDD,SAAOA,kBACL,SAAOU,yBAAgB1P,QACQ,OAAAA,OAAA6M,KAAA,IAAA4B,iBAAAzO,UC8ChCgP,GAAAzmB,OA7C2C6mB,sBAAA,wBAkD9CO,iBAAaR,4CAAyDxqB,UAY/B8qB,6CANjBE,iBAAkB/C,WACjB+C,iBAAiBH,YACpBG,iBAAiBL,WAClBK,iBAAkBpU,QACnCoU,iBAAAX,SAEqC,SAAoBva,iBACzDmb,sBAEE5E,YAAM0D,aADY,IAAA3jB,MAAA0J,OAAWzR,KAAXuF,KAAAyiB,cAAqCziB,KAExD,qCAAAwC,MAJoC,OACrCwK,UAAAqa,sBAAYnb,8BAKO9P,UAAG4mB,OAAA,SAAAjD,KACpB/f,KAAAkhB,eACDhV,OAAA9P,UAAA4mB,OAAAvoB,KAAAuF,KAAA+f,4BAEkB3jB,UAAW6mB,UAAQ,WACpCjjB,KAAKmmB,YAAYc,aAAG,EACpBjnB,KAAAkhB,eACDhV,OAAA9P,UAAA6mB,UAAAxoB,KAAAuF,6BAE0B5D,UAAK8kB,aAAY,WAC1C,IAAIiF,YAAanmB,KAAAmmB,eACfA,YAAK,CACLnmB,KAAMmmB,YAAa,KACnB,IAAAI,WAAYJ,YAAcQ,YAC1BR,YAAYC,UAAW,EACvBD,YAAYa,SAAW,KACvBb,YAAIQ,YAAY,KACdJ,YACDA,WAAArS,gBAxBgCmT,sBAAA,CA6BvC7B,gCCsK6C8B,0BAAA,SAAapb,iBAExDqb,kBAGE1rB,IAAA2rB,aACDC,sBAJkB,IAAAjlB,MAAA0J,OAAMzR,KAAAuF,YAIxB,OAHmBwC,MAAA3G,QACA2G,MAAAglB,0EAEnBhlB,MAN0C,OAE3CwK,UAAAua,kBACoBrb,0BAOZ9P,UAAmBioB,WAAc,SAACvB,YAClC,IAAA/O,aAAE,IAAA8M,0BACJ4G,qBAAAznB,KAAyBynB,qBAA6BD,aAAtDxnB,KAAsDwnB,aAK3D,OAJGC,uBAAqBA,qBAAyBvH,QAC/CnM,aAAAlO,IAAA,IAAA6hB,kCAAAD,uBAED1T,aAAOlO,IAAA2hB,aAAa9U,UAAAoQ,aACrB/O,cAjB0CwT,kBAAA,wBAyBLG,kCAAA,SAAYxb,iBAClDyb,0BACS9F,QADW,IAAArf,MAAM0J,OAANzR,KAA4BuF,YAG/C,OADCwC,MAAMqf,OAASA,sBAChBrf,MAJqC,OACtCwK,UAAA2a,0BAAgDzb,kCAM1B9P,UAAO8X,YAAA,WAC3B,IAAI2N,OAAQ7hB,KAAM6hB,OAChBA,OAAA3B,QAAMlgB,KAAAkgB,SACNhU,OAAO9P,UAAU8X,YAACzZ,KAAAuF,MAClB6hB,OAAIpd,OAAY,EACP,IAAPod,OAAOpd,OAAcod,OAAA+F,wBACtB/F,OAAA3N,gBAbiCyT,0BAAA,4BC5RAE,gCAAA,SAAU3b,iBAEhD4b,gBACEC,QADkB,IAAAvlB,MAAM0J,OAANzR,KAASuF,YAE5B,2BAAAwC,MAJqC,OAEtCwK,UAAA8a,gBAA6B5b,8BAI7B4b,gBAAA1rB,UAAA,aACE,WACD,OAAA4D,KAAA/C,0BAAA+T,cAAA,oBAIO5U,UAAeioB,WAAA,SAAMvB,YAC3B,IAAI/O,aAAY7H,OAAwB9P,UAAcioB,WAAQ5pB,KAAAuF,KAAA8iB,YAI/D,OAHG/O,eAAgBA,aAAamM,QAC9B4C,WAAArQ,KAAAzS,KAAA+nB,QAEFhU,8BAGU3X,UAAUa,SAAA,cACjB+C,KAAA4lB,SACD,MAAA5lB,KAAA+lB,YACC,GAAA/lB,KAAUkgB,OACX,UAAAgF,gDAEA,OAAAllB,KAAA+nB,wBAID3rB,UAAUqW,KAAA,SAAMlX,OACjB2Q,OAAA9P,UAAAqW,KAAAhY,KAAAuF,UAAA+nB,OAAAxsB,QA/B4CusB,gBAAP,kBCCJE,wBAAA,SAAS9b,iBAO3C+b,YAEEC,UAAAC,MAFoB,IAAA3lB,MAAA0J,OAAAzR,KAAAuF,KAAyBkoB,UAAAC,OAAAnoB,KAG9C,OAFqBwC,MAAA0lB,UAAmDA,UAH/D1lB,MAAA2lB,KAAOA,sBAKhB3lB,aAHDwK,UAAAib,YAA+C/b,oBAKpB9P,UAAAgsB,SAAA,SAAiBpmB,MAAAqmB,OAO1C,QALS,IAALA,QACFA,MAAO,GAILroB,KAACkgB,OAEC,OAAKlgB,KAwBXA,KAAIgC,MAAMA,UACRsmB,GAAKtoB,KAAKsoB,GACXJ,UAAAloB,KAAAkoB,UAa2D,OATvD,MAADI,KAEAtoB,KAACsoB,GAAQtoB,KAAMuoB,eAAAL,UAAAI,GAAAD,QAInBroB,KAAAwoB,SAAY,EACbxoB,KAAAqoB,YAESroB,KAAAsoB,GAAAtoB,KAAAsoB,IAAAtoB,KAAAyoB,eAAVP,UAAyBloB,KAA2BsoB,GAAUD,OAAAroB,MAE9DioB,YAAC7rB,UAAAqsB,eAAA,SAAAP,UAAAI,GAAAD,mBAES,IAAAA,QAAmDA,MAAA,GAGzDK,YAAUR,UAAAS,MAAA7sB,KAAAosB,UAAAloB,MAAAqoB,oBAILjsB,UAAAmsB,eAAqB,SAAaL,UAAUI,GAAAD,eACpD,IAAAA,QAMMA,MAAA,GAGI,OAAPA,OAAiBroB,KAAAqoB,gBAAgC,IAAhCroB,KAA8BwoB,QAChD,OAAAF,GAGKM,cAAaN,iBAEjBlsB,UAAaysB,QAAA,SAAA7mB,MAAAqmB,UACdroB,KAAAkgB,cAAU,IAAKpL,MAAO,qCAetB0T,SAAA,EACF,IAAA3lB,MAAA7C,KAAA8oB,SAAA9mB,MAAAqmB,OAES,GAAAxlB,MACJ,OAAOA,OAEP,IAAA7C,KAAAwoB,SAAA,MAAAxoB,KAAAsoB,KACFtoB,KAAKsoB,GAAKtoB,KAAKuoB,eAAEvoB,KAAAkoB,UAAAloB,KAAAsoB,GAAA,oBAEjBlsB,UAAc0sB,SAAC,SAAA9mB,MAAAqmB,WACfU,SAAU,EACXC,gBAAA7rB,EACD,IACE6C,KAAKmoB,KAAAnmB,aAEN0E,GACFqiB,SAAA,EAGDC,aAAAtiB,MAAA,IAAAoO,MAAApO,GAGE,GAAMqiB,QAEA,OADA/oB,KAAAkU,cACK8U,wBAIN5sB,UAAU8kB,aAAM,WACrB,IAAIoH,GAACtoB,KAASsoB,GAEVJ,UAAYloB,KAAEkoB,UAChBe,QAAQf,UAAYe,QACrBnpB,MAAAmpB,QAAAnkB,QAAA9E,MAEDA,KAAImoB,KAAM,UACRnmB,MAAO,UACRwmB,SAAA,EAEDxoB,KAAKkoB,UAAY,MAClB,IAAApoB,OACHmpB,QAAAvZ,OAAC5P,MAAA,2FAhJmC,CCQL,SAAYoM,wBAEvCgc,UAAAC,MACD,OAAAjc,OAAAzR,KAAAuF,mBAFDgN,UAAYkc,OAAoBhd,eAaL9P,UAAAgsB,SAAA,SAAiBpmB,MAAAqmB,OAdf,YAef,IAAZA,QACDA,MAAA,GAhBwCroB,aAAZ,6BCRKmpB,wBAAA,SAAcjd,iBAEhDkd,YAEElB,UAAAC,MAFoB,IAAA3lB,MAAA0J,OAAAzR,KAAAuF,KAAyBkoB,UAAAC,OAAAnoB,KAG9C,OAFqBwC,MAAA0lB,UAAmDA,0BAExE1lB,aAHDwK,UAAAoc,YAA+Cld,oBAKpB9P,UAAAgsB,SAAA,SAAiBpmB,MAAAqmB,OAI1C,YAHa,IAATA,QACFA,MAAO,GAELA,MAAM,EACAnc,OAAQ9P,UAACgsB,SAAA3tB,KAAAuF,KAAAgC,MAAAqmB,QAEnBroB,KAAAqoB,MAAYA,MACbroB,KAAAgC,YAEMhC,KAAAkoB,UAAAS,MAAA3oB,MACEA,mBAED5D,UAAUysB,QAAO,SAAQ7mB,MAAAqmB,OAChC,OAAAA,MAAA,GAAAroB,KAAAkgB,OAEShU,OAAA9P,UAAAysB,QAAApuB,KAAcuF,KAAxBgC,MAAyBqmB,OAAqCroB,KAAA8oB,SAAA9mB,MAAAqmB,oBAK1DjsB,UAAOqsB,eAAM,SAAcP,UAACI,GAAAD,OAKlC,YAJK,IAAAA,QAEDA,MAAO,GAEV,OAADA,OAACA,MAAA,UAAAA,OAAAroB,KAAAqoB,MAAA,EAAAnc,OAAA9P,UAAAqsB,eAAAhuB,KAAAuF,KAAAkoB,UAAAI,GAAAD,0CAjCmC,0BCapCgB,UAAA,WASE,SAAAA,UAAoBC,gBACRhY,UAAA,IAAAA,MADQA,IAAA+X,UAAe/X,KAGlCtR,KAAAspB,gCA6BMtpB,KAAAsR,yBACLlV,UAAgBgsB,SAAA,SAAuBD,KAAOE,MAACrmB,OAElD,YADE,IAAAqmB,QApCaA,MAAoB,GAqCnC,IAAAroB,KAAAspB,gBAAAtpB,KAAAmoB,MAAAC,SAAApmB,MAAAqmB,8DA5CD,GCjBoCkB,8BAAA,SAASrd,iBAoB/Bsd,eAAAF,gBAA6BhY,UACvC,IAFFA,MAGIA,IAAI+X,UAAA/X,eAEHpF,OAAAzR,KAAAuF,KAAAspB,gBAAA,iCAAMG,UAAAD,eAAAC,WAAAjnB,MACEgnB,eAAMC,SAAAnY,MAvBLA,SAePtR,KAaiE,wBAFvEwC,MAAAknB,QAAA,EAEMlnB,MAAAmnB,eAAAxsB,EAAiEqF,aAXxEwK,UAAAwc,eAAYtd,uBAaD9P,UAAAgsB,SAAe,SAASD,KAAaE,MAAOrmB,mBACpD,IAAAqmB,cAAM,GAENmB,eAAAC,UAAAD,eAAAC,WAAAzpB,KACFwpB,eAAAC,SAAArB,SAAAD,KAAAE,MAAArmB,OAMUkK,OAAQ9P,UAAAgsB,SAAA3tB,KAAAuF,KAAAmoB,KAAAE,MAAArmB,uBAGhB5F,UAAAusB,MAAA,SAAAiB,QAED,IAAIX,QAAWjpB,KAAAipB,QACf,GAAIjpB,KAAC0pB,OAEFT,QAAAnjB,KAAA8jB,YAFH,gBAMCF,QAAQ,EAET,GAEI,GAAA7mB,MAAO+mB,OAAAf,QAAAe,OAAA5nB,MAAA4nB,OAAAvB,OACT,YAECuB,OAAAX,QAAAY,iBACDH,QAAM,EACP7mB,MAAA,CACF,KAAA+mB,OAAAX,QAAAY,SACHD,OAAA1V,4CAjEoC,sBCJA,SAAchI,kCACjD,cAAAA,eAAAC,MAAAnM,KAAAqH,YAAArH,KADmC,OAApCgN,UAAA8c,eAAA5d,QAAoC4d,eAAA,0DCwD9BrI,MAAyC,IAAA0C,sBAAA,SAAArB,YAAA,OAAAA,WAAA1C,aAC7C,SAAO2J,YAAW7B,WACnB,OAAAA,UAGC,SAAW8B,eAAkB9B,WAC9B,WAAA/D,sBAAA,SAAArB,YAAA,OAAAoF,UAAAE,SAAA,kBAAAtF,WAAA1C,eAJA4J,CAAA9B,WAAAzG,MCzDC,SAAYwI,YAAiB1uB,OAC9B,OAAAA,OAAA,mBAAAA,MAAA6sB,SCGC,IAAK8B,iBAAiB,SAAc3pB,cAClC,SAAWuiB,YACZ,QAAAxoB,EAAA,EAAA8mB,IAAA7gB,MAAAR,OAAAzF,EAAA8mB,MAAA0B,WAAA5C,OAAA5lB,IACIwoB,WAAWrQ,KAAQlS,MAAAjG,IAEvBwoB,WAAA5C,QACD4C,WAAA1C,aCPA,SAAK+J,UAAWnG,MAAAkE,kBAIZ,IAAS/D,sBAHX+D,UAGkB,SAAcpF,YAC9B,IAAIvB,IAAM,IAAAV,0BACNvmB,EAAI,EAWP,WAVCuL,IAAIqiB,UAAME,SAAY,WACpB9tB,IAAA0pB,MAAWjkB,QAIb+iB,WAAKrQ,KAAWuR,MAAM1pB,MACpBwoB,WAAY5C,QACbqB,IAAA1b,IAAA7F,KAAAooB,aALCtF,WAAO1C,cAQVmB,KAfJ2I,iBAAAlG,QCkEmB,SAAAoG,qBAAAxG,GAAA,EAAAA,GAAAvc,UAAiCtH,OAAA6jB,4BAErD,IAAIsE,UAAYxX,UAAU3Q,OAAE,UAC1BkqB,YAAW/B,WACZxX,KAAAf,MAEAuY,eAAA/qB,EAECuT,KAAM3Q,aACJ,EACF,OAAMgqB,YAAA7B,gBACJ,EACF,OAAAA,UAAAiC,UAAAzZ,KAAAwX,WCnFF,SAAYmC,OAAO9uB,WACjB2D,OAAA,IAAWilB,sBAAY,SAAArB,YACvBA,WAAWrQ,KAAAlX,OACVunB,WAAA1C,aAIJ,OAFElhB,OAAeklB,WAAQ,EACxBllB,OAAO3D,MAAOA,MACf2D,OD4EGmrB,CAAA3Z,KAAA,YAED,OAAAyZ,UAAAzZ,KAAAwX,YEnCD,SAAKoC,WAAWznB,MAAAqlB,kBAIf,IAAA/D,sBAHC+D,UAGD,SAAApF,YAAA,OAAAoF,UAAAE,SAAAmC,SAAA,GAAA1nB,YAAAigB,yBAFA,SAAAA,YAAA,OAAAA,WAAAjgB,wBAUiB0nB,SAAAhnB,IAClB,IAAAV,MAAWU,GAAAV,MAAaU,GAAAuf,WACzBjgB,iBC5CC2nB,0BAAwC,oBAArBC,aAAYC,KAAAnvB,MAAAsH,OAAS7C,KAAA0qB,KAAKA,KAAa1qB,KAAAzE,YACxDyE,KAAK6C,MAAQA,MACd7C,KAAA2qB,SAAA,MAAAD,KA+GF,oBAvGWtuB,UAAWwuB,QAAA,SAAAC,iBACjB7qB,KAAQ0qB,UACN,IACF,OAAQG,SAAApY,MAAAoY,SAAApY,KAAAzS,KAAAzE,WACN,IACF,OAAQsvB,SAAAhoB,OAAAgoB,SAAAhoB,MAAA7C,KAAA6C,WACN,IACH,OAAAgoB,SAAAzK,UAAAyK,SAAAzK,0BAYShkB,UAAQ0uB,GAAK,SAAArY,KAAA5P,MAAAud,iBACfpgB,KAAM0qB,UAEV,IACF,OAAQjY,WAAAzS,KAAAzE,WACN,IACF,OAAQsH,aAAA7C,KAAA6C,WACN,IACH,OAAAud,oCAaGhkB,UAAc2uB,OAAI,SAA4BrG,eAAyB7hB,MAAAud,iBACzEsE,gBAAwD,mBAAhBA,eAAgBjS,KACzDzS,KAAA4qB,QAAAlG,gBAEA1kB,KAAA8qB,GAAApG,eAAA7hB,MAAAud,wBASShkB,UAAQ4uB,aAAK,kBACfhrB,KAAM0qB,UAEV,IACF,OAAQN,GAAApqB,KAAAzE,WACN,IACF,OAAQ+uB,WAAAtqB,KAAA6C,WACN,IACH,OAAAknB,cAEF,UAAAjV,MAAA,oDAcKmW,WAAiB,SAAW1vB,mBACnB,IAAJA,MACR,IAAAkvB,aAAA,IAAAlvB,OAEFkvB,aAAAS,yCAWQC,YAAgB,SAAMpL,KAC9B,WAAA0K,aAAA,SAAAttB,EAAA4iB,mBAQQqL,eAAa,WACrB,OAAAX,aAAAY,sBApCcZ,aAAAY,qBAAA,IAA0BZ,aAA0B,KAqCrEA,aAAAS,2BAAC,IAAAT,aAAA,SAAAttB,GAAAstB,aAjHyC,qCC6DI,SAAAve,uEAG3C,IAAAmc,QAVMA,MAAA,GAEL,IAAA7lB,MAAY0J,OAACzR,KAAQuF,KAAAyiB,cAAaziB,KAU5B,OATNwC,MAAK0lB,UAAaA,UACnB1lB,MAAA6lB,YAQO7lB,MAwBR,iBA5BoB8oB,oBAAiBpf,QAUrCof,oBAACf,SAAA,SAAAnT,KAES,IAAAmU,aAAAnU,IAAAmU,aAAV9I,YAAwBrL,IAAAqL,YACtB8I,aAAKX,QAAgBnI,aACtBziB,KAAAkU,mCAGM9X,UAAgBovB,gBAAa,SAAkBD,cACrDvrB,KAAA6F,IAAA7F,KAAAkoB,UAAAE,SAAAkD,oBAAAf,SAAAvqB,KAAAqoB,MAAA,IAAAoD,iBAAAF,aAAAvrB,KAAAyiB,oCAGMrmB,UAAgB2mB,MAAa,SAAAxnB,OACnCyE,KAAAwrB,gBAAAhB,0BAAAS,WAAA1vB,SAhCyC+vB,oBAiC3ClvB,UAAA4mB,OAAA,SAAAjD,uEAGCuL,oBAAAlvB,UAAmB6mB,UACA,WADAjjB,KAAAwrB,gBAAAhB,0BAA+BY,mBAEjDE,oBA7B2C,+KCzERI,4BAAA,SAAUxf,iBAMlCyf,cAAAC,WAAAC,WAAqB3D,gBACrB,IAAA0D,aADZA,WAGEE,OAAAC,wBAR2C,IAArCF,aAGAA,WAAAC,OAAAC,mBAON,IAAAvpB,MAAK0J,OAAWzR,KAAGuF,OAAaA,KAehC,OAbAwC,MAAI0lB,UAAUA,gBACZ8D,iBACAC,qBAAiB,QAClBC,YAAAN,WAAA,IAAAA,iBAAMO,YAAAN,WAAA,IAAAA,WACLA,aAAYC,OAAKC,mBAClBvpB,MAAAypB,qBAAA,2CAIKzpB,MAAAiQ,KAAUjQ,MAAK4pB,eAIjB5pB,aApBNwK,UAAA2e,cAAyDzf,sBAsBtD9P,UAAAiwB,uBAAA,SAAA9wB,OAED,IAAAywB,QAAAhsB,KAAMgsB,QACPA,QAAAlmB,KAAAvK,OAEOywB,QAAAjsB,OAAAC,KAAAksB,aACFF,QAAQnC,QAGZ3d,OAAA9P,UAAMqW,KAAIhY,KAAAuF,KAACzE,QAIbowB,cAAAvvB,UAAAgwB,eAAA,SAAW7wB,OAETyE,KAAMgsB,QAAAlmB,KAAA,IAAAwmB,YAA2BtsB,KAAAusB,UAAmBhxB,QACpDyE,KAAMwsB,2BACNtgB,OAAM9P,UAAYqW,KAAKhY,KAAAuF,KAAUzE,sBAE7Ba,UAA2BioB,WAAA,SAAAvB,YAE/B,IAGE/O,aAHEkY,oBAAajsB,KAAAisB,oBACfD,QAAUC,oBAAAjsB,KAA0BgsB,QAAAhsB,KAAAwsB,2BACrCtE,UAAAloB,KAAAkoB,cAAU8D,QAAKjsB,UAEfC,KAAAkgB,aAAM,IAAAgF,mDAELllB,KAAAwiB,WAAmBxiB,KAAA4lB,SACpB7R,aAAA8M,0BAAAY,OAIAzhB,KAAAgS,UAAAlM,KAAAgd,YAEG/O,aAAA,IAAmBqR,wCAAEplB,KAAA8iB,mCAGtBjd,IAAAid,WAAA,IAAA2J,8BAAA3J,WAAAoF,gCAED,IAAK,IAAI5tB,EAAI,EAAGA,EAAI8mB,MAAQ0B,WAAW5C,OAAQ5lB,IAC7CwoB,WAAWrQ,KAAsBuZ,QAAQ1xB,SAK3C,IAAAA,EAAW,EAAKA,EAAC8mB,MAAK0B,WAAa5C,OAAA5lB,IACpCwoB,WAAArQ,KAAAuZ,QAAA1xB,GAAAiB,OAWK,OATLyE,KAAA4lB,SAED9C,WAAOjgB,MAAa7C,KAAA+lB,aAGtB/lB,KAAAwiB,WACEM,WAAa1C,WAGPrM,4BAEA3X,UAAcmwB,QAAK,WACzB,OAAMvsB,KAAAkoB,WAAmBwE,OAAApb,qBAGnBlV,UAAcowB,yBAAe,eACnC,IAAIlb,IAAAtR,KAAWusB,UAKfL,YAAkBlsB,KAAGksB,YACnBC,YAAWnsB,KAAQmsB,oBACXnsB,KAAAgsB,oBACPA,QAAAjsB,OACD4sB,YAAc,EACfA,YAAAC,eAEGtb,IAAW0a,QAAGW,aAAaE,KAAAV,cAI3BQ,cASR,OAPKC,YAAAV,cAEDS,YAAepc,KAAAC,IAAAmc,YAAAC,YAAAV,cAGnBS,YAAC,GAAAX,QAAAtc,OAAA,EAAAid,aAEDX,SACqBL,cAtHiB,kBAwHtCW,YAAC,2BAAAA,YAAAO,KAAAtxB,wCAAA,GC5HoCuxB,0BAAA,SAAU5gB,iBAA/C6gB,eACU,IAAAvqB,MAAgB,OAAX0J,QAAWA,OAAAC,MAAAnM,KAAAqH,YAAArH,KAqCzB,OApCSwC,MAAAjH,MAAO,KACPiH,MAAAwqB,SAAA,wBAmCTxqB,MAtCoC,OAArCwK,UAAA+f,aAAA7gB,qBAOa9P,UAAUioB,WAAA,SAAAvB,mBACjB9iB,KAAA4lB,UACA9C,WAAOjgB,MAAA7C,KAAa+lB,aACrBlF,0BAAAY,OACCzhB,KAAUitB,cAAgBjtB,KAAEgtB,SAC5BlK,WAAWrQ,KAAAzS,KAAUzE,OACrBunB,WAAO1C,WACRS,0BAAAY,OAEFvV,OAAA9P,UAAAioB,WAAA5pB,KAAAuF,KAAA8iB,0BAGU1mB,UAACqW,KAAc,SAAAlX,OACtByE,KAAKitB,eACLjtB,KAAKzE,MAAOA,MACbyE,KAAAgtB,SAAA,iBAIQ5wB,UAACyG,MAAc,SAAAA,OACtB7C,KAAAitB,cACD/gB,OAAA9P,UAAAyG,MAAApI,KAAAuF,KAAA6C,qBAIIzG,UAAYgkB,SAAQ,WACzBpgB,KAAIitB,cAAc,EAChBjtB,KAAAgtB,SACD9gB,OAAA9P,UAAAqW,KAAAhY,KAAAuF,UAAAzE,OAEF2Q,OAAA9P,UAAAgkB,SAAA3lB,KAAAuF,OArCyC+sB,aAAP,kBCL/BG,WAAa,EAEnBC,iBAQE,IAAAC,uBACc,SAAGC,IACf,IAAAC,OAAaJ,aAGd,OAFCC,cAAQG,QAAeD,GACvBjS,QAAOQ,UAAO2R,KAAA,2BAXVC,aAAKF,QACX,IAAID,GAAIF,cAAAG,QACND,IACDA,KAQeG,CAAAF,UACfA,QALDF,yBAQS,SAAcE,eACtBH,cAAAG,SCZgCG,sBAAA,SAAcvhB,iBAE/CwhB,WAEExF,UAAAC,MAFoB,IAAA3lB,MAAA0J,OAAAzR,KAAAuF,KAAwBkoB,UAAAC,OAAAnoB,KAG7C,OAFqBwC,MAAA0lB,UAAmDA,0BAExE1lB,aAHDwK,UAAA0gB,WAA8CxhB,mBAKe9P,UAAAqsB,eAAiB,SAAAP,UAAAI,GAAAD,OAM5E,YAJc,IAAVA,QACFA,MAAO,GAGC,OAAVA,OAAsBA,MAAO,EAItBnc,OAAU9P,UAASqsB,eAAehuB,KAAAuF,KAAYkoB,UAAUI,GAAAD,QAIvDH,UAAAe,QAAAnjB,KAAA9F,MAAmDkoB,UAAAyB,YAAAzB,UAAiByB,UAAAyD,uBAAAlF,UAAAS,MAAA7sB,KAAAosB,UAAA,qBAK1E9rB,UAAOmsB,eAAM,SAAcL,UAACI,GAAAD,eAC7B,IAAAA,QAIGA,MAAA,GAEQ,OAAVA,OAAmBA,MAAG,GAAU,OAAAA,OAAAroB,KAAAqoB,MAAA,EACjC,OAAAnc,OAAA9P,UAAAmsB,eAAA9tB,KAAAuF,KAAAkoB,UAAAI,GAAAD,OAGF,IAAAH,UAAAe,QAAAlpB,SACHqtB,yBAAC9E,IAtCkCJ,UAsClCyB,eAAAxsB,eAtCkC,mCCNA,SAAc+O,iCA2BhD,cAAAA,eAAAC,MAAAnM,KAAAqH,YAAArH,KA3BkC,OAAnCgN,UAAA2gB,cAAAzhB,sBAGS9P,UAAcusB,MAAA,SAAAiB,QACnB5pB,KAAK0pB,QAAS,EAEP1pB,KAAA2pB,eAAAxsB,EACP,IACI0F,MADAomB,QAAWjpB,KAAAipB,QAEXnpB,OAAgB,EACpB2E,MAASwkB,QAAUlpB,OAEnB6pB,OAAGA,QAAAX,QAAAY,cAEChnB,MAAM+mB,OAAAf,QAAAe,OAAA5nB,MAAA4nB,OAAAvB,OACP,cAGQvoB,MAAQ2E,QAACmlB,OAAAX,QAAAY,aAEpB7pB,KAAI0pB,QAAO,EACT7mB,MAAO,QACL/C,MAAO2E,QAAcmlB,OAAAX,QAAAY,UACtBD,OAAA1V,cAEF,MAAArR,QAzB8B8qB,cAAA,+HCMUC,0CAAA,SAAc1hB,iBAEzD2hB,qBAEE3F,UAAMC,MAFc,IAAA3lB,MAAA0J,OAAAzR,KAAAuF,KAAkCkoB,UAAAC,OAAAnoB,KAGvD,OAFqBwC,MAAA0lB,UAAmDA,0BAExE1lB,aAHDwK,UAAA6gB,qBAAwD3hB,6BAKe9P,UAAAqsB,eAAiB,SAAAP,UAAAI,GAAAD,OAMtF,YAJc,IAAVA,QACFA,MAAO,GAGC,OAAVA,OAAsBA,MAAO,EAItBnc,OAAU9P,UAASqsB,eAAehuB,KAAAuF,KAAYkoB,UAAAI,GAAAD,QAG7CH,UAAAe,QAAAnjB,KAAA9F,MAA6DkoB,UAAAyB,YAAAzB,UAAiByB,UAAAmE,sBAAA,kBAAA5F,UAAAS,MAAA,gCAK7EvsB,UAAAmsB,eAAoB,SAACL,UAAWI,GAAID,eAC5C,IAAAA,QAIGA,MAAA,GAEQ,OAAVA,OAAmBA,MAAG,GAAU,OAAAA,OAAAroB,KAAAqoB,MAAA,EACjC,OAAAnc,OAAA9P,UAAAmsB,eAAA9tB,KAAAuF,KAAAkoB,UAAAI,GAAAD,OAGF,IAAAH,UAAAe,QAAAlpB,SACHguB,qBAACzF,IArC4CJ,UAqC5CyB,eAAAxsB,yBArC4C,6CCNA,SAAc+O,2CA2B1D,cAAAA,eAAAC,MAAAnM,KAAAqH,YAAArH,KA3B4C,OAA7CgN,UAAAghB,wBAAA9hB,gCAGuB9P,UAAAusB,MAAA,SAAAiB,QACnB5pB,KAAK0pB,QAAS,EAEP1pB,KAAA2pB,eAAAxsB,EACP,IACI0F,MADAomB,QAAWjpB,KAAAipB,QAEXnpB,OAAgB,EACpB2E,MAASwkB,QAAUlpB,OAEnB6pB,OAAGA,QAAAX,QAAAY,cAEChnB,MAAM+mB,OAAAf,QAAAe,OAAA5nB,MAAA4nB,OAAAvB,OACP,cAGQvoB,MAAQ2E,QAACmlB,OAAAX,QAAAY,aAEpB7pB,KAAI0pB,QAAO,EACT7mB,MAAO,QACL/C,MAAO2E,QAAcmlB,OAAAX,QAAAY,UACtBD,OAAA1V,cAEF,MAAArR,QAzBwCmrB,wBAAA,4ECEHC,0CAAA,SAAc/hB,iBAO1CgiB,qBAAA5E,gBAAA6E,gBACO,IAAA7E,kBADnBA,gBAEE8E,yCALuB,IAAlBD,YACAA,UAAkBrC,OAACC,mBAKzB,IAAAvpB,MAAA0J,OAAAzR,KAAAuF,KAAAspB,gBAAA,kBAAA9mB,MAAA6rB,SAAAruB,KAYC,OALKwC,MAAA2rB,oBAEC3rB,MAAA6rB,MAA2B,EACjC7rB,MAAI1C,OAAY,EAET0C,MAuBT,OAtCAwK,UAAAkhB,qBAAYhiB,6BAiBA9P,UAAAusB,MAAA,WAIV,QAFC9lB,MAAA+mB,OADEX,QAAAjpB,KAAAipB,QAAAkF,UAAAnuB,KAAAmuB,WAGCvE,OAAOX,QAAAY,WAAA7pB,KAAAquB,MAAAzE,OAAAvB,QAAA8F,aACTtrB,MAAO+mB,OAASf,QAAQe,OAAS5nB,MAAA4nB,OAAAvB,aAIlCxlB,MAAA,CACF,KAAA+mB,OAAAX,QAAAY,SAhCgBD,OAAA1V,cAFuB,MAAcrR,QAyClBqrB,qBAAAI,gBAAA,GAIpCJ,qBA7CwC,mEA6CT,SAAsBhiB,iBAE/BqiB,cAAKrG,UAA+BC,KAAAroB,YAJ1C,IAANA,QAMRA,MAAUooB,UAAGpoB,OAAe,GAC7B,IAAA0C,MAAA0J,OAAAzR,KAAAuF,KAAAkoB,UAAAC,OAAAnoB,KAMC,OAJKwC,MAAA0lB,oBAAoB1lB,MAAA2lB,UACzB3lB,MAAK1C,MAASA,YACZ4pB,QAAO,QACR5pB,MAAAooB,UAAApoB,YACI0C,uBAVe+rB,cAAmDriB,sBAgB9D9P,UAAQgsB,SAAA,SAAApmB,MAAAqmB,OAIiD,QAHpD,IAAdA,QACDA,MAAA,IAEmEroB,KAAAsoB,GAC9D,OAAMpc,OAAG9P,UAAegsB,SAAS3tB,KAAAuF,KAAAgC,MAAAqmB,OAErCroB,KAAA0pB,QAAa,EACZ,IAAAE,OAAyC,IAAA2E,cAAcvuB,KAAAkoB,UAAaloB,KAAAmoB,MAEtE,OADCnoB,KAAA6F,IAAO+jB,QACRA,OAAAxB,SAAApmB,MAAAqmB,sBAEmEjsB,UAAAqsB,eAAiB,SAAAP,UAAAI,GAAAD,YAC5E,IAAPA,QACDA,MAAA,GAGCroB,KAAIqoB,MAAKH,UAAWmG,MAAMhG,UACxBY,QAAOf,UAAAe,QAIG,eAHXnjB,KAAA9F,MACFipB,QAAAuF,KAAAD,cAAAE,cAEa,iBAEJryB,UAAUmsB,eAAS,SAAAL,UAAAI,GAAAD,YACvB,kBACD,kBAEMjsB,UAAA0sB,SAAA,SAAA9mB,MAAAqmB,WACK,SAAVqB,cACDxd,OAAA9P,UAAA0sB,SAAAruB,KAAAuF,KAAAgC,MAAAqmB,sBAEDoG,YAAS,SAAAhwB,EAAAG,UACVH,EAAA4pB,QAAAzpB,EAAAypB,MAAM5pB,EAAAqB,QAAAlB,EAAAkB,MACK,EAEbrB,EAAAqB,MAAAlB,EAAAkB,MACH,yCAtDwB,0BCjDtB,SAASe,SAAA8e,GACV,OAAAA,ECMC,SAAY+O,aAAQ/L,KACrB,QAAAA,qBAAAwB,uBAAA,mBAAAxB,IAAA2B,MAAA,mBAAA3B,IAAAjQ,eCC4Cic,gDAAA,SAAKziB,iBAIhD0iB,0BAFgB,IAAApsB,MAAI0J,OAAGzR,KAAAuF,KAAA,0BAA0BA,KAKhD,OADEwC,MAAc3H,KAAC,yFACjB2H,MAP0C,OAI3CwK,UAAA4hB,wBAAA1iB,QAID0iB,wBAR4C,QCAbC,sBAAA,SAAK3iB,iBAInC4iB,aAFgB,IAAAtsB,MAAI0J,OAAGzR,KAAAuF,KAAa,4BAAAA,KAKnC,OADEwC,MAAc3H,KAAC,+DACjB2H,MAP6B,OAI9BwK,UAAA8hB,WAAA5iB,QAID4iB,WAR+B,QCHEC,0BAAA,SAAK7iB,iBAIrC8iB,eAFgB,IAAAxsB,MAAI0J,OAAGzR,KAAAuF,KAAe,yBAAAA,KAKrC,OADEwC,MAAc3H,KAAC,mEACjB2H,MAP+B,OAIhCwK,UAAAgiB,aAAA9iB,QAID8iB,aARiC,QCmChC,SAAOtuB,IAAAuuB,QAAAre,gBACL,SAAWse,aAAYzX,WACF,mBAAbwX,QACP,UAAArS,UAAA,8DAED,OAAAnF,OAAA6M,KAAA,IAAA6K,YAAAF,QAAAre,eAIFue,YAA2D,oBAAvCA,YAAAF,QAAuCre,SAAU5Q,KAAAivB,gBACpEjvB,KAAA4Q,gBAKF,mBAFUxU,UAAO3B,KAAU,SAAIqoB,WAAcrL,QAC3C,OAAAA,OAAA/E,UAAA,IAAA0c,kBAAAtM,WAAA9iB,KAAAivB,QAAAjvB,KAAA4Q,WACFue,YAN4D,GAa3BC,kBAAA,SAAaljB,iBAI7CmjB,cAGE5M,YAAMwM,QAAWre,SAFC,IAAApO,MAAA0J,OAAAzR,KAAuCuF,KAAAyiB,cAAAziB,KAI1D,OARDwC,MAAAysB,QAAkBA,QAOhBzsB,MAAKiC,MAAO,+BACbjC,MAT+B,OAIhCwK,UAAAqiB,cAAYnjB,sBAUK9P,UAAC2mB,MAAA,SAAAxnB,OAChB,IAAI2D,WAEHA,OAAAc,KAAAivB,QAAAx0B,KAAAuF,KAAA4Q,QAAArV,MAAAyE,KAAAyE,eACCsb,KAED,YADC/f,KAAAyiB,YAAO5f,MAAAkd,KAGV/f,KAAAyiB,YAAAhQ,KAAAvT,SAtB+BmwB,cAAA,wBC8GhC,SAAIC,aAAgBC,aAAAC,eAAAtH,cAClBsH,eAAgB,KACdvF,YAAYuF,uBAGJ,2BAAA5L,GAAA,EAAAA,GAAAvc,UAActH,OAAA6jB,4BAEpB,OAAA0L,aAAAC,aAAArH,WAAA/b,WAAA,EAAAuE,MAAAiT,KAAAjjB,IAAA,SAAAgQ,MAAA,OAAA5T,QAAA4T,MAAA8e,eAAArjB,WAAA,EAAAuE,MAAA8e,eAAA9e,UAJHwX,UAAAsH,sBAQyB,2BAAA5L,GAAA,EAAAA,GAAAvc,UAActH,OAAA6jB,4BAExC,IACM0B,QADFhC,QAAyBtjB,KAE3ByvB,QACAnM,QAAOA,QACPgC,gBACAiK,aAASA,aACTrH,4BAEA,IAAK/D,sBAAW,SAAArB,eACdoF,UAeA,KACElmB,OACA0O,UAAAoS,sBAAA2M,eAEH,OAAAvH,UAAAE,SAAAsH,sBAAA,EAAA1tB,WAlBGsjB,QAAU,CACVA,QAAM,IAAUwH,8BAOfyC,aAAApjB,MAAAmX,QAAA5S,KAAA1L,QAPgB,gCAAA4e,GAAA,EAAAA,GAAAvc,UAAAtH,OAAmB6jB,iCAElC0B,QAAQ7S,KAAAkd,UAAW5vB,QAAA,EAAA4vB,UAAA,GAAAA,WACnBrK,QAAAlF,qBAKAL,KACDuF,QAAAziB,MAAAkd,MAGJ,OAAAuF,QAAA5S,UAAAoQ,wBAuBP4M,sBAAA1tB,OACE,IAAMQ,MAAOxC,KAEL0Q,KAAA1O,MAAA0O,KAAAoS,WAAA9gB,MAAc8gB,WAAA2M,OAAAztB,MAASytB,OACzBF,aAAAE,OAAAF,aAAmBjM,QAAAmM,OAAAnM,QAAA4E,UAAAuH,OAAAvH,UACrB5C,QAAUmK,OAAAnK,YACZA,QAAU,CAEVA,QAAMmK,OAAUnK,QAAA,IAAAwH,8BAOfyC,aAAApjB,MAAAmX,QAAA5S,KAAA1L,QAPgB,gCAAA4e,GAAA,EAAAA,GAAAvc,UAAAtH,OAAmB6jB,iCAElC,IAAAroB,MAASo0B,UAAU5vB,QAAuB,EAAA4vB,UAAiB,GAAEA,UAC7DntB,MAAAqD,IAAAqiB,UAAAE,SAAAwH,aAAA,GAAAr0B,YAAA+pB,6BAKAvF,KACDuF,QAAAziB,MAAAkd,MAIJ/f,KAAA6F,IAAAyf,QAAA5S,UAAAoQ,sBAQS8M,aAAA5tB,OACR,IAAAzG,MAAYyG,MAAMzG,MAAE+pB,QAAAtjB,MAAAsjB,QACpBA,QAAQ7S,KAAAlX,OACT+pB,QAAAlF,WCzGC,SAAIyP,iBAAgBN,aAAAC,eAAAtH,cAClBsH,eAAgB,KACdvF,YAAYuF,uBAGJ,2BAAA5L,GAAA,EAAAA,GAAAvc,UAActH,OAAA6jB,4BAEpB,OAAAiM,iBAAAN,aAAArH,WAAA/b,WAAA,EAAAuE,MAAAiT,KAAAjjB,IAAA,SAAAgQ,MAAA,OAAA5T,QAAA4T,MAAA8e,eAAArjB,WAAA,EAAAuE,MAAA8e,eAAA9e,UAJHwX,UAAAsH,sBAQwB,2BAAA5L,GAAA,EAAAA,GAAAvc,UAActH,OAAA6jB,gCAErC6L,QACAnK,aAAInoB,EACJuT,UACA6e,aAASA,aACTrH,UAASA,UACT5E,QAAAtjB,aAEQ,IAAAmkB,sBAAA,SAAOrB,YACT,IAAAQ,QAAAmM,OAAAnM,QACFgC,QAAUmK,OAAEnK,WACd4C,UAuBD,OAAAA,UAAAE,SAAA0H,0BAAA,GAAAL,cAAA3M,sBAAAQ,sBAtBGgC,QAAU,CACVA,QAAMmK,OAAUnK,QAAA,IAAAwH,8BAcfyC,aAAApjB,MAAAmX,QAAA5S,KAAA1L,QAdgB,gCAAA4e,GAAA,EAAAA,GAAAvc,UAAAtH,OAAmB6jB,iCAGlC,IAAI7D,IAAK4P,UAAA9F,QACP9J,IACAuF,QAAOziB,MAAAkd,MAITuF,QAAQ7S,KAAAkd,UAAW5vB,QAAA,EAAA4vB,UAAA,GAAAA,WACnBrK,QAAAlF,sBAKAL,KACDuF,QAAAziB,MAAAkd,MAGJ,OAAAuF,QAAA5S,UAAAoQ,wBAqBPgN,0BAAA9tB,OACU,IAAAQ,MAAAxC,KACAyvB,OAAAztB,MAAAytB,OAAA3M,WAAc9gB,MAAA8gB,WAAIQ,QAAEthB,MAAAshB,QACxBiM,aAAUE,OAAOF,aAAQ7e,KAAA+e,OAAA/e,KAAAwX,UAAAuH,OAAAvH,UAEzB5C,QAAUmK,OAAAnK,YACZA,QAAU,CAEVA,QAAMmK,OAAUnK,QAAA,IAAAwH,8BAYfyC,aAAApjB,MAAAmX,QAAA5S,KAAA1L,QAZgB,gCAAA4e,GAAA,EAAAA,GAAAvc,UAAAtH,OAAmB6jB,iCAElC,IAAI7D,IAAK4P,UAAA9F,WACP9J,IACDvd,MAAAqD,IAAAqiB,UAAAE,SAAA2H,+BAAA,GAAAhQ,QAAAuF,uBACC,CACA,IAAA/pB,MAASo0B,UAAU5vB,QAA6B,EAAA4vB,UAAiB,GAAEA,UACpEntB,MAAAqD,IAAAqiB,UAAAE,SAAA4H,8BAAA,GAAAz0B,YAAA+pB,8BAMDvF,KACD/f,KAAA6F,IAAAqiB,UAAAE,SAAA2H,+BAAA,GAAAhQ,QAAAuF,oBAIJtlB,KAAA6F,IAAAyf,QAAA5S,UAAAoQ,sBAQSkN,8BAAA5Y,KACR,IAAA7b,MAAY6b,IAAC7b,MAAO+pB,QAAAlO,IAAAkO,QACpBA,QAAQ7S,KAAAlX,OACT+pB,QAAAlF,oBAQS2P,+BAAK3Y,KACb,IAAA2I,IAAQ3I,IAAM2I,IAAK3I,IAAAkO,QACpBziB,MAAAkd,SCxQ0CkQ,gCAAA,SAAa/jB,mCAcvD,cAAAA,eAAAC,MAAAnM,KAAAqH,YAAArH,KAd0C,OAA3CgN,UAAAkjB,gBAAAhkB,wBAIS9P,UAAiB+zB,WAAY,SAAAC,WAAAC,WAAAC,WAAAC,WAAAC,UACnCxwB,KAAAyiB,YAAAhQ,KAAA4d,6BAGMj0B,UAAiBq0B,YAAQ,SAAA5tB,MAAA2tB,UAC/BxwB,KAAAyiB,YAAA5f,8BAGMzG,UAAYs0B,eAAW,SAAAF,UAC7BxwB,KAAAyiB,YAAArC,YAbwC8P,gBAAA,wBCAAS,gCAAA,SAAazkB,iBAGtD0kB,gBACE/O,OAAOuO,WACRE,YAFmB,IAAA9tB,MAAM0J,OAANzR,KAA6BuF,YAEhD,OAFyDwC,MAAAqf,cAAsBrf,MAAA4tB,sBAFxE5tB,MAAA8tB,WAAUA,yBAIjB9tB,MALwC,OAGzCwK,UAAA4jB,gBAA0D1kB,wBAK5C9P,UAAU2mB,MAAM,SAAYxnB,OACzCyE,KAAA6hB,OAAAsO,WAAAnwB,KAAAowB,WAAA70B,MAAAyE,KAAAswB,WAAAtwB,KAAAF,QAAAE,uBAGa5D,UAAA4mB,OAAmB,SAAMngB,OACrC7C,KAAK6hB,OAAA4O,YAAc5tB,MAAA7C,MACpBA,KAAAkU,+BAGa9X,UAAA6mB,UAAqB,WACjCjjB,KAAK6hB,OAAA6O,eAAc1wB,MACpBA,KAAAkU,eAnBwC0c,gBAAA,wBCJlCC,mBACC,SAAAC,gBACJ,SAAKhO,2BACHyK,KAAA,SAAgBhyB,OAChBunB,WAAW5C,SACZ4C,WAAArQ,KAAAlX,OAEHunB,WAAc1C,aAGT,SAAUL,KAAC,OAAA+C,WAAAjgB,MAAAkd,OAClBwN,KAAA,KAAAzN,8BCFK,IAAMiR,kBAZX,SAAWC,0BACF,mBAAA31B,QAAoBA,OAAA41B,SAI9B51B,OAAA41B,SAHE,aAUgCD,GCT3BE,oBAAoB,SAAenb,UACzC,OAAG,SAAA+M,YAED,IADA,IAAMmO,SAAOlb,SAAagb,uBAC1B,CACE,IAAAnsB,KAAWqsB,SAAQxe,OACnB,GAAA7N,KAAMusB,KAAA,CACPrO,WAAA1C,WACD,MAGC,GADC0C,WAAMrQ,KAAA7N,KAAArJ,OACPunB,WAAA5C,OACM,YAKgB,mBAAjB+Q,SAASG,mBACXvrB,IAAS,WACVorB,SAAAG,QACAH,SAAAG,wBCdIC,sBAAwB,SAAI1O,KACrC,OAAI,SAAWG,YAEb,IAAAwO,IAAU3O,IAAAoC,yBACX,sBAAAuM,IAAA5e,UAAM,UAAAkK,UAAA,kEAGP,OAAA0U,IAAA5e,UAAAoQ,iGCfA,SAAYyO,UAAIh2B,OACjB,OAAAA,OAAA,mBAAAA,MAAAmX,WAAA,mBAAAnX,MAAAgyB,KCYC,IAAIiE,YAAM,SAAYtyB,WACpBA,kBAAQilB,6BACJ,SAAWrB,mBACX5jB,OAAAklB,WACAtB,WAAWrQ,KAAAvT,OAAW3D,YACtBunB,WAAO1C,YAGRlhB,OAAAwT,UAAAoQ,aAGH,GAAA5jB,QAA4C,mBAArCA,OAAsB6lB,uBAC9B,OAAAsM,sBAAAnyB,QACC,GAAAiG,YAAOjG,QACR,OAAAgrB,iBAAAhrB,QACC,GAAAqyB,UAAOryB,QACR,OAAA2xB,mBAAA3xB,QACC,GAAAA,QAA0C,mBAAnCA,OAAoB6xB,mBAC5B,OAAAG,oBAAAhyB,QAEC,IAAM3D,MAAMgG,SAAArC,QAAgB,oBAAK,IAAAA,OAA+B,IAGjE,UAAA0d,UAFK,gBAAArhB,MAAA,8FCpBN,SAAMk2B,kBAAkBC,gBAAgBxyB,OAAiBkxB,WAAYE,YAErE,IAAA7N,YAAkB,IAACkO,gCAAmBe,gBAAEtB,WAAAE,YACzC,OAAAkB,YAAAtyB,OAAAsyB,CAAA/O,aC4ID,IAAAkP,QAAoC,SAAAC,uCAAAhO,GAAA,EAAAA,GAAAvc,UAAAtH,OAG8B6jB,mCAEhE,IAAI4L,eAAgC,KAEhCtH,UAAY,KAejB,OAdG+B,YAA2BlY,YAAYA,YAAMhS,OAAA,MAC9CmoB,UAAAnW,YAAApC,OAGkE,mBAAjEoC,YAA+CA,YAAYhS,OAAM,KAClEyvB,eAAAzd,YAAApC,OAKuC,IAAtCoC,YAAWhS,QAAyCjD,QAACiV,YAAA,MACtDA,wBAAA,IAGFoY,UAAApY,YAAAmW,WAAA5D,KAAA,IAAAuN,sBAAArC,qBAGCqC,sBAAoB,oBAAAA,sBAAArC,gBACnBxvB,KAAAwvB,8BAKF,6BAFiBpzB,UAAc3B,KAAA,SAAAqoB,WAAwBrL,QACrD,OAAAA,OAAA/E,UAAA,IAAAof,sCAAAhP,WAAA9iB,KAAAwvB,kBACFqC,sBANqB,GAa6BC,sCAAA,SAAqB5lB,iBAMtE6lB,wBACEtP,YAAkB+M,gBAD4B,IAAAhtB,MAAA0J,OAAAzR,KAAAuF,KAAAyiB,cAA6CziB,KAE5F,OAPOwC,MAAAgtB,eAAmBA,eACnBhtB,MAAAknB,OAAgB,EAChBlnB,MAAAoD,+BAKPpD,MARgD,OAMjDwK,UAAA+kB,wBAAY7lB,gCAKO9P,UAAM2mB,MAAA,SAAA1Q,YACvBrS,KAAK4F,OAAAE,KAAY6rB,MAClB3xB,KAAA+R,YAAAjM,KAAAuM,qCAGqBjW,UAAK6mB,UAAY,WACrC,IAAMlR,YAAM/R,KAAY+R,YACpBqP,IAAGrP,YAAQhS,UACR,IAALqhB,IACDphB,KAAAyiB,YAAArC,eACC,CACApgB,KAAK0pB,OAAStI,IACdphB,KAAKgyB,UAAY5Q,QACf,IAAM9mB,EAAA,EAAAA,EAAU8mB,IAAG9mB,IAAA,CACnB,IAAI+X,WAAKN,YAAkBzX,GAC5B0F,KAAA6F,IAAA4rB,kBAAAzxB,KAAAqS,sBAAA/X,+BAKiB8B,UAAUs0B,eAAA,SAAAuB,QACX,IAAjBjyB,KAAK0pB,QAAW,IACjB1pB,KAAAyiB,YAAArC,oCAMmBhkB,UAAO+zB,WAAA,SAAAC,WAAAC,WAAAC,WAAAC,WAAAC,UAC3B,IAAM5qB,OAAS5F,KAAA4F,OACTssB,OAAStsB,OAAI0qB,YACjB0B,UAAGhyB,KAAAgyB,UAECE,SAAWP,OAAI3xB,KAAUgyB,UAAChyB,KAAAgyB,UAD5B,EAGJpsB,OAAI0qB,YAAiBD,WACV,IAAT2B,YACEhyB,KAAKwvB,eACNxvB,KAAAmyB,mBAAAvsB,QAEA5F,KAAAyiB,YAAAhQ,KAAA7M,OAAAb,mCAKa3I,UAAA+1B,mBAAA,SAAAvsB,QAChB,IAAI1G,WAEHA,OAAAc,KAAAwvB,eAAArjB,MAAAnM,KAAA4F,cACCma,KAED,YADC/f,KAAAyiB,YAAO5f,MAAAkd,KAGV/f,KAAAyiB,YAAAhQ,KAAAvT,SAhEgD6yB,wBAAA,kCCrLjD,SAAK9f,KAAW+R,MAAAkE,eACdA,iBACElE,iBAAaG,sBACdH,MAEF,IAAAG,sBAAAqN,YAAAxN,WAGK,MAAJA,MAAI,IClBN,SAAYoO,oBAAiBpO,OAC9B,OAAAA,OAAA,mBAAAA,MAAAe,uBDkBKqN,CAAOpO,OACR,OElBH,SAAKqO,eAAWrO,MAAAkE,kBAIZ,IAAS/D,sBAHX+D,UAGkB,SAAcpF,YAC9B,IAAIvB,IAAI,IAAAV,0BASP,WARChb,IAAMqiB,UAAUE,SAA0B,WAC1C,IAAI/V,WAAI2R,MAAWe,6BACjBlf,IAAIwM,WAAAK,WACJD,KAAK,SAAAlX,OAAQgmB,IAAI1b,IAAIqiB,UAAUE,SAAS,WAAM,OAAAtF,WAAWrQ,KAAMlX,WAC/DsH,MAAA,SAAQkd,KAAKwB,IAAI1b,IAAIqiB,UAAUE,SAAS,WAAM,OAAAtF,WAAWjgB,MAAAkd,SACvDK,SAAA,WAAAmB,IAAA1b,IAAAqiB,UAAAE,SAAA,kBAAAtF,WAAA1C,qBAGLmB,KAZJ8P,sBAAArN,QFgBEqO,CAAArO,MAAAkE,WACC,GAAAqJ,UAAOvN,OACR,OGrBH,SAAKsO,YAAWtO,MAAAkE,kBAIZ,IAAS/D,sBAHX+D,UAGkB,SAAcpF,YAC9B,IAAIvB,IAAI,IAAAV,0BAcb,WAZShb,IAAIqiB,UAAIE,SAAU,kBAChBpE,MAAAuJ,KAAW,SAAYhyB,OACvBgmB,IAAI1b,IAAIqiB,UAAUE,SAAS,WACzBtF,WAAArQ,KAAAlX,OAENgmB,IAAG1b,IAAAqiB,UAAAE,SAAA,kBAAAtF,WAAA1C,kBAGF,SAACL,KACGwB,IAAI1b,IAAAqiB,UAAAE,SAAA,kBAAAtF,WAAAjgB,MAAAkd,aAGhBwB,KAjBEsP,mBAAA7M,QHmBEsO,CAAAtO,MAAAkE,WACC,GAAA/iB,YAAiB6e,OAClB,OAAAmG,UAAAnG,MAAAkE,WACC,GI1BJ,SAAYqK,WAAWvO,OACxB,OAAAA,OAAA,mBAAAA,MAAA+M,mBJyBKwB,CAAOvO,QAA+B,iBAAXA,MAC5B,OKxBH,SAAYwO,aAAAxO,MAAAkE,eACVlE,MACD,UAAAlP,MAAA,kCAKG,IAASqP,sBAHX+D,UAGkB,SAAcpF,YAC9B,IACImO,SADA1P,IAAA,IAAsBV,0BAgCzB,WA7BChb,IAAI,WACForB,UAAkB,mBAAAA,SAAAG,QACnBH,SAAAG,eAGDvrB,IAAAqiB,UAAWE,SAAM,WACjB6I,SAAQjN,MAAS+M,yBACflrB,IAAIqiB,UAAUE,SAAS,eACrBtF,WAAO5C,QAGT,IAAI3kB,MACA41B,SAEF,IAAAjyB,OAAQ+xB,SAAaxe,OACrBlX,MAAO2D,OAAO3D,MACf41B,KAAAjyB,OAAAiyB,WACCpR,KAED,YADC+C,WAAOjgB,MAAAkd,KAGPoR,KACDrO,WAAA1C,YAEC0C,WAAKrQ,KAAWlX,OACjByE,KAAAooB,mBAIJ7G,KAnCJ2P,oBAAAlN,QLmBEwO,CAAAxO,MAAAkE,WAIJ,UAAAtL,WAAA,OAAAoH,4BAAA,2CMwD6E,oBACxDyO,iBAAAxD,QAA6CyD,iBAChE,IAAAA,aAEDA,WAAA5G,OAAAC,mBAIC/rB,KAAAivB,gBACHjvB,KAAA0yB,sBAaE,iEANF,OAAAjb,OAAA/E,UAAA,IAAAigB,4BAAA9H,SAAA7qB,KAAAivB,QAAAjvB,KAAA0yB,cAMED,iBAtB4E,+BAuBA,SAAAvmB,iBANpE0mB,mBAAwBnQ,YAAMwM,QAAAyD,iBACb,IAAjBA,aACAA,WAAmB5G,OAAAC,wEAO1BvpB,MAAAysB,gBAESzsB,MAAAkwB,sBACRlwB,MAAIyqB,cAAc,QAChBjT,gBACD0P,OAAA,QAAM5pB,MAAA,EACL0C,uBARgBowB,mBAA6C1mB,QAUjE0mB,mBAACx2B,UAAA2mB,MAAA,SAAAxnB,OAESyE,KAAA0pB,OAAA1pB,KAAA0yB,WACJ1yB,KAAA6yB,SAA2Bt3B,OAG7ByE,KAAAga,OAASlU,KAAKvK,2BAETa,UAAYy2B,SAAW,SAAAt3B,WAC5B2D,OACDY,MAAAE,KAAAF,QACD,IACIZ,OAACc,KAAUivB,QAAQ1zB,MAAOuE,OAGxB,MAAAigB,KAEP,YADK/f,KAAKyiB,YAAA5f,MAAwBkd,KAIjC/f,KAAK0pB,SACL1pB,KAAI8yB,UAAW5zB,OAAM3D,MAASuE,2BAE7B1D,UAAA02B,UAAA,SAAAC,IAAAx3B,MAAAuE,OACFE,KAAA6F,IAAA4rB,kBAAAzxB,KAAA+yB,IAAAx3B,MAAAuE,4BAKM1D,UAAiB6mB,UAAY,WACnCjjB,KAAAitB,cAAA,EAED,IAAAjtB,KAAA0pB,QAAA,IAAA1pB,KAAAga,OAAAja,QACQC,KAAAyiB,YAAcrC,+BAGThkB,UAAY+zB,WAAA,SAAAC,WAAAC,WAAAC,WAAAC,WAAAC,eACrB/N,YAAWhQ,KAAO4d,gCACJj0B,UAAWs0B,eAAU,SAAcF,cACjDxW,OAAKha,KAAAga,YACNqH,OAAAmP,UACFxwB,KAAA0pB,SACH1P,OAAAja,OAAA,EA5D8CC,KAAe+iB,MA4D5D/I,OAAA6P,6FArD6E,kCCvDlD,SAAAmJ,SAAAN,wBACJ,IAAtBA,aACDA,WAAA5G,OAAAC,mBDcC,SAAAkH,SAAAhE,QAAAO,eAAqBkD,wBAEV,IAAPA,aAEFA,WAAO5G,OAACC,mBAKsB,mBAArByD,eACT,SAAa/X,QAAc,OAACA,OAAAkM,KAAAsP,SAAA,SAAAx0B,EAAAnE,GAAA,OAAA2X,KAAAgd,QAAAxwB,EAAAnE,IAAAqpB,KAAAjjB,IAAA,SAAA9B,EAAAs0B,IAAA,OAAA1D,eAAA/wB,EAAAG,EAAAtE,EAAA44B,QAAAR,eAEI,iBAA3BlD,iBACRkD,WAAAlD,gBAGC,SAAA/X,QAAoB,OAAwDA,OACxD6M,KAA6C,IAAAmO,iBAAAxD,QAAAyD,qCEuBtC,SAAA1tB,gCAAA4e,GAAA,EAAAA,GAAAvc,UAAAtH,OAA2D6jB,0CAExD,IAA5B7R,YAAiBhS,QAAgB,IAAAgS,YAAAhS,QAAAkqB,YAAAlY,YAAA,IAClCE,KAAAF,YAAA,ICvDD,SAAOohB,YACR,OAAAH,SAAA,GDwDAG,GAAA/I,GAAAje,WAAA,EAAA4F,cEnEC,SAAWqhB,MAAAC,0BACT,IAAIlP,sBAAuC,SAAArB,YAC3C,IAAIkB,UAEHA,MAAAqP,0BACCtT,KAED,YADC+C,WAAOjgB,MAAUkd,KAIlB,OADYiE,MAAC/R,KAAU+R,OAAW+F,eAClCrX,UAAAoQ,cC+EH,SAAAwQ,mBAII9D,0BAJJ5L,GAAA,EAAAA,GAAAvc,UAAuEtH,OAAA6jB,qCAM1B,mBAA3C2P,QAAcA,QAAGxzB,OAA0B,KAC5CyvB,eAAA+D,QAAA5jB,OAKoB,IAAnB4jB,QAAOxzB,QAA2CjD,QAAAy2B,QAAA,MACnDA,gBAAA,IAGc,IAAbA,QAAOxzB,OACR0hB,MAIC+N,eAGD8D,SAAAC,SAAA5P,KAAAjjB,IAAA,SAAAgQ,MAAA,OAAA8e,eAAArjB,WAAA,EAAAuE,SAGC,IAAOyT,sBAAI,SAAArB,YACV,WAAA0Q,4BAAA1Q,WAAAyQ,eAOkCC,4BAAA,SAAqBtnB,iBAK1DunB,mBAEEhR,YAAM8Q,SADY,IAAA/wB,MAAA0J,OAAAzR,KAAkCuF,KAAAyiB,cAAAziB,KAL9CwC,MAAA+wB,QAASA,QAET/wB,MAAA6b,UAAU,EAMhB7b,MAAMkxB,WAAc,EACpB,IAAAtS,IAAKmS,QAASxzB,OAEdyC,MAAKoD,OAAS,IAAG7I,MAAQqkB,SACvB,IAAM9mB,EAAA,EAAMA,EAAG8mB,IAAQ9mB,IAAG,CAC1B,IAEIq5B,kBAAmBlC,kBAAAjvB,MAFjB+wB,QAAiBj5B,GAEA,KAAAA,GACrBq5B,mBACDnxB,MAAAqD,IAAA8tB,mBAEJ,OAAAnxB,MApBoC,OAKrCwK,UAAAymB,mBAAYvnB,2BAoBE9P,UAAW+zB,WAAc,SAAAC,WAAAC,WAAAC,WAAAC,WAAAC,UACrCxwB,KAAM4F,OAAA0qB,YAA4BD,WAC/BG,SAAiBoD,YAClBpD,SAAKoD,WAAa,EACnB5zB,KAAA0zB,kCAIOt3B,UAAAs0B,eAAA,SAAaF,UACrB,IAAY/N,YAAHziB,KAAiByiB,YAAAiR,WAAjB1zB,KAAiB0zB,WAAA9tB,OAAjB5F,KAAiB4F,OAEtBwb,IAAExb,OAAiB7F,OACrBywB,SAAAoD,WAMF5zB,KAAIqe,YACFre,KAAAqe,YAAO+C,MAIPsS,aAAYtS,KACbqB,YAAAhQ,KAAA7M,QAGF6c,YAAArC,aAdGqC,YAAOrC,YAtC0BqT,mBAAA,kCCLjCz4B,OAAAoB,UACsBmK,SAM1B,SAAIstB,UAAkBC,OAAGC,UAAAxxB,QAAAitB,uBAEvBrpB,WAAA5D,WACAitB,eAAUjtB,QACXA,aAAApF,GAGCqyB,eAGDqE,UAAAC,OAAAC,UAAAxxB,SAAAohB,KAAAjjB,IAAA,SAAAgQ,MAAA,OAAA5T,QAAA4T,MAAA8e,eAAArjB,WAAA,EAAAuE,MAAA8e,eAAA9e,SAGC,IAAAyT,sBAAqB,SAAArB,sBAcnBkR,kBAAwBC,UAAAF,UAAAG,QAAApR,WAAAvgB,SAC5B,IAAI2R,wBAgCJigB,cAAgBF,WACjB,OAAAA,WAAA,mBAAAA,UAAAG,kBAAA,mBAAAH,UAAAI,oBAhCGF,CAAYF,WAAa,CACzB,IAAAK,SAAUL,UACVA,UAAAG,iBAAcL,UAAMG,QAAO3xB,SAC5B2R,YAAA,kBAAAogB,SAAAD,oBAAAN,UAAAG,QAAA3xB,eACC,YAuBFgyB,0BAA2BN,WAC5B,OAAAA,WAAA,mBAAAA,UAAAxwB,IAAA,mBAAAwwB,UAAAO,IAxBSD,CAAmBN,WAAA,CACzB,IAAAQ,SAAaR,UACbA,UAAAxwB,GAAWswB,UAAGG,SACfhgB,YAAA,kBAAAugB,SAAAD,IAAAT,UAAAG,eACC,YAeFQ,wBAA2BT,WAC5B,OAAAA,WAAA,mBAAAA,UAAAU,aAAA,mBAAAV,UAAAW,eAhBSF,CAAmBT,WAAA,CACzB,IAAAY,SAAUZ,UACVA,UAAAU,YAAcZ,UAAMG,SACrBhgB,YAAA,kBAAA2gB,SAAAD,eAAAb,UAAAG,cACC,KAAKD,YAAWA,UAAOl0B,OAKxB,UAAA6c,UAAA,4BAJG,IAAAtiB,EAAA,EAAA8mB,IAAkB6S,UAAUl0B,OAAIzF,EAAA8mB,IAAW9mB,IAC5C05B,kBAAAC,UAAA35B,GAAAy5B,UAAAG,QAAApR,WAAAvgB,SAMJugB,WAAAjd,IAAAqO,aA5BI8f,CAAAF,OAAAC,mBAPKG,QAASxtB,GACXW,UAAUtH,OAAM,EACjB+iB,WAAArQ,KAAA1V,MAAAX,UAAA2I,MAAAtK,KAAA4M,YAEAyb,WAAArQ,KAAA/L,IAGFoc,WAAAvgB,WC3IH,SAAIuyB,iBAAgBC,WAAAC,cAAAxF,uBAElBA,eAGDsF,iBAAAC,WAAAC,eAAArR,KAAAjjB,IAAA,SAAAgQ,MAAA,OAAA5T,QAAA4T,MAAA8e,eAAArjB,WAAA,EAAAuE,MAAA8e,eAAA9e,SAGC,IAAMyT,sBAAU,SAAArB,gBAGZmS,SAHaf,QAAA,wBAAAtQ,GAAA,EAAAA,GAAAvc,UAAStH,OAAA6jB,yBAAgD,OAAAd,WAAArQ,KAAA,IAAA/L,EAAA3G,OAAA2G,EAAA,GAAAA,QAKzEuuB,SAAAF,WAAAb,eACCnU,KAED,YADC+C,WAAOjgB,MAAUkd,QAIjB5Z,WAAO6uB,eAIR,yBAAAA,cAAAd,QAAAe,aC4EH,SAAIC,SAAiCC,sBAAAC,UAAAC,QAAAC,2BAAApN,WACrC,IAAIsH,eAEAlyB,gBACc,GAAhB+J,UAAMtH,OAAU,CAChB,IAAAwC,QAAY4yB,sBACZ73B,aAAYiF,QAAQjF,aACpB83B,UAAU7yB,QAAQ6yB,UAClBC,QAAA9yB,QAAiB8yB,QACjB7F,eAAYjtB,QAAQitB,gBAAU3uB,SAC/BqnB,UAAA3lB,QAAA2lB,oBAC0C/qB,IAAzCm4B,4BAA0CrL,YAAAqL,6BAC1Ch4B,aAAc63B,sBACd3F,eAAY3uB,SACbqnB,UAAAoN,6BAECh4B,aAAc63B,sBACf3F,eAAA8F,mCAGC,IAAInR,sBAAQ,SAAarB,YACzB,IAAI9gB,MAAA1E,gBACF4qB,iBACEA,UAAUE,SAAAmN,kBAAA,GACVzS,WAAOA,WACPuS,QAASA,QACTD,oBACA5F,eAAKA,eACJxtB,yBAKDozB,UAAI,CACJ,IAAII,qBAAA,MAEHA,gBAAAJ,UAAApzB,aACC+d,KAED,YADC+C,WAAOjgB,MAAUkd,SAGjByV,gBAAW,CACX1S,WAAM1C,WACP,OAGH,IAAI7kB,WAAA,MAEHA,MAAAi0B,eAAAxtB,aACC+d,KAED,YADC+C,WAAOjgB,MAAUkd,QAGnB+C,WAAIrQ,KAAWlX,OACbunB,WAAM5C,OACP,UAGAle,MAAAqzB,QAAArzB,aACC+d,KAED,YADC+C,WAAOjgB,MAAUkd,kBASfwV,kBAAAvzB,OACR,IAAI8gB,WAAW9gB,MAAQ8gB,WAAAsS,UAAApzB,MAAAozB,cACrBtS,WAAO5C,WAGPle,MAAIyzB,gBAEHzzB,kBAAAqzB,QAAArzB,mBACC+d,KAED,YADC+C,WAAOjgB,MAAUkd,UAIpB/d,MAAAyzB,aAAA,KAECL,UAAI,CACJ,IAAII,qBAAA,MAEHA,gBAAAJ,UAAApzB,mBACC+d,KAED,YADC+C,WAAOjgB,MAAUkd,SAGjByV,gBAED,YADC1S,WAAO1C,cAGP0C,WAAO5C,OACR,OAGH,IAAI3kB,UAEHA,MAAAyG,MAAAwtB,eAAAxtB,mBACC+d,KAED,YADC+C,WAAOjgB,MAAUkd,SAGjB+C,WAAO5C,SAGT4C,WAAIrQ,KAAWlX,QACbunB,WAAO5C,QAGV,OAAAlgB,KAAAooB,SAAApmB,QCrLC,SAAA0zB,IAAAN,UAAAO,WAAAC,yBACA,IAAAD,aAEAA,WAAkBlU,8GCzFlB,SAAQoU,UAAYC,KACrB,OAAAh5B,QAAAg5B,UAAAC,WAAAD,KAAA,KCkCwB,SAAAE,SAAAC,OAAA/N,WAkBzB,YAjByB,IAAA+N,SACnBA,OAAC,QAEJ,IAAA/N,YAEGA,UAAUgO,eAEbL,UAAAI,gBAAA,KAEDA,OAAW,GAIT/N,WAAkB,mBAAAA,UAAAE,WACjBF,UAAAgO,aAGL,IAAA/R,sBAA4E,SAAArB,YAE1E,OADQA,WAAAjd,IAAAqiB,UAAAE,SAAY+N,kBAAAF,QAAOnT,WAAEA,WAAiBsT,QAAA,EAAAH,iBACnCnT,gOCyBe,SAAAuT,+BAAAzS,GAAA,EAAAA,GAAAvc,UAAAtH,OAAoE6jB,mCAE/F,IAAI8O,WAA2B5G,OAAKC,kBAC/B7D,UAAY,KACZoO,KAAAvkB,YAAmBA,YAAAhS,OAAA,UACrBkqB,YAA2BqM,OAC3BpO,UAAInW,YAAkBpC,MACpBoC,YAAUhS,OAAW,GAAkB,iBAAAgS,wBAAAhS,OAAA,KACxC2yB,WAAA3gB,YAAApC,QAEoB,iBAAX2mB,OACX5D,WAAA3gB,YAAApC,OAGuB,OAAtBuY,WAAqC,IAAAnW,YAAAhS,QAAAgS,YAAA,aAAAoS,sBACtCpS,YAAA,GAGFihB,SAAAN,WAAAM,CAAA7I,UAAApY,YAAAmW,YCtEK,IAAAqO,MAAA,IAAApS,sBAAAD,MACJ,SAAYsS,QACb,OAAAD,MCuCuC,SAAAE,uCAAA7S,GAAA,EAAAA,GAAAvc,UAEqDtH,OAAA6jB,kCAG5E,IAAb2P,QAAOxzB,OACR,OAAA0hB,MAID,IAAIiV,MAAQnD,QAAM,GAAMoD,UAAYpD,QAAQxuB,MAAA,UACnC,IAAPwuB,QAAOxzB,QAAiBjD,QAAA45B,OACzBD,kBAAAtqB,WAAA,EAAAuqB,OAGC,IAAMvS,sBAAU,SAAMrB,YAItB,IAAA8T,QAAY,WAAgB,OAAC9T,WAAAjd,IAAA4wB,kBAAAtqB,WAAA,EAAAwqB,WAAAjkB,UAAAoQ,qBAC3B7Q,KAAIykB,OAAAhkB,WACJD,KAAK,SAASlX,OAAAunB,WAAArQ,KAAAlX,QACdsH,MAAA+zB,QACCxW,SAAAwW,YChEL,SAAK/e,MAAW8K,IAAAuF,kBAaZ,IAAM/D,sBAZR+D,UAYsB,SAAUpF,YAC9B,IAAMpkB,KAAA1D,OAAY0D,KAAOikB,KACzB5O,aACE,IAAA8M,0BAGD,OADD9M,aAAOlO,IAAAqiB,UAAaE,SAAAyO,eAAA,GAAAn4B,UAAAoB,MAAA,EAAAgjB,sBAAA/O,0BAAA4O,WACnB5O,cAjBmB,SAAU+O,gBAC9B,IAAApkB,KAAU1D,OAAO0D,KAAGikB,KACZroB,EAAG,EAAGA,EAAMoE,KAAEqB,SAAA+iB,WAAA5C,OAAA5lB,IAAA,CACpB,IAAIuB,IAAI6C,KAAApE,GACNqoB,IAAAtmB,eAAiBR,MAClBinB,WAAArQ,MAAA5W,IAAA8mB,IAAA9mB,OAGFinB,WAAA1C,aAgBG,SAAAyW,eAAI70B,OACZ,IAAItD,KAACsD,MAAWtD,KAAMoB,MAAEkC,MAAAlC,MAAAgjB,WAAA9gB,MAAA8gB,WAAA/O,aAAA/R,MAAA+R,aAAA4O,IAAA3gB,MAAA2gB,QACtBG,WAAY5C,UACVpgB,MAASpB,KAAGqB,OAAW,CACvB,IAAAlE,IAAU6C,KAAKoB,OACfgjB,WAAArQ,MAAiB5W,IAAK8mB,IAAA9mB,OACvBkY,aAAAlO,IAAA7F,KAAAooB,UAAA1pB,UAAAoB,YAAA,EAAAgjB,sBAAA/O,0BAAA4O,gBAEAG,WAAA1C,WC7BmB,SAAA0W,8BAAAlT,GAAA,EAAAA,GAAAvc,UAAAtH,OAA+D6jB,sCAI5D,IAAvB7R,YAAYhS,OAAc,KACxBjD,QAAAiV,YAAsC,IAGvC,OAAAA,YAAA,GAFAA,wBAAA,GAMJ,OAAAoY,UAAApY,iBAAA5U,GAAAmnB,KAAA,IAAAyS,kBAEDA,aAAA,WAIA,SAACA,gBAAA,oBAFU36B,UAAO3B,KAAU,SAAIqoB,WAAerL,QAC5C,OAAAA,OAAA/E,UAAA,IAAAskB,oBAAAlU,cACFiU,aAJD,GAWuCC,oBAAA,SAAqB9qB,iBAK1D+qB,eACExU,aALM,IAAAjgB,MAAA0J,OAAoBzR,KAAMuF,KAAAyiB,cAAAziB,KAMjC,OALOwC,MAAA00B,UAAW,EACX10B,MAAAuP,sCAIPvP,MAPoC,OAKrCwK,UAAAiqB,eAAY/qB,uBAKL9P,UAAgB2mB,MAAC,SAAY1Q,YACnCrS,KAAA+R,YAAAjM,KAAAuM,4BAGOjW,UAAc6mB,UAAK,WACzB,IAAMlR,YAAM/R,KAAY+R,YAEpBqP,IAAGrP,YAAQhS,UACR,IAALqhB,IACDphB,KAAAyiB,YAAArC,eACC,KACE,IAAI9lB,EAAA,EAAAA,EAAU8mB,MAAGphB,KAAYk3B,SAAG58B,IAAA,CAChC,IAAI+X,WAAYN,YAAGzX,GAEfyZ,aAAK0d,kBAAezxB,KAAAqS,sBAAA/X,GACtB0F,KAAKqU,eACNrU,KAAAqU,cAAAvO,KAAAiO,cAEF/T,KAAA6F,IAAAkO,cAEF/T,KAAA+R,YAAA,sBAMS3V,UAAU+zB,WAAA,SAAAC,WAAAC,WAAAC,WAAAC,WAAAC,cAClBxwB,KAAKk3B,SAAW,CAEhBl3B,KAAKk3B,UAAW,MACd,IAAK58B,EAAA,EAAKA,EAAA0F,KAAUqU,cAAEtU,OAAAzF,OACpBA,IAAIg2B,WAAY,CAEhB,IAAAvc,aAAa/T,KAAWqU,cAAG/Z,GAC3ByZ,aAAYG,cACblU,KAAAqhB,OAAAtN,cAIJ/T,KAAAqU,cAAA,KAGFrU,KAAAyiB,YAAAhQ,KAAA4d,aApDoC4G,eAAA,kCC9BjB,SAAAE,MAAA9mB,MAAA5L,MAAAyjB,uBACA,IAAA7X,QAEpBA,MAAW,QAEL,IAAJ5L,QAEAA,MAAI,6BAEK,SAAOqe,sBACX,EACJxD,QAAAjP,mBACC,OAAG6X,UAAAE,SAAAgP,eAAA,GACDt3B,MAAIA,MAAO2E,MAASA,MAAE4L,YAAAyS,gCAKtB,GAAIhjB,SAAW2E,MAAM,CACnBqe,WAAM1C,WACP,MAIE,GAFN0C,WAAArQ,KAAA6M,WAEMwD,WAAU5C,OAChB,SAUF,SAAAkX,eAAAp1B,OAED,IAAAqO,MAAWrO,MAAKqO,MAAOvQ,MAAAkC,MAAAlC,MAAA2E,MAAAzC,MAAAyC,MAAAqe,WAAA9gB,MAAA8gB,WAEnBhjB,OAAA2E,MACFqe,WAAO1C,YAIT0C,WAAWrQ,KAAGpC,OAEVyS,WAAU5C,wEC5BM,SAAAmX,MAAAC,QAAAC,kBAA0BrP,gBAG9B,IAAZoP,UACAA,QAAU,OAEbrB,QAAA,mBAAUsB,mBACTtB,OAASnK,OAAGyL,mBAAyB,IAAAzL,OAAAyL,mBAGlCtN,YAAYsN,qBACfrP,UAAYqP,mBAGdtN,YAAW/B,aACTA,UAAYgO,iBAEP/R,sBAAW,SAAUrB,YAE1B,IAAA0U,IAAO3B,UAAUyB,SACfA,SACCA,QAAApP,UAAA5W,MACF,OAAA4W,UAAAE,SAAAqP,eAAAD,KACJ13B,MAAA,EAAAm2B,cAAAnT,mCAYK2U,eAAUz1B,WACZlC,MAAOkC,MAAAlC,MAAAm2B,OAAAj0B,MAAAi0B,OAAAnT,WAAA9gB,MAAA8gB,yBACRrQ,KAAA3S,mBAAgBogB,QAIZ,IAAc,IAAb+V,OACF,OAACnT,WAAgB1C,4DC5DrB,SAAWsX,MAAAC,gBAActE,0BACvB,IAAIlP,sBAAgC,SAAArB,YAEpC,IAAI8U,SAQA14B,WANH04B,SAAAD,wBACC5X,KAED,YADC+C,WAAOjgB,MAAUkd,SAMlB7gB,OAAAm0B,kBAAAuE,gBACC7X,KAED,YADC+C,WAAOjgB,MAAUkd,KAInB,IACAhM,cADM7U,OAAe+S,KAAO/S,QAAUuiB,OAC/B/O,UAAAoQ,mBACL,WACA/O,aAAYG,cACV0jB,UACDA,SAAA1jB,iBCcmB,SAAA2jB,6BAAAjU,GAAA,EAAAA,GAAAvc,UAAAtH,OAA4E6jB,mCAEpG,IAAI4L,eAAOzd,YAAmBA,YAAYhS,OAAA,GAI3C,MAHqB,mBAAlByvB,gBACDzd,YAAApC,MAEFwa,UAAApY,iBAAA5U,GAAAmnB,KAAA,IAAAwT,YAAAtI,qBAMCsI,YAAY,oBACLA,YAAAtI,gBACNxvB,KAAAwvB,8BAKF,mBAFUpzB,UAAO3B,KAAU,SAAIqoB,WAAcrL,QAC3C,OAAAA,OAAA/E,UAAA,IAAAqlB,kBAAAjV,WAAA9iB,KAAAwvB,kBACFsI,YAPa,GAc2BC,kBAAA,SAAa7rB,iBAQxC8rB,cAAAvV,YAAA+M,eAA4B5pB,aACtC,IAHFA,SAHQA,OAAA5K,OAAwCY,OAAC,OAO/C,IAAA4G,MAAK0J,OAAAzR,KAAkBuF,KAAAyiB,cAAqBziB,KAK5C,OAJAwC,MAAKy1B,4BACNz1B,MAAAgtB,eAAA,mBAAAA,8BAAA,KAEShtB,MAAAoD,cACFpD,MAkGV,OA3GEwK,UAAAgrB,cAAY9rB,sBAWR9P,UAAe2mB,MAAI,SAAAxnB,WACpB08B,UAAAj4B,KAAAi4B,kBAAU18B,OACT08B,UAAUnyB,KAAK,IAAIoyB,wBAAoB38B,QAClC,mBAAAA,MAAAw1B,mBACLkH,UAAUnyB,KAAK,IAAIqyB,eAAA58B,MAAkBw1B,uBAI/BkH,UAAAnyB,KAAA,IAAAsyB,sBAAVp4B,KAAAyiB,YAAAziB,KAAAzE,uBAISa,UAAQ6mB,UAAA,eACbgV,UAAKj4B,KAAYi4B,UACjB7W,IAAA6W,UAAOl4B,UACR,IAAAqhB,UAKCsI,OAAItI,YACF9mB,EAAK,EAAGA,EAAC8mB,IAAQ9mB,IAAC,KACnB22B,SAAAgH,UAAA39B,YAAM+9B,kBACLr4B,KAAK6F,IAAAorB,SAASve,UAAAue,SAAA32B,IAGnB0F,KAAA0pB,eATK1pB,KAACyiB,YAAarC,0BAcXhkB,UAAWk8B,eAAY,gBAC7B5O,SACF,IAAA1pB,KAAA0pB,QAED1pB,KAAAyiB,YAAArC,0BAGQhkB,UAAcm8B,eAAiB,eAGrC,IAAAN,UAAgBj4B,KAAIi4B,UAClB7W,IAAI6W,UAAWl4B,OACf0iB,YAAWziB,KAAQyiB,YACjBnoB,EAAA,EAAOA,EAAA8mB,IAAA9mB,IAAA,CAEV,sBADE22B,SAAAgH,UAAA39B,IACFqwB,WAAAsG,SAAAtG,WAEG,WAGF6N,gBAAe,EACf9nB,YAIIpW,EAAA,EAAQA,EAAC8mB,IAAA9mB,IAAY,KACvB22B,SACD/xB,QADC+xB,SAAAgH,UAAqB39B,IACtBmY,UAEGwe,SAAOhE,iBACTuL,gBAAY,GAEbt5B,OAAAiyB,KAGF,YADK1O,YAAYrC,WAIhB1P,KAAK5K,KAAA5G,OAAA3D,YACAi0B,eACLxvB,KAAAy4B,mBAAuB/nB,MAIvB+R,YAAYhQ,KAAA/B,MAEf8nB,gBAES/V,YAAArC,0BAGAhkB,UAAQq8B,mBAAqB,SAAY/nB,UAChDxR,OAAC,IACAA,OAAKc,KAAAwvB,eAAuBrjB,MAAAnM,KAAA0Q,YAE7BqP,KAEF,YADK/f,KAACyiB,YAAgB5f,MAACkd,KAxGe/f,KAAUyiB,YA0GlDhQ,KAAAvT,SAOD84B,cAjHyC,uCAqHV,WAC7B,SAACG,eAAAlH,UAEDjxB,KAAAixB,kBACEjxB,KAAA04B,WAAYzH,SAAAxe,OAmBd,OAhBA0lB,eAAA/7B,UAAAuuB,SAAA,WACE,OAAM,kBAECvuB,UAAOqW,KAAA,WACf,IAAAvT,OAAAc,KAAA04B,WAGC,OADF14B,KAAA04B,WAAA14B,KAAAixB,SAAAxe,OACQvT,QAERi5B,eAAC/7B,UAAA6wB,aAAA,WACH,IAAAyL,WAAC14B,KAAA04B,WAAA,OAAAA,uBAAAvH,MAMCgH,eAvB6B,2BAoBX,oBACVQ,oBAAWp4B,OAGjBP,KAAKO,MAAMA,MACZP,KAAAF,MAAA,EAEDE,KAAAD,OAAA,EACEC,KAAAD,OAAYQ,MAAAR,OAuBsB,OApBpC44B,oBAAAv8B,UAAA20B,mBAAK,WACH,OAAO/wB,0BAES5D,UAASqW,KAAO,SAAUlX,OAC3C,IAAAjB,EAAA0F,KAAAF,QAEDS,MAAAP,KAAAO,MACE,OAAOjG,EAAI0F,KAACD,QAAexE,MAAKgF,MAAMjG,GAAA62B,MAAA,IAAA51B,MAAA,KAAA41B,MAAA,IAGxCwH,oBAAAv8B,UAAAuuB,SAAA,WACE,OAAO3qB,KAAKO,MAAMR,OAAMC,KAAKF,OAEjC64B,oBAAAv8B,UAAC6wB,aAAA,kBAAAjtB,KAAAO,MAAAR,SAAAC,KAAAF,OAOqC64B,oBA/BlB,yBAuCV,SAAWzsB,iBADC0sB,kBAAAnW,YAAyBZ,OAAAxP,YAN7C,IAAA7P,MAAA0J,OAAAzR,KAAiBuF,KAAOyiB,cAACziB,KAWvB,OAVFwC,MAAAqf,OAAcA,OACdrf,MAAA6P,WAAaA,sCAMZ7P,MAAAwX,UAEDxX,MAAAq2B,YAAA,EACSr2B,uBANiBo2B,kBAAqB1sB,QAW/C0sB,kBAAAx8B,UAAA20B,mBAAA,WACE,OAAM/wB,wBAEK5D,UAAWqW,KAAM,eAC3BuH,OAAAha,KAAAga,cAAM,WAAAja,QAAAC,KAAA64B,YACIt9B,MAAO,KAAM41B,MAAM,IAIhC51B,MAAAye,OAAA6P,QAAAsH,MAAA,IAIAyH,kBAAAx8B,UAAAuuB,SAAA,WACE,OAAO3qB,KAAKga,OAAOja,OAAM,GAG3B64B,kBAAAx8B,UAAA6wB,aAAc,WACZ,OAA4B,IAAxBjtB,KAAKga,OAAOja,QAAYC,KAAA64B,8BAErBz8B,UAAOs0B,eAAiB,WAC9B1wB,KAAAga,OAAAja,OAAA,QAAM84B,YAAA,EACL74B,KAAK6hB,OAAAyW,kBAITt4B,KAAAyiB,YAAArC,YAKAwY,kBAACx8B,UAAA+zB,WAAA,SAAAC,WAAAC,WAAAC,WAAAC,WAAAC,UAEDxwB,KAAAga,OAAAlU,KAAAuqB,YACErwB,KAAA6hB,OAAO0W,kBAEXK,kBAAAx8B,UAACsW,UAAA,SAAAnX,MAAAuE,OArDqC,OAAA2xB,kBAqDrCzxB,UAAAqS,WAAArS,KAAAF,0BA7CS,gxJClRV5F,oBAAAU,EAAAk+B,oBAAA,2BAAAjZ","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","module.exports = React;","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","import { connectToTree, Store, withLogger } from 'undux'\nimport { Route, Todo } from './datatypes'\nimport { withEffects } from './effects'\nimport { fromLocalStorage } from './utils'\n\nexport type State = {\n  addTodoTitle: string\n  editingTodo: Todo | null\n  editingTodoNewTitle: string | null\n  route: Route\n  todos: Todo[]\n}\n\nlet initialState = fromLocalStorage<State>({\n  addTodoTitle: '',\n  editingTodo: null,\n  editingTodoNewTitle: null,\n  route: '/all',\n  todos: []\n})\n\nexport default connectToTree(initialState, s => withEffects(withLogger((s))))\n\nexport type StoreProps = {\n  store: Store<State>\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","import { ComponentType } from 'react'\n\nexport type Diff<T, U> = Pick<T, Exclude<keyof T, keyof U>>\n\n/**\n * TODO: Avoid diffing by passing individual values into a React component\n * rather than the whole `store`, and letting React and `shouldComponentUpdate`\n * handle diffing for us.\n */\nexport function equals<T>(a: T, b: T): boolean {\n  if (isImmutable(a) && isImmutable(b)) {\n    return a.equals(b)\n  }\n  return a === b\n}\n\nexport type Immutable = {\n  equals(b: any): boolean\n}\n\nexport function isImmutable(a: any): a is Immutable {\n  return !!a && typeof a === 'object' && (\n    '@@__IMMUTABLE_ITERABLE__@@' in a\n    || '@@__IMMUTABLE_RECORD__@@' in a\n  )\n}\n\nexport function getDisplayName<T>(Component: ComponentType<T>): string {\n  return Component.displayName || Component.name || 'Component'\n}\n\n// Strict Object.keys\nexport function keys<O extends object>(o: O): (keyof O)[] {\n  return Object.keys(o) as any\n}\n\nexport function mapValues<O extends object, K extends keyof O, T>(\n  o: O,\n  f: (value: O[K], key: K) => T\n): {[K in keyof O]: T} {\n  let result: {[K in keyof O]: T} = {} as any\n  keys(o).forEach(k =>\n    result[k] = f(o[k] as any, k as any) // TODO: Improve this\n  )\n  return result\n}\n\nexport function some<O extends object>(o: O, f: <K extends keyof O>(v: O[K], k: K) => boolean): boolean {\n  return keys(o).some(k => f(o[k], k))\n}\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","import { Observable } from 'rxjs'\nimport { Emitter } from 'typed-rx-emitter'\nimport { mapValues } from './utils'\n\nconst CYCLE_ERROR_MESSAGE = '[undux] Error: Cyclical dependency detected. '\n  + 'This may cause a stack overflow unless you fix it. \\n'\n  + 'The culprit is the following sequence of .set calls, '\n  + 'called from one or more of your Undux Effects: '\n\nexport type Undux<State extends object> = {\n  [K in keyof State]: {\n    key: K\n    previousValue: State[K]\n    value: State[K]\n  }\n}\n\nexport interface Store<State extends object> {\n  get<K extends keyof State>(key: K): State[K]\n  set<K extends keyof State>(key: K): (value: State[K]) => void\n  getState(): Readonly<State>\n}\n\nexport class StoreSnapshot<State extends object> implements Store<State> {\n  constructor(\n    private state: State,\n    private storeDefinition: StoreDefinition<State>\n  ) { }\n  get<K extends keyof State>(key: K) {\n    return this.state[key]\n  }\n  set<K extends keyof State>(key: K) {\n    return this.storeDefinition.set(key)\n  }\n  getState() {\n    return Object.freeze(this.state)\n  }\n}\n\nexport type Options = {\n  isDevMode: boolean\n}\n\nlet DEFAULT_OPTIONS: Readonly<Options> = {\n  isDevMode: false\n}\n\nexport class StoreDefinition<State extends object> implements Store<State> {\n  private storeSnapshot: StoreSnapshot<State>\n  private alls: Emitter<Undux<State>>\n  private emitter: Emitter<State>\n  private setters: {\n    readonly [K in keyof State]: (value: State[K]) => void\n  }\n  constructor(state: State, options: Options) {\n\n    let emitterOptions = {\n      isDevMode: options.isDevMode,\n      onCycle(chain: (string | number | symbol)[]) {\n        console.error(CYCLE_ERROR_MESSAGE + chain.join(' -> '))\n      }\n    }\n\n    // Initialize emitters\n    this.alls = new Emitter(emitterOptions)\n    this.emitter = new Emitter(emitterOptions)\n\n    // Set initial state\n    this.storeSnapshot = new StoreSnapshot(state, this)\n\n    // Cache setters\n    this.setters = mapValues(state, (v, key) =>\n      (value: typeof v) => {\n        let previousValue = this.storeSnapshot.get(key)\n        this.storeSnapshot = new StoreSnapshot(\n          Object.assign({}, this.storeSnapshot.getState(), { [key]: value }),\n          this\n        )\n        this.emitter.emit(key, value)\n        this.alls.emit(key, { key, previousValue, value })\n      }\n    )\n  }\n  on<K extends keyof State>(key: K): Observable<State[K]> {\n    return this.emitter.on(key)\n  }\n  onAll(): Observable<Undux<State>[keyof State]> {\n    return this.alls.all()\n  }\n  get<K extends keyof State>(key: K) {\n    return this.storeSnapshot.get(key)\n  }\n  set<K extends keyof State>(key: K) {\n    return this.setters[key]\n  }\n  getCurrentSnapshot() {\n    return this.storeSnapshot\n  }\n  toStore(): Store<State> {\n    return this.storeSnapshot\n  }\n  getState() {\n    return this.storeSnapshot.getState()\n  }\n}\n\nexport function createStore<State extends object>(\n  initialState: State,\n  options: Options = DEFAULT_OPTIONS\n): StoreDefinition<State> {\n  return new StoreDefinition<State>(initialState, options)\n}\n\nexport type Effect<State extends object> =\n  (store: StoreDefinition<State>) => void\n\nexport type EffectAs<States extends {\n  [alias: string]: any\n}> = (stores: {[K in keyof States]: StoreDefinition<States[K]>}) => void\n\n/**\n * @deprecated Use `Effect` instead.\n */\nexport type Plugin<State extends object> = Effect<State>\n\nexport * from './plugins/withLogger'\nexport * from './plugins/withReduxDevtools'\nexport * from './react'\n","import mapValues from 'lodash/mapValues'\n\nexport function fromLocalStorage<T extends object>(object: T): T {\n  return mapValues(object, keyFromLocalStorage) as any\n}\n\nfunction keyFromLocalStorage<T>(or: T, key: string): T {\n  let value = localStorage.getItem(key)\n  if (value !== null) {\n    return JSON.parse(value)\n  }\n  return or\n}\n\nexport function pluralize(count: number, word: string) {\n  return count === 1 ? word : word + 's'\n}\n\nexport function replace<T>(array: T[], item: T, replacement: T): T[] {\n  let index = array.indexOf(item)\n  if (index < 0) {\n    return array\n  }\n  return [\n    ...array.slice(0, index),\n    replacement,\n    ...array.slice(index + 1)\n  ]\n}\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","export let ENTER = 13\nexport let ESCAPE = 27\n","import React from 'react'\n\ntype Props = {\n  autoFocus?: boolean\n  className?: string\n  onBlur?(): void\n  onChange?(value: string): void\n  onKeyDown?(keycode: number): void\n  placeholder?: string\n  value: string\n}\n\nexport let Input: React.StatelessComponent<Props> = ({\n  autoFocus, className, onBlur, onChange, onKeyDown, placeholder, value\n}) =>\n  <input\n    autoFocus={autoFocus}\n    className={className}\n    onBlur={() => onBlur && onBlur()}\n    onChange={e => onChange && onChange(e.currentTarget.value)}\n    onKeyDown={e => onKeyDown && onKeyDown(e.which)}\n    placeholder={placeholder}\n    value={value}\n  />\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\nimport Store from './store'\n\nrender(\n  <Store.Container><App /></Store.Container>,\n  document.getElementsByClassName('todoapp')[0]\n)\n","module.exports = ReactDOM;","import without from 'lodash/without'\nimport React from 'react'\nimport { Todo, TodoStatus } from '../datatypes'\nimport Store, { StoreProps } from '../store'\nimport { replace } from '../utils'\nimport AddTodoItem from './AddTodoItem'\nimport TodoFooter from './Footer'\nimport TodoList from './TodoList'\nimport ToggleAll from './ToggleAll'\n\nclass App extends React.Component<StoreProps> {\n\n  render() {\n    return <>\n      <header className='header'>\n        <h1>todos</h1>\n        <AddTodoItem />\n      </header>\n      <section className='main'>\n        <ToggleAll onChange={this.onToggleAll} />\n        <TodoList\n          onDestroy={this.onDestroy}\n          onSave={this.onSave}\n          onToggle={this.onToggle}\n        />\n      </section>\n      <TodoFooter />\n    </>\n  }\n\n  onDestroy = (todo: Todo) => {\n    this.props.store.set('todos')(\n      without(this.props.store.get('todos'), todo)\n    )\n  }\n\n  onToggleAll = (status: TodoStatus) =>\n    this.props.store.set('todos')(\n      this.props.store.get('todos').map(_ => ({ ..._, status }))\n    )\n\n  onToggle = (todo: Todo, isCompleted: boolean) => {\n    let status: TodoStatus = isCompleted ? 'completed' : 'active'\n    this.props.store.set('todos')(\n      replace(this.props.store.get('todos'), todo, { ...todo, status })\n    )\n  }\n\n  onSave = (todo: Todo, title: string) => {\n    let {store} = this.props\n    store.set('todos')(\n      replace(store.get('todos'), todo, { ...todo, title })\n    )\n    store.set('editingTodo')(null)\n  }\n\n}\n\nexport default Store.withStore(App)\n","var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","import { Observable, Observer } from 'rxjs'\n\nexport type ALL = '__ALL__'\nconst ALL: ALL = '__ALL__'\n\ninterface State<Messages extends object> {\n  callChain: Set<keyof Messages | ALL>\n  observables: Map<keyof Messages | ALL, Observable<any>[]>\n  observers: Map<keyof Messages | ALL, Observer<any>[]>\n  options: Options<Messages>\n}\n\nexport type Options<Messages> = {\n  onCycle(chain: (keyof Messages | ALL)[]): void\n  isDevMode: boolean\n}\n\nexport class Emitter<Messages extends object> {\n\n  private emitterState: State<Messages>\n\n  constructor(options?: Partial<Options<Messages>>) {\n\n    let DEFAULT_OPTIONS: Options<Messages> = {\n      isDevMode: false,\n      onCycle(chain) {\n        console.error(\n          '[typed-rx-emitter] Error: Cyclical dependency detected. '\n          + 'This may cause a stack overflow unless you fix it. '\n          + chain.join(' -> ')\n        )\n      }\n    }\n\n    this.emitterState = {\n      callChain: new Set,\n      observables: new Map,\n      observers: new Map,\n      options: {...DEFAULT_OPTIONS, ...options}\n    }\n  }\n\n  /**\n   * Emit an event (silently fails if no listeners are hooked up yet)\n   */\n  emit<K extends keyof Messages>(key: K, value: Messages[K]): this {\n    let { isDevMode, onCycle } = this.emitterState.options\n    if (isDevMode) {\n      if (this.emitterState.callChain.has(key)) {\n        onCycle(Array.from(this.emitterState.callChain).concat(key))\n        return this\n      } else {\n        this.emitterState.callChain.add(key)\n      }\n    }\n    if (this.hasChannel(key)) {\n      this.emitOnChannel(key, value)\n    }\n    if (this.hasChannel(ALL)) {\n      this.emitOnChannel(ALL, value)\n    }\n    if (isDevMode) this.emitterState.callChain.clear()\n    return this\n  }\n\n  /**\n   * Subscribe to an event\n   */\n  on<K extends keyof Messages>(key: K): Observable<Messages[K]> {\n    return this.createChannel(key)\n  }\n\n  /**\n   * Subscribe to all events\n   */\n  all(): Observable<Messages[keyof Messages]> {\n    return this.createChannel(ALL)\n  }\n\n  ///////////////////// privates /////////////////////\n\n  private createChannel<K extends keyof Messages>(key: K | ALL) {\n    if (!this.emitterState.observers.has(key)) {\n      this.emitterState.observers.set(key, [])\n    }\n    if (!this.emitterState.observables.has(key)) {\n      this.emitterState.observables.set(key, [])\n    }\n    const observable: Observable<Messages[K]> = Observable\n      .create((_: Observer<Messages[K]>) => {\n        this.emitterState.observers.get(key)!.push(_)\n        return () => this.deleteChannel(key, observable)\n      })\n    this.emitterState.observables.get(key)!.push(observable)\n    return observable\n  }\n\n  private deleteChannel<K extends keyof Messages>(\n    key: K | ALL,\n    observable: Observable<Messages[K]>\n  ) {\n    if (!this.emitterState.observables.has(key)) {\n      return\n    }\n    const array = this.emitterState.observables.get(key)!\n    const index = array.indexOf(observable)\n    if (index < 0) {\n      return\n    }\n    array.splice(index, 1)\n    if (!array.length) {\n      this.emitterState.observables.delete(key)\n      this.emitterState.observers.delete(key)\n    }\n  }\n\n  private emitOnChannel<K extends keyof Messages>(\n    key: K | ALL,\n    value: Messages[K]\n  ) {\n    this.emitterState.observers.get(key)!.forEach(_ => _.next(value))\n  }\n\n  private hasChannel<K extends keyof Messages>(key: K | ALL): boolean {\n    return this.emitterState.observables.has(key)\n  }\n}\n","import { StoreDefinition } from '..'\n\nexport function withLogger<State extends object>(\n  store: StoreDefinition<State>\n): StoreDefinition<State> {\n\n  store.onAll().subscribe(({ key, previousValue, value }) => {\n    console.info(`%c ⥁ ${key}`, 'background-color: rgb(96, 125, 139); color: #fff; padding: 2px 8px 2px 0;', previousValue, '→', value)\n  })\n\n  return store\n}\n","import { StoreDefinition } from '..'\n\nexport function withReduxDevtools<State extends object>(\n  store: StoreDefinition<State>\n): StoreDefinition<State> {\n\n  let devtools = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (!devtools) {\n    console.error('Undux withReduxDevtools plugin: Cannot find Redux Devtools browser extension. Is it installed?')\n    return store\n  }\n\n  let devTools = devtools.connect()\n  let wasTriggeredByDevtools = false\n\n  let jumpToState = (newState: State) => {\n    let oldState = store.getState()\n    for (let key in newState) {\n      if (key in oldState) {\n        wasTriggeredByDevtools = true\n        store.set(key as keyof State)(newState[key as keyof State])\n        wasTriggeredByDevtools = false\n      }\n    }\n  }\n\n  devTools.subscribe(message => {\n    switch (message.type) {\n      case 'START':\n        devTools.send(null, store.getState())\n        return\n      case 'DISPATCH':\n        if (!message.state) {\n          return\n        }\n        switch (message.payload.type) {\n          case 'JUMP_TO_ACTION':\n          case 'JUMP_TO_STATE':\n            jumpToState(JSON.parse(message.state))\n            return\n        }\n        return\n    }\n  })\n\n  store.onAll().subscribe(({ key }) => {\n    if (wasTriggeredByDevtools) {\n      return\n    }\n    devTools.send(key, store.getState())\n  })\n\n  return store\n}\n","export {connect} from './connect'\nexport {connectAs} from './connectAs'\nexport {connectToTree} from './connectToTree'\nexport {connectToTreeAs} from './connectToTreeAs'\n","import * as React from 'react'\nimport { Subscription } from 'rxjs'\nimport { Store, StoreDefinition, StoreSnapshot } from '../'\nimport { Diff, equals, getDisplayName } from '../utils'\n\nexport function connect<StoreState extends object>(store: StoreDefinition<StoreState>) {\n  return function <\n    Props,\n    PropsWithStore extends { store: Store<StoreState> } & Props = { store: Store<StoreState> } & Props\n  >(\n    Component: React.ComponentType<PropsWithStore>\n  ): React.ComponentClass<Diff<PropsWithStore, { store: Store<StoreState> }>> {\n\n    type State = {\n      store: StoreSnapshot<StoreState>\n      subscription: Subscription\n    }\n\n    return class extends React.Component<Diff<PropsWithStore, { store: Store<StoreState> }>, State> {\n      static displayName = `withStore(${getDisplayName(Component)})`\n      state = {\n        store: store.getCurrentSnapshot(),\n        subscription: store.onAll().subscribe(({ previousValue, value }) => {\n          if (equals(previousValue, value)) {\n            return false\n          }\n          this.setState({ store: store.getCurrentSnapshot() })\n        })\n      }\n      componentWillUnmount() {\n        this.state.subscription.unsubscribe()\n      }\n      shouldComponentUpdate(props: Readonly<Diff<PropsWithStore, { store: Store<StoreState> }>>, state: State) {\n        return state.store !== this.state.store\n          || Object.keys(props).some(_ => (props as any)[_] !== (this.props as any)[_])\n      }\n      render() {\n        return <Component {...this.props} store={this.state.store} />\n      }\n    }\n  }\n}\n","import * as React from 'react'\nimport { Subscription } from 'rxjs'\nimport { StoreDefinition } from '../'\nimport { Diff, equals, getDisplayName, keys, mapValues, some } from '../utils'\n\nexport function connectAs<\n  Stores extends {[alias: string]: StoreDefinition<any>}\n>(\n  stores: Stores\n) {\n  return function<Props extends object>(\n    Component: React.ComponentType<{\n      [K in keyof Stores]: ReturnType<Stores[K]['toStore']>\n    } & Props>\n  ): React.ComponentClass<Diff<Props, Stores>> {\n\n    type State = {\n      stores: {\n        [K in keyof Stores]: ReturnType<Stores[K]['getCurrentSnapshot']>\n      }\n      subscriptions: Subscription[]\n    }\n\n    return class extends React.Component<Diff<Props, Stores>, State> {\n      static displayName = `withStore(${getDisplayName(Component)})`\n      state = {\n        stores: mapValues(stores, _ =>\n          _.getCurrentSnapshot() as ReturnType<(typeof _)['getCurrentSnapshot']>\n        ),\n        subscriptions: keys(stores).map(k =>\n          stores[k].onAll().subscribe(({ previousValue, value }) => {\n            if (equals(previousValue, value)) {\n              return false\n            }\n            this.setState({\n              stores: Object.assign({}, this.state.stores as any, {[k]: stores[k].getCurrentSnapshot()})\n            })\n          })\n        )\n      }\n      componentWillUnmount() {\n        this.state.subscriptions.forEach(_ => _.unsubscribe())\n      }\n      shouldComponentUpdate(props: Diff<Props, Stores>, state: State) {\n        return some(state.stores, (s, k) => s !== this.state.stores[k])\n          || Object.keys(props).some(_ => (props as any)[_] !== (this.props as any)[_])\n      }\n      render() {\n        return <Component {...this.props} {...this.state.stores} />\n      }\n    }\n  }\n}\n","import * as React from 'react'\nimport { Subscription } from 'rxjs'\nimport { createStore, Effect, Store, StoreDefinition, StoreSnapshot } from '..'\nimport { Diff, getDisplayName } from '../utils'\n\nexport type Connect<State extends object> = {\n  Container: React.ComponentType<ContainerProps<State>>\n  withStore: <\n    Props extends {store: Store<State>}\n  >(\n    Component: React.ComponentType<Props>\n  ) => React.ComponentType<Diff<Props, {store: Store<State>}>>\n}\n\nexport type ContainerProps<State extends object> = {\n  effects?: Effect<State>\n  initialState?: State\n}\n\nexport function connectToTree<State extends object>(\n  initialState: State,\n  effects?: Effect<State>\n): Connect<State> {\n  let Context = React.createContext({ __MISSING_PROVIDER__: true } as any)\n\n  type ContainerState = {\n    storeDefinition: StoreDefinition<State> | null\n    storeSnapshot: StoreSnapshot<State> | null\n    subscription: Subscription\n  }\n\n  class Container extends React.Component<ContainerProps<State>, ContainerState> {\n    constructor(props: ContainerProps<State>) {\n      super(props)\n\n      // Create store definition from initial state\n      let state = props.initialState || initialState\n      let storeDefinition = createStore(state)\n\n      // Apply effects?\n      let fx = props.effects || effects\n      if (fx) {\n        fx(storeDefinition)\n      }\n\n      this.state = {\n        storeDefinition,\n        storeSnapshot: storeDefinition.getCurrentSnapshot(),\n        subscription: storeDefinition.onAll().subscribe(() =>\n          this.setState({ storeSnapshot: storeDefinition.getCurrentSnapshot() })\n        )\n      }\n    }\n    componentWillUnmount() {\n      this.state.subscription.unsubscribe();\n      // Let the state get GC'd.\n      // TODO: Find a more elegant way to do this.\n      (this.state.storeSnapshot as any).state = null;\n      (this.state.storeSnapshot as any).storeDefinition = null;\n      (this.state.storeDefinition as any).storeSnapshot = null\n    }\n    render() {\n      return <Context.Provider value={this.state.storeSnapshot}>\n        {this.props.children}\n      </Context.Provider>\n    }\n  }\n\n  let Consumer = (props: {\n    children: (store: StoreSnapshot<State>) => JSX.Element\n    displayName: string\n  }) =>\n    <Context.Consumer>\n      {store => {\n        if (!isInitialized(store)) {\n          throw Error(`Component \"${props.displayName}\" is not nested in a <Container>. To fix this error, be sure to render the component in a <Container>...</Container> tag.`)\n        }\n        return props.children(store)\n      }}\n    </Context.Consumer>\n\n  function withStore<\n    Props extends {store: Store<State>},\n    PropsWithoutStore = Diff<Props, {store: Store<State>}>\n  >(\n    Component: React.ComponentType<Props>\n  ): React.ComponentType<PropsWithoutStore> {\n    let displayName = getDisplayName(Component)\n    let f: React.StatelessComponent<PropsWithoutStore> = props =>\n      <Consumer displayName={displayName}>\n        {store => <Component store={store} {...props} />}\n      </Consumer>\n    f.displayName = `withStore(${displayName})`\n    return f\n  }\n\n  return {\n    Container,\n    withStore\n  }\n}\n\nfunction isInitialized<State extends object>(\n  store: StoreSnapshot<State> | {__MISSING_PROVIDER__: true}\n) {\n  return !('__MISSING_PROVIDER__' in store)\n}\n","import * as React from 'react'\nimport { Subscription } from 'rxjs'\nimport { createStore, EffectAs, Store, StoreDefinition, StoreSnapshot } from '..'\nimport { Diff, getDisplayName, mapValues } from '../utils'\n\nexport type ConnectAs<States extends {\n  [alias: string]: any\n}> = {\n  Container: React.ComponentType<ContainerPropsAs<States>>\n  initialStates: States,\n  withStores: <\n    Props extends {[K in keyof States]: Store<States[K]>}\n  >(\n    Component: React.ComponentType<Props>\n  ) => React.ComponentType<Diff<Props, {[K in keyof States]: Store<States[K]>}>>\n}\n\nexport type ContainerPropsAs<States extends {\n  [alias: string]: any\n}> = {\n  effects?: EffectAs<States>\n  initialStates?: States\n}\n\nexport function connectToTreeAs<States extends {\n  [alias: string]: any\n}>(\n  initialStates: States,\n  effects?: EffectAs<States>\n): ConnectAs<States> {\n  let Context = React.createContext({ __MISSING_PROVIDER__: true } as any)\n\n  type ContainerState = {\n    storeDefinitions: {\n      [K in keyof States]: StoreDefinition<States[K]> | null\n    }\n    storeSnapshots: {\n      [K in keyof States]: StoreSnapshot<States[K]> | null\n    }\n    subscriptions: {\n      [K in keyof States]: Subscription\n    }\n  }\n\n  class Container extends React.Component<ContainerPropsAs<States>, ContainerState> {\n    constructor(props: ContainerPropsAs<States>) {\n      super(props)\n\n      // Create store definition from initial state\n      let states = props.initialStates || initialStates\n      let stores = mapValues(states, _ => createStore(_))\n\n      // Apply effects?\n      let fx = props.effects || effects\n      if (fx) {\n        fx(stores)\n      }\n\n      this.state = {\n        storeDefinitions: stores,\n        storeSnapshots: mapValues(stores, _ => _.getCurrentSnapshot()),\n        subscriptions: mapValues(stores, (_, k) => _.onAll().subscribe(() =>\n          this.setState({\n            storeSnapshots: Object.assign(\n              {},\n              this.state.storeSnapshots,\n              { [k]: _.getCurrentSnapshot() }\n            )\n          })\n        ))\n      }\n    }\n    componentWillUnmount() {\n      mapValues(this.state.subscriptions, _ => _.unsubscribe())\n      // Let the state get GC'd.\n      // TODO: Find a more elegant way to do this.\n      if (this.state.storeSnapshots) {}\n      mapValues(this.state.storeSnapshots, _ => (_ as any).state = null)\n      mapValues(this.state.storeSnapshots, _ => (_ as any).storeDefinition = null)\n      mapValues(this.state.storeDefinitions, _ => (_ as any).storeSnapshot = null)\n    }\n    render() {\n      return <Context.Provider value={this.state.storeSnapshots}>\n        {this.props.children}\n      </Context.Provider>\n    }\n  }\n\n  let Consumer = (props: {\n    children: (stores: { [K in keyof States]: StoreSnapshot<States[K]> }) => JSX.Element\n    displayName: string\n  }) =>\n    <Context.Consumer>\n      {stores => {\n        mapValues(stores, (store: StoreSnapshot<any>) => {\n          if (!isInitialized(store)) {\n            throw Error(`Component \"${props.displayName}\" is not nested in a <Container>. To fix this error, be sure to render the component in a <Container>...</Container> tag.`)\n          }\n        })\n        return props.children(stores)\n      }}\n    </Context.Consumer>\n\n  function withStores<\n    Props extends {[K in keyof States]: Store<States[K]>},\n    PropsWithoutStore = Diff<Props, {[K in keyof States]: Store<States[K]>}>\n  >(\n    Component: React.ComponentType<Props>\n  ): React.ComponentType<PropsWithoutStore> {\n    let displayName = getDisplayName(Component)\n    let f: React.StatelessComponent<PropsWithoutStore> = props =>\n      <Consumer displayName={displayName}>\n        {stores => <Component {...stores} {...props} />}\n      </Consumer>\n    f.displayName = `withStores(${displayName})`\n    return f\n  }\n\n  return {\n    Container,\n    initialStates,\n    withStores\n  }\n}\n\nfunction isInitialized<State extends object>(\n  store: StoreSnapshot<State> | {__MISSING_PROVIDER__: true}\n) {\n  return !('__MISSING_PROVIDER__' in store)\n}\n","import { Effect } from 'undux'\nimport { State } from './store'\n\nexport let withEffects: Effect<State> = store => {\n\n  // localStorage\n  store.onAll().subscribe(({ key, value }) =>\n    localStorage.setItem(key, JSON.stringify(value))\n  )\n\n  // router\n  store.on('route').subscribe(route =>\n    window.location.hash = route\n  )\n\n  return store\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","import React from 'react'\nimport { ENTER } from '../constants/KEYCODES'\nimport Store, { StoreProps } from '../store'\nimport { Input } from './Input'\n\nclass AddTodoItem extends React.Component<StoreProps> {\n\n  render() {\n    return <Input\n      autoFocus={true}\n      className='new-todo'\n      onChange={this.props.store.set('addTodoTitle')}\n      onKeyDown={this.onKeyDown}\n      placeholder='What needs to be done?'\n      value={this.props.store.get('addTodoTitle')}\n    />\n  }\n\n  onKeyDown = (keyCode: number) => {\n    let { store } = this.props\n    switch (keyCode) {\n      case ENTER:\n        let title = store.get('addTodoTitle')\n        if (title) {\n          store.set('addTodoTitle')('')\n          store.set('todos')([\n            { status: 'active', title },\n            ...store.get('todos')\n          ])\n        }\n    }\n  }\n}\n\nexport default Store.withStore(AddTodoItem)\n","import React from 'react'\nimport { Route } from '../datatypes'\nimport Store, { StoreProps } from '../store'\nimport { pluralize } from '../utils'\n\nlet filters: [Route, string][] = [\n  ['/all', 'All'],\n  ['/active', 'Active'],\n  ['/completed', 'Completed']\n]\n\nclass Footer extends React.Component<StoreProps> {\n  render() {\n\n    let allTodos = this.props.store.get('todos')\n    let activeCount = allTodos.filter(_ => _.status === 'active').length\n    let completedCount = allTodos.length - activeCount\n    let shouldShowClearButton = completedCount > 0\n\n    return <footer className='footer'>\n      <span className='todo-count'>\n        <strong>{activeCount}</strong> {pluralize(activeCount, 'item')} left\n    </span>\n      <ul className='filters'>\n        {filters.map(([route, name]) =>\n          <li key={route}>\n            <a\n              className={route === this.props.store.get('route') ? 'selected' : ''}\n              onClick={() => this.props.store.set('route')(route)}\n            >{name}</a>\n          </li>\n        )}\n      </ul>\n      {shouldShowClearButton && <button\n        className='clear-completed'\n        onClick={this.onClearCompleted}>\n        Clear completed\n    </button>}\n    </footer>\n  }\n\n  onClearCompleted = () =>\n    this.props.store.set('todos')(\n      this.props.store.get('todos').filter(_ => _.status !== 'completed')\n    )\n}\n\nexport default Store.withStore(Footer)\n","import classnames from 'classnames'\nimport React from 'react'\nimport { Route, Todo } from '../datatypes'\nimport Store, { StoreProps } from '../store'\nimport TodoItem from './TodoItem'\n\ntype Props = StoreProps & {\n  onDestroy(todo: Todo): void\n  onSave(todo: Todo, title: string): void\n  onToggle(todo: Todo, isCompleted: boolean): void\n}\n\nlet TodoList: React.StatelessComponent<Props> = ({\n  onDestroy, onSave, onToggle, store\n}) =>\n  <ul className='todo-list'>\n    {store\n      .get('todos')\n      .filter(byRoute(store.get('route')))\n      .map((todo, index) =>\n        <li\n          className={classnames({\n            completed: todo.status === 'completed',\n            editing: todo === store.get('editingTodo')\n          })}\n          key={index}\n        >\n          <TodoItem\n            todo={todo}\n            onToggle={onToggle}\n            onDestroy={onDestroy}\n            onSave={onSave}\n          />\n        </li>\n      )\n    }\n  </ul>\n\nexport default Store.withStore(TodoList)\n\nfunction byRoute(route: Route) {\n  return (todo: Todo): boolean => {\n    switch (route) {\n      case '/all': return true\n      case '/active': return todo.status === 'active'\n      case '/completed': return todo.status === 'completed'\n    }\n  }\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport { ENTER, ESCAPE } from '../constants/KEYCODES'\nimport { Todo } from '../datatypes'\nimport Store, { StoreProps } from '../store'\nimport { Input } from './Input'\n\ntype Props = {\n  todo: Todo\n  onDestroy(todo: Todo): void\n  onSave(todo: Todo, title: string): void\n  onToggle(todo: Todo, isCompleted: boolean): void\n}\n\nclass TodoItem extends React.Component<StoreProps & Props> {\n\n  onEdit = () => {\n    this.props.store.set('editingTodo')(this.props.todo)\n    this.props.store.set('editingTodoNewTitle')(this.props.todo.title)\n  }\n\n  onKeyDown = (keyCode: number) => {\n    switch (keyCode) {\n      case ENTER:\n        this.onSubmit()\n        return\n      case ESCAPE:\n        this.props.store.set('editingTodoNewTitle')(this.props.todo.title)\n        this.props.store.set('editingTodo')(null)\n        return\n    }\n  }\n\n  onSubmit = () => {\n    let text = this.props.store.get('editingTodoNewTitle')\n    switch (text) {\n      case null:\n        return\n      case '':\n        return this.props.onDestroy(this.props.todo)\n      default:\n        this.props.onSave(this.props.todo, text)\n        this.props.store.set('editingTodoNewTitle')(null)\n    }\n  }\n\n  render() {\n    if (this.props.todo === this.props.store.get('editingTodo')) {\n      return <Input\n        autoFocus\n        className='edit'\n        value={this.props.store.get('editingTodoNewTitle') || ''}\n        onBlur={() => this.onSubmit()}\n        onChange={this.props.store.set('editingTodoNewTitle')}\n        onKeyDown={this.onKeyDown}\n      />\n    }\n\n    return <div className='view'>\n      <input\n        className='toggle'\n        type='checkbox'\n        checked={this.props.todo.status === 'completed'}\n        onChange={e => this.props.onToggle(this.props.todo, e.currentTarget.checked)}\n      />\n      <label onDoubleClick={this.onEdit}>\n        {this.props.todo.title}\n      </label>\n      <button\n        className='destroy'\n        onClick={() => this.props.onDestroy(this.props.todo)}\n      />\n    </div>\n  }\n}\n\nexport default Store.withStore(TodoItem)\n","import sum from 'lodash/sum'\nimport React from 'react'\nimport { TodoStatus } from '../datatypes'\nimport Store, { StoreProps } from '../store'\n\ntype Props = StoreProps & {\n  onChange(status: TodoStatus): void\n}\n\nlet ToggleAll: React.StatelessComponent<Props> = ({ onChange, store }) => {\n\n  let allTodos = store.get('todos')\n  let activeCount = sum(allTodos.filter(_ => _.status === 'active'))\n\n  return <input\n    className='toggle-all'\n    type='checkbox'\n    onChange={e => onChange(e.currentTarget.checked ? 'completed' : 'active')}\n    checked={activeCount === 0}\n  />\n\n}\n\nexport default Store.withStore(ToggleAll)\n","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; });\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n}\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n\n  public readonly name = 'UnsubscriptionError';\n\n  constructor(public errors: any[]) {\n    super(errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (Object as any).setPrototypeOf(this, UnsubscriptionError.prototype);\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parent: Subscription = null;\n  /** @internal */\n  protected _parents: Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  /** @internal */\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export const rxSubscriber =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n          // node_modules, we cannot rely on `instanceof` checks\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```javascript\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```javascript\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```javascript\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<R>(...operations: OperatorFunction<any, any>[]): Observable<R>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```javascript\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n\n  public readonly name = 'ObjectUnsubscribedError';\n\n  constructor() {\n    super('object unsubscribed');\n    (Object as any).setPrototypeOf(this, ObjectUnsubscribedError.prototype);\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * ##Examples\n * Group objects by id and return as array\n * ```typescript\n * interface Obj {\n *    id: number,\n *    name: string,\n * }\n * \n * of<Obj>(\n *   {id: 1, name: 'aze1'},\n *   {id: 2, name: 'sf2'},\n *   {id: 2, name: 'dg2'},\n *   {id: 1, name: 'erg1'},\n *   {id: 1, name: 'df1'},\n *   {id: 2, name: 'sfqfb2'},\n *   {id: 3, name: 'qfs3'},\n *   {id: 2, name: 'qsgqsfg2'},\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n * ```\n *\n * Pivot data on the id field\n * ```typescript\n * of<Obj>(\n *   {id: 1, name: 'aze1'},\n *   {id: 2, name: 'sf2'},\n *   {id: 2, name: 'dg2'},\n *   {id: 1, name: 'erg1'},\n *   {id: 1, name: 'df1'},\n *   {id: 2, name: 'sfqfb2'},\n *   {id: 3, name: 'qfs1'},\n *   {id: 2, name: 'qsgqsfg2'},\n * ).pipe(\n *   groupBy(p => p.id, p => p.name),\n *   mergeMap( (group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))),\n *   map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)})),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```javascript\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```javascript\n * const interval$ = interval(1000);\n * result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using EMPTY constant.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nexport function emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  if (!subscriber.closed) {\n    subscriber.complete();\n  }\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nimport { Observable } from '../Observable';\n\n/* tslint:disable:max-line-length */\nexport function of<T>(a: T, scheduler?: SchedulerLike): Observable<T>;\nexport function of<T, T2>(a: T, b: T2, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```javascript\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```javascript\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n  } else {\n    scheduler = undefined;\n  }\n  switch (args.length) {\n    case 0:\n      return empty(scheduler);\n    case 1:\n      return scheduler ? fromArray(args as T[], scheduler) : scalar(args[0] as T);\n    default:\n      return fromArray(args as T[], scheduler);\n  }\n}\n","import { Observable } from '../Observable';\n\nexport function scalar<T>(value: T) {\n  const result = new Observable<T>(subscriber => {\n    subscriber.next(value);\n    subscriber.complete();\n  });\n  result._isScalar = true;\n  (result as any).value = value;\n  return result;\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```javascript\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```javascript\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13\n * ```javascript\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 13\n *     ? throwError('Thirteens are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n * ```\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throw\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```javascript\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\n\nconst tasksByHandle: { [handle: string]: () => void } = {};\n\nfunction runIfPresent(handle: number) {\n  const cb = tasksByHandle[handle];\n  if (cb) {\n    cb();\n  }\n}\n\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    tasksByHandle[handle] = cb;\n    Promise.resolve().then(() => runIfPresent(handle));\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    delete tasksByHandle[handle];\n  },\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n\n  public readonly name = 'ArgumentOutOfRangeError';\n\n  constructor() {\n    super('argument out of range');\n    (Object as any).setPrototypeOf(this, ArgumentOutOfRangeError.prototype);\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n\n  public readonly name = 'EmptyError';\n\n  constructor() {\n    super('no elements in sequence');\n    (Object as any).setPrototypeOf(this, EmptyError.prototype);\n  }\n}\n","/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport class TimeoutError extends Error {\n\n  public readonly name = 'TimeoutError';\n\n  constructor() {\n    super('Timeout has occurred');\n    (Object as any).setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, the\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is very important to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n * and call `subscribe` on the output Observable all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```javascript\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * var getJSONAsObservable = bindCallback(jQuery.getJSON);\n * var result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```javascript\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```javascript\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```javascript\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            subject.error(err);\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```javascript\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```javascript\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```javascript\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            subject.error(err);\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export function isPromise(value: any): value is PromiseLike<any> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>) => {\n  if (result instanceof Observable) {\n    return (subscriber: Subscriber<T>) => {\n        if (result._isScalar) {\n        subscriber.next((result as any).value);\n        subscriber.complete();\n        return undefined;\n      } else {\n        return result.subscribe(subscriber);\n      }\n    };\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","\nimport { ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeTo } from './subscribeTo';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription | void {\n  const destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  return subscribeTo(result)(destination);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: SchedulerLike): Observable<R>;\n\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: SchedulerLike): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R, scheduler?: SchedulerLike): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | SchedulerLike>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, if some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```javascript\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```javascript\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```javascript\n * * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    SchedulerLike>): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <SchedulerLike>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<T, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike } from '../types';\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function from<T>(input: ObservableInput<ObservableInput<T>>, scheduler?: SchedulerLike): Observable<Observable<T>>;\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  }\n\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return fromPromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return fromArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return fromIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function fromObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToObservable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable: Subscribable<T> = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n          error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n          complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\n\nexport function fromPromise<T>(input: PromiseLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToPromise(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => input.then(\n        value => {\n          sub.add(scheduler.schedule(() => {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }));\n        },\n        err => {\n          sub.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )));\n      return sub;\n    });\n  }\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\n\nexport function fromIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  if (!scheduler) {\n    return new Observable<T>(subscribeToIterable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let iterator: Iterator<T>;\n      sub.add(() => {\n        // Finalize generators\n        if (iterator && typeof iterator.return === 'function') {\n          iterator.return();\n        }\n      });\n      sub.add(scheduler.schedule(() => {\n        iterator = input[Symbol_iterator]();\n        sub.add(scheduler.schedule(function () {\n          if (subscriber.closed) {\n            return;\n          }\n          let value: T;\n          let done: boolean;\n          try {\n            const result = iterator.next();\n            value = result.value;\n            done = result.done;\n          } catch (err) {\n            subscriber.error(err);\n            return;\n          }\n          if (done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(value);\n            this.schedule();\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```javascript\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput } from '../types';\n\nexport function mergeAll<T>(concurrent?: number): OperatorFunction<ObservableInput<T>, T>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap<T, T>(identity as (value: T, index: number) => ObservableInput<T>, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | SchedulerLike)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```javascript\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate an array of 3 Observables\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const result = concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```javascript\n * const timer = interval(1000).pipe(take(2));\n * *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll<R>()(of(...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```javascript\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n  return new Observable(subscriber => {\n    let input: SubscribableOrPromise<T> | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input) : empty();\n    return source.subscribe(subscriber);\n  });\n}","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\n// forkJoin([a$, b$, c$]);\nexport function forkJoin<T>(sources: [ObservableInput<T>]): Observable<T[]>;\nexport function forkJoin<T, T2>(sources: [ObservableInput<T>, ObservableInput<T2>]): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>]): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>]): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>]): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>, ObservableInput<T6>]): Observable<[T, T2, T3, T4, T5, T6]>;\nexport function forkJoin<T>(sources: Array<ObservableInput<T>>): Observable<T[]>;\n\n// forkJoin(a$, b$, c$)\nexport function forkJoin<T>(v1: ObservableInput<T>): Observable<T[]>;\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * ## Examples\n * ### Use forkJoin with operator emitting immediately\n * ```javascript\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8),\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n * ```\n *\n * ### Use forkJoin with operator emitting after some time\n * ```javascript\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)),  // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with project function\n * ```javascript\n * import { jorkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)),  // emit 0, 1, 2, 3 every half a second and complete\n * ).pipe(\n *   map(([n, m]) => n + m),\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin<T>(\n  ...sources: Array<ObservableInput<T> | ObservableInput<T>[] | Function>\n): Observable<T[]> {\n\n  let resultSelector: Function;\n  if (typeof sources[sources.length - 1] === 'function') {\n    // DEPRECATED PATH\n    resultSelector = sources.pop() as Function;\n  }\n\n  // if the first and only other argument is an array\n  // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n  if (sources.length === 1 && isArray(sources[0])) {\n    sources = sources[0] as Array<ObservableInput<T>>;\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return forkJoin(sources).pipe(\n      map(args => resultSelector(...args))\n    );\n  }\n\n  return new Observable(subscriber => {\n    return new ForkJoinSubscriber(subscriber, sources as Array<ObservableInput<T>>);\n  });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T, R> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private values: T[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<R>,\n              private sources: Array<ObservableInput<T>>) {\n    super(destination);\n\n    const len = sources.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(innerSub as any)._hasValue) {\n      (innerSub as any)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const { destination, haveValues, values } = this;\n    const len = values.length;\n\n    if (!(innerSub as any)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      destination.next(values);\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = Object.prototype.toString;\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```javascript\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { fromEvent } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an API based on addHandler/removeHandler\n * functions.\n *\n * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n * Observable.</span>\n *\n * ![](fromEventPattern.png)\n *\n * Creates an Observable by using the `addHandler` and `removeHandler`\n * functions to add and remove the handlers. The `addHandler` is\n * called when the output Observable is subscribed, and `removeHandler` is\n * called when the Subscription is unsubscribed.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n * ```javascript\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler,\n * );\n * clicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link from}\n * @see {@link fromEvent}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n * takes a `handler` function as argument and removes it in case it was\n * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n * removeHandler function will forward it.\n * @return {Observable<T>}\n * @name fromEventPattern\n */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any,\n                                    removeHandler?: (handler: Function, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x =>  * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload uses state as an emitted value.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1);\n *\n * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x  * 2, Rx.Scheduler.asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```javascript\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```javascript\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif<T, F>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer<T|F>(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms)\n * ```javascript\n * const numbers = interval(1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```javascript\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using NEVER constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```javascript\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an observable sequence of [key, value] pairs\n * using an optional {@link SchedulerLike} to enumerate the object.\n *\n * ## Example\n * Converts a javascript object to an Observable\n * ```javascript\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78,\n * };\n *\n * const source = pairs(obj);\n *\n * const subscription = source.subscribe(\n *   x => console.log('Next: %s', x),\n *   err => console.log('Error: %s', err),\n *   () => console.log('Completed'),\n * );\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {SchedulerLike} [scheduler] An optional {@link SchedulerLike} to run the\n * enumeration of the input sequence on.\n * @returns {(Observable<[string, T]>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```javascript\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```javascript\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count: number = 0,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `initialDelay` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `initialDelay`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```javascript\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```javascript\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time to wait before\n * emitting the first value of `0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `initialDelay` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zip<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zip<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zip<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R): Observable<R>;\n\nexport function zip<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```javascript\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map((age: number, name: string, isDev: boolean) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n"],"sourceRoot":""}